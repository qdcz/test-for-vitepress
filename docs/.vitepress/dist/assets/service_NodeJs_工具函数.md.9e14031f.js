import{_ as n,c as s,o as a,a as t}from"./app.1760f824.js";const _='{"title":"\u6307\u5B9A\u6587\u4EF6\u5939\u62F7\u8D1D\u5176\u53CA\u4E0B\u5168\u90E8\u6587\u4EF6","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6307\u5B9A\u6587\u4EF6\u5939\u62F7\u8D1D\u5176\u53CA\u4E0B\u5168\u90E8\u6587\u4EF6","slug":"\u6307\u5B9A\u6587\u4EF6\u5939\u62F7\u8D1D\u5176\u53CA\u4E0B\u5168\u90E8\u6587\u4EF6"}],"relativePath":"service/NodeJs/\u5DE5\u5177\u51FD\u6570.md","lastUpdated":1657163803610}',p={},o=t(`<h2 id="\u6307\u5B9A\u6587\u4EF6\u5939\u62F7\u8D1D\u5176\u53CA\u4E0B\u5168\u90E8\u6587\u4EF6" tabindex="-1">\u6307\u5B9A\u6587\u4EF6\u5939\u62F7\u8D1D\u5176\u53CA\u4E0B\u5168\u90E8\u6587\u4EF6</h2><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">recurCopyFolder</span><span class="token punctuation">(</span><span class="token parameter">fromPath<span class="token punctuation">,</span> toPath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token function-variable function">recur</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fromPath<span class="token punctuation">,</span> toPath</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>fromPath<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u7F16\u8BD1=&gt;\u83B7\u53D6\u672C\u5730\u6587\u4EF6\u76EE\u5F55\u5931\u8D25&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> files<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> fileName <span class="token operator">=</span> files<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> stat <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>fromPath<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> execPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>fromPath<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> execCopyPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>toPath<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>stat<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">copyFile</span><span class="token punctuation">(</span>execPath<span class="token punctuation">,</span> execCopyPath<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">mkdirFolderSync</span><span class="token punctuation">(</span>execCopyPath<span class="token punctuation">)</span>
                    <span class="token function">recur</span><span class="token punctuation">(</span>execPath<span class="token punctuation">,</span>execCopyPath<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">recur</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div>`,2),c=[o];function e(u,l,k,i,r,f){return a(),s("div",null,c)}var h=n(p,[["render",e]]);export{_ as __pageData,h as default};
