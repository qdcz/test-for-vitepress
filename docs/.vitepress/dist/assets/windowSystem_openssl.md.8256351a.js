import{_ as n,c as s,o as a,a as t}from"./app.71728ad2.js";const y='{"title":"openssl","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u4EC0\u4E48\u662Fopenssl","slug":"\u4EC0\u4E48\u662Fopenssl"},{"level":2,"title":"\u5BF9\u79F0\u52A0\u5BC6","slug":"\u5BF9\u79F0\u52A0\u5BC6"},{"level":2,"title":"\u975E\u5BF9\u79F0\u52A0\u5BC6\uFF08RSA\uFF09","slug":"\u975E\u5BF9\u79F0\u52A0\u5BC6\uFF08rsa\uFF09"},{"level":2,"title":"\u54C8\u5E0C\u51FD\u6570","slug":"\u54C8\u5E0C\u51FD\u6570"},{"level":3,"title":"MD5\u7B97\u6CD5","slug":"md5\u7B97\u6CD5"},{"level":3,"title":"SHA\u7B97\u6CD5","slug":"sha\u7B97\u6CD5"},{"level":2,"title":"\u6DF7\u5408\u52A0\u5BC6","slug":"\u6DF7\u5408\u52A0\u5BC6"},{"level":2,"title":"\u6570\u5B57\u7B7E\u540D","slug":"\u6570\u5B57\u7B7E\u540D"},{"level":3,"title":"\u83B7\u53D6\u516C\u94A5\u79C1\u94A5","slug":"\u83B7\u53D6\u516C\u94A5\u79C1\u94A5"},{"level":3,"title":"NodeJs\u793A\u4F8B\u4EE3\u7801:","slug":"nodejs\u793A\u4F8B\u4EE3\u7801"},{"level":3,"title":"\u5E38\u89C1\u95EE\u9898","slug":"\u5E38\u89C1\u95EE\u9898"},{"level":2,"title":"\u6570\u5B57\u8BC1\u4E66","slug":"\u6570\u5B57\u8BC1\u4E66"},{"level":2,"title":"ctypro\u6A21\u5757","slug":"ctypro\u6A21\u5757"},{"level":3,"title":"[Hash\u7B97\u6CD5]\u4EE3\u7801\u793A\u4F8B","slug":"hash\u7B97\u6CD5-\u4EE3\u7801\u793A\u4F8B"},{"level":3,"title":"[Hmac\u7B97\u6CD5\uFF08\u52A0\u76D0\uFF09]\u4EE3\u7801\u793A\u4F8B","slug":"hmac\u7B97\u6CD5\uFF08\u52A0\u76D0\uFF09-\u4EE3\u7801\u793A\u4F8B"},{"level":3,"title":"[AES\u7B97\u6CD5(\u5BF9\u79F0\u52A0\u5BC6)]\u4EE3\u7801\u793A\u4F8B","slug":"aes\u7B97\u6CD5-\u5BF9\u79F0\u52A0\u5BC6-\u4EE3\u7801\u793A\u4F8B"},{"level":3,"title":"[RSA\u7B97\u6CD5(\u975E\u5BF9\u79F0\u52A0\u5BC6)]\u4EE3\u7801\u793A\u4F8B","slug":"rsa\u7B97\u6CD5-\u975E\u5BF9\u79F0\u52A0\u5BC6-\u4EE3\u7801\u793A\u4F8B"},{"level":3,"title":"\u6570\u5B57\u7B7E\u540D-\u4EE3\u7801\u793A\u4F8B","slug":"\u6570\u5B57\u7B7E\u540D-\u4EE3\u7801\u793A\u4F8B"},{"level":3,"title":"\u692D\u5706\u66F2\u7EBF\u7B7E\u540D","slug":"\u692D\u5706\u66F2\u7EBF\u7B7E\u540D"}],"relativePath":"windowSystem/openssl.md","lastUpdated":1658064224005}',p={},o=t(`<h1 id="openssl" tabindex="-1">openssl</h1><h2 id="\u4EC0\u4E48\u662Fopenssl" tabindex="-1">\u4EC0\u4E48\u662Fopenssl</h2><p>SSL\u662FSecure Sockets Layer\uFF08\u5B89\u5168\u5957\u63A5\u5C42\u534F\u8BAE\uFF09\u7684\u7F29\u5199\uFF0C\u53EF\u4EE5\u5728Internet\u4E0A\u63D0\u4F9B\u79D8\u5BC6\u6027\u4F20\u8F93\u3002Netscape\u516C\u53F8\u5728\u63A8\u51FA\u7B2C\u4E00\u4E2AWeb\u6D4F\u89C8\u5668\u7684\u540C\u65F6\uFF0C\u63D0\u51FA\u4E86SSL\u534F\u8BAE\u6807\u51C6\u3002\u5176\u76EE\u6807\u662F\u4FDD\u8BC1\u4E24\u4E2A\u5E94\u7528\u95F4\u901A\u4FE1\u7684\u4FDD\u5BC6\u6027\u548C\u53EF\u9760\u6027,\u53EF\u5728\u670D\u52A1\u5668\u7AEF\u548C\u7528\u6237\u7AEF\u540C\u65F6\u5B9E\u73B0\u652F\u6301\u3002\u5DF2\u7ECF\u6210\u4E3AInternet\u4E0A\u4FDD\u5BC6\u901A\u8BAF\u7684\u5DE5\u4E1A\u6807\u51C6\u3002</p><h2 id="\u5BF9\u79F0\u52A0\u5BC6" tabindex="-1">\u5BF9\u79F0\u52A0\u5BC6</h2><p>...\u5F85\u8865\u5145</p><h2 id="\u975E\u5BF9\u79F0\u52A0\u5BC6\uFF08rsa\uFF09" tabindex="-1">\u975E\u5BF9\u79F0\u52A0\u5BC6\uFF08RSA\uFF09</h2><p>\u975E\u5BF9\u79F0\u52A0\u5BC6\u7B97\u6CD5\u662F\u9700\u8981\u4E24\u4E2A\u5BC6\u94A5\uFF0C\u5373\u516C\u94A5\u548C\u79C1\u94A5\u3002\u4ED6\u4EEC\u662F\u4E00\u5BF9\uFF0C\u5982\u679C\u4F7F\u7528\u516C\u94A5\u8FDB\u884C\u5BF9\u6570\u636E\u52A0\u5BC6\uFF0C\u53EA\u6709\u5BF9\u5E94\u7684\u79C1\u94A5\u624D\u80FD\u89E3\u5BC6\u3002\u56E0\u4E3A\u662F\u4F7F\u7528\u52A0\u5BC6\u548C\u89E3\u5BC6\u4E24\u79CD\u5BC6\u94A5\uFF0C\u6240\u4EE5\u79F0\u4E3A\u975E\u5BF9\u79F0\u52A0\u5BC6\u3002</p><p><strong>\u4E00\u822C\u7684\u5DE5\u4F5C\u539F\u7406\u662F</strong></p><div class="language-"><pre><code>A\u548CB\u4E4B\u95F4\u8981\u4E92\u76F8\u901A\u4FE1\uFF0C\u9700\u751F\u6210\u4E24\u4E2A\u5BC6\u94A5\u5BF9\u3002A\u4E0EB\u7684\u79C1\u94A5\u81EA\u5DF1\u4FDD\u5B58,A\u7684\u516C\u94A5\u7ED9B,B\u7684\u516C\u94A5\u7ED9A

\u5728\u901A\u4FE1\u7684\u65F6\u5019:
A\u7ED9B\u53D1\u6D88\u606F \u9700\u8981\u7528B\u7684\u516C\u94A5\u8FDB\u884C\u52A0\u5BC6\u3002B\u6536\u5230A\u7684\u6D88\u606F\u9700\u8981\u7528\u81EA\u5DF1\u7684\u79C1\u94A5\u8FDB\u884C\u89E3\u5BC6\u3002
B\u7ED9A\u53D1\u6D88\u606F \u9700\u8981\u7528A\u7684\u516C\u94A5\u8FDB\u884C\u52A0\u5BC6\u3002A\u6536\u5230B\u7684\u6D88\u606F\u9700\u8981\u7528\u81EA\u5DF1\u7684\u79C1\u94A5\u8FDB\u884C\u89E3\u5BC6\u3002
</code></pre></div><p><strong>\u5176\u4E2D\u7684\u6570\u5B66\u539F\u7406:</strong> \u5728\u6570\u5B66\u4E0A\u6709\u8FD9\u6837\u4E00\u4E2A\u73B0\u8C61\uFF1A\u7ED9\u4E24\u4E2A\u8D28\u6570\uFF0C\u5F88\u5BB9\u6613\u7B97\u51FA\u4ED6\u4EEC\u7684\u4E58\u79EF\uFF0C\u4F46\u662F\u7ED9\u4F60\u4E00\u4E2A\u5F88\u5927\u7684\u6570\uFF0C\u4F60\u5F88\u96BE\u5206\u89E3\u51FA\u4E24\u4E2A\u8D28\u6570\uFF0C\u8BA9\u4ED6\u4EEC\u7684\u4E58\u79EF\u6B63\u597D\u7B49\u4E8E\u8FD9\u4E2A\u5F88\u5927\u7684\u6570\u3002 \u5177\u4F53\u81EA\u884Cgoogle</p><p><strong>\u7528\u9014\uFF1A</strong> \u52A0\u5BC6\u5173\u952E\u6027\u7684\u3001\u6838\u5FC3\u7684\u673A\u5BC6\u6570\u636E</p><p><strong>\u4F18\u70B9</strong>\uFF1A\u7B97\u6CD5\u590D\u6742\uFF0C\u5B89\u5168\u6027\u9AD8\u3002\u901A\u4FE1\u53CC\u65B9\u4E0D\u9700\u8981\u901A\u8FC7\u5EFA\u7ACB\u4E00\u4E2A\u5B89\u5168\u4FE1\u9053\u6765\u8FDB\u884C\u5BC6\u94A5\u7684\u4EA4\u6362\uFF0C\u5BC6\u94A5\u7A7A\u95F4\u5C0F\uFF0C\u964D\u4F4E\u4E86\u5BC6\u94A5\u7BA1\u7406\u7684\u96BE\u5EA6</p><p><strong>\u7F3A\u70B9</strong>\uFF1A</p><ul><li><p>\u52A0\u89E3\u5BC6\u901F\u5EA6\u6162\uFF0C\u4E0D\u9002\u5408\u901A\u4FE1\u8D1F\u8377\u8F83\u91CD\u7684\u60C5\u51B5</p></li><li><p>\u5BA2\u6237\u7AEF\u7528\u81EA\u5DF1\u7684\u516C\u94A5\u52A0\u5BC6\u6570\u636E\u53D1\u9001\u5230\u670D\u52A1\u7AEF\uFF0C\u670D\u52A1\u7AEF\u65E0\u6CD5\u65AD\u5B9A\u662F\u8C01\u53D1\u9001\u7684\uFF1B</p></li><li><p>\u7528\u79C1\u94A5\u52A0\u5BC6\u7684\u6570\u636E\uFF0C\u4EFB\u4F55\u77E5\u9053\u516C\u94A5\u7684\u4EBA\u90FD\u80FD\u89E3\u5BC6\u6570\u636E\u3002</p></li></ul><h2 id="\u54C8\u5E0C\u51FD\u6570" tabindex="-1">\u54C8\u5E0C\u51FD\u6570</h2><p>\u901A\u8FC7\u4E00\u4E2A\u51FD\u6570\uFF0C\u628A\u4EFB\u610F\u957F\u5EA6\u7684\u6570\u636E\u8F6C\u6362\u4E3A\u4E00\u4E2A\u957F\u5EA6\u56FA\u5B9A\u7684\u6570\u636E\u4E32\uFF08\u901A\u5E38\u752816\u8FDB\u5236\u7684\u5B57\u7B26\u4E32\u8868\u793A\uFF09\u3002 \u6458\u8981\uFF08digest\uFF09\uFF1A\u5C06\u957F\u5EA6\u4E0D\u56FA\u5B9A\u7684\u6D88\u606F\u4F5C\u4E3A\u8F93\u5165\uFF0C\u901A\u8FC7\u8FD0\u884Chash\u51FD\u6570\uFF0C\u751F\u6210\u56FA\u5B9A\u957F\u5EA6\u7684\u8F93\u51FA\uFF0C\u8FD9\u6BB5\u8F93\u51FA\u5C31\u53EB\u505A\u6458\u8981\u3002</p><p><strong>\u5E38\u89C1\u7684\u6458\u8981\u7B97\u6CD5 \u4E0E \u5BF9\u5E94\u7684\u8F93\u51FA\u4F4D\u6570\u5982\u4E0B\uFF1A</strong></p><ul><li>MD5\uFF1A128\u4F4D</li><li>SHA-1\uFF1A160\u4F4D</li><li>SHA256 \uFF1A256\u4F4D</li><li>SHA512\uFF1A512\u4F4D</li></ul><p><strong>\u7528\u9014</strong>\uFF1A\u68C0\u6D4B\u6D88\u606F\u6216\u8005\u5BC6\u94A5\u7B49\u4FE1\u606F\u5BF9\u8C61\u4E2D\u7684\u4EFB\u4F55\u5FAE\u5C0F\u7684\u53D8\u5316, \u5E94\u7528\u5230\u6570\u5B57\u7B7E\u540D\u4E2D\u3002\u8FD8\u6709\u4E00\u81F4\u6027\u9A8C\u8BC1\uFF0C\u5B89\u5168\u8BBF\u95EE\u8BA4\u8BC1\u7B49\u3002</p><p><strong>\u4F18\u70B9</strong>\uFF1A\u5355\u5411\u52A0\u5BC6\u7B97\u6CD5\uFF0C\u7B97\u6CD5\u4E0D\u53EF\u9006</p><p><strong>\u7F3A\u70B9</strong>\uFF1A\u53EF\u4EE5\u901A\u8FC7\u78B0\u649E\u6CD5\u7834\u89E3, md5\u548Csha256\u90FD\u662F\u5BC6\u7801\u6563\u5217\u51FD\u6570\uFF0C\u52A0\u5BC6\u4E0D\u53EF\u9006\u3002\u867D\u7136\u90FD\u4E0D\u80FD\u9632\u6B62\u78B0\u649E\uFF0C\u4F46\u662F\u76F8\u5BF9\u800C\u8A00\uFF0Cmd5\u6BD4\u8F83\u5BB9\u6613\u78B0\u649E\uFF0C\u5B89\u5168\u6027\u6CA1\u6709sha256\u9AD8\u3002</p><h3 id="md5\u7B97\u6CD5" tabindex="-1">MD5\u7B97\u6CD5</h3><p>md5\u662F\u4E00\u79CD\u88AB\u5E7F\u6CDB\u4F7F\u7528\u7684\u5BC6\u7801\u6563\u5217\u51FD\u6570\uFF0C\u5BF9\u4E8E\u4EFB\u610F\u957F\u5EA6\u7684\u6D88\u606F\uFF0CMD5\u90FD\u4F1A\u4EA7\u751F\u4E00\u4E2A128bit\u957F\u7684\u54C8\u5E0C\u503C\uFF0C\u79F0\u505A\u6D88\u606F\u6458\u8981\u3002</p><p><strong><a href="https://www.jianshu.com/p/93a8ab5bfeb9" target="_blank" rel="noopener noreferrer">\u7B97\u6CD5\u539F\u7406</a></strong></p><h3 id="sha\u7B97\u6CD5" tabindex="-1">SHA\u7B97\u6CD5</h3><p>SHA-1\u662F\u4E00\u79CD\u5BC6\u7801\u6563\u5217\u51FD\u6570\uFF0C\u5BF9\u4E8E\u4EFB\u610F\u957F\u5EA6\u7684\u6D88\u606F\uFF0CSHA-1\u90FD\u4F1A\u4EA7\u751F\u4E00\u4E2A160bit\u957F\u7684\u54C8\u5E0C\u503C\uFF0C\u79F0\u505A\u6D88\u606F\u6458\u8981\u3002</p><p>SHA256\u662F\u4E00\u79CD\u5BC6\u7801\u6563\u5217\u51FD\u6570\uFF0C\u5BF9\u4E8E\u4EFB\u610F\u957F\u5EA6\u7684\u6D88\u606F\uFF0CSHA256\u90FD\u4F1A\u4EA7\u751F\u4E00\u4E2A256bit\u957F\u7684\u54C8\u5E0C\u503C\uFF0C\u79F0\u505A\u6D88\u606F\u6458\u8981\u3002</p><p>SHA512\u662F\u4E00\u79CD\u5BC6\u7801\u6563\u5217\u51FD\u6570\uFF0C\u5BF9\u4E8E\u4EFB\u610F\u957F\u5EA6\u7684\u6D88\u606F\uFF0CSHA512\u90FD\u4F1A\u4EA7\u751F\u4E00\u4E2A512bit\u957F\u7684\u54C8\u5E0C\u503C\uFF0C\u79F0\u505A\u6D88\u606F\u6458\u8981\u3002</p><p>...</p><p>SHA\u5BB6\u65CF\u7684\u4E94\u4E2A\u7B97\u6CD5\uFF0C\u5206\u522B\u662FSHA-1\u3001SHA-224\u3001SHA-256\u3001SHA-384\uFF0C\u548CSHA-512</p><p><strong><a href="https://blog.csdn.net/qq_51473302/article/details/124851177" target="_blank" rel="noopener noreferrer">\u7B97\u6CD5\u539F\u7406</a></strong></p><h2 id="\u6DF7\u5408\u52A0\u5BC6" tabindex="-1">\u6DF7\u5408\u52A0\u5BC6</h2><p>\u56E0\u4E3A\u5BF9\u79F0\u52A0\u5BC6\u901F\u5EA6\u5FEB\uFF0C\u4F46\u5F88\u96BE\u4FDD\u8BC1\u5BC6\u94A5\u4F20\u8F93\u7684\u5B89\u5168\u6027\uFF0C\u975E\u5BF9\u79F0\u52A0\u5BC6\u52A0\u89E3\u6700\u5927\u7684\u4F18\u70B9\u662F\u4E8B\u5148\u4E0D\u9700\u8981\u4F20\u8F93\u5BC6\u94A5\uFF0C\u4F46\u901F\u5EA6\u6162\uFF0C\u56E0\u6B64\u5B9E\u9645\u5E94\u7528\u4E2D\uFF0C\u7ECF\u5E38\u91C7\u53D6\u6DF7\u5408\u5BC6\u7801\u4F53\u5236\u3002 \u5373\u540C\u65F6\u4F7F\u7528\u5BF9\u79F0\u5BC6\u7801\u548C\u975E\u5BF9\u79F0\u5BC6\u7801\u7684\u4F53\u5236\u3002\u5047\u5982A\u8981\u5411B\u4F20\u8F93\u6570\u636E\uFF0C\u5DE5\u4F5C\u8FC7\u7A0B\u5982\u4E0B\uFF1A</p><ol><li>A\u9009\u53D6\u4E00\u4E2A\u968F\u673A\u6570\uFF0C\u505A\u4E3A\u5BF9\u79F0\u52A0\u5BC6\u7684\u5BC6\u94A5\uFF0C\u5373\u4F1A\u8BDD\u5BC6\u94A5\uFF1B</li><li>A\u7528\u4E0A\u9762\u7684\u4F1A\u8BDD\u5BC6\u94A5\u52A0\u5BC6\u901A\u4FE1\u5185\u5BB9\uFF0C\u518D\u7528B\u7684\u516C\u94A5\u52A0\u5BC6\u4F1A\u8BDD\u5BC6\u94A5\u540E\uFF0C\u4E00\u5E76\u53D1\u9001\u7ED9B;</li><li>B\u6536\u5230\u6570\u636E\u540E\uFF0C\u5148\u7528\u81EA\u5DF1\u7684\u79C1\u94A5\u89E3\u5BC6\u51FA\u4F1A\u8BDD\u5BC6\u94A5\uFF0C\u7136\u540E\u7528\u4F1A\u8BDD\u5BC6\u94A5\u89E3\u5BC6\u51FA\u901A\u4FE1\u5185\u5BB9\u3002</li></ol><h2 id="\u6570\u5B57\u7B7E\u540D" tabindex="-1">\u6570\u5B57\u7B7E\u540D</h2><blockquote><p>\u6570\u5B57\u7B7E\u540D\uFF08\u53C8\u79F0\u516C\u94A5\u6570\u5B57\u7B7E\u540D\uFF09\u662F\u53EA\u6709\u4FE1\u606F\u7684\u53D1\u9001\u8005\u624D\u80FD\u4EA7\u751F\u7684\u522B\u4EBA\u65E0\u6CD5\u4F2A\u9020\u7684\u4E00\u6BB5\u6570\u5B57\u4E32\uFF0C\u8FD9\u6BB5\u6570\u5B57\u4E32\u540C\u65F6\u4E5F\u662F\u5BF9\u4FE1\u606F\u7684\u53D1\u9001\u8005\u53D1\u9001\u4FE1\u606F\u771F\u5B9E\u6027\u7684\u4E00\u4E2A\u6709\u6548\u8BC1\u660E\u3002\u5B83\u662F\u4E00\u79CD\u7C7B\u4F3C\u5199\u5728\u7EB8\u4E0A\u7684\u666E\u901A\u7684\u7269\u7406\u7B7E\u540D\uFF0C\u4F46\u662F\u5728\u4F7F\u7528\u4E86\u516C\u94A5\u52A0\u5BC6\u9886\u57DF\u7684\u6280\u672F\u6765\u5B9E\u73B0\u7684\uFF0C\u7528\u4E8E\u9274\u522B\u6570\u5B57\u4FE1\u606F\u7684\u65B9\u6CD5\u3002\u4E00\u5957\u6570\u5B57\u7B7E\u540D\u901A\u5E38\u5B9A\u4E49\u4E24\u79CD\u4E92\u8865\u7684\u8FD0\u7B97\uFF0C\u4E00\u4E2A\u7528\u4E8E\u7B7E\u540D\uFF0C\u53E6\u4E00\u4E2A\u7528\u4E8E\u9A8C\u8BC1\u3002</p></blockquote><p><code>\u6570\u5B57\u7B7E\u540D</code> \u7EFC\u5408\u4F7F\u7528\u4E86<code>\u6D88\u606F\u6458\u8981</code>\u548C<code>\u975E\u5BF9\u79F0\u52A0\u5BC6</code>\u6280\u672F\uFF0C\u53EF\u4EE5\u4FDD\u8BC1\u63A5\u53D7\u8005\u80FD\u591F\u6838\u5B9E\u53D1\u9001\u8005\u5BF9\u62A5\u6587\u7684\u7B7E\u540D\uFF0C\u53D1\u9001\u8005\u4E8B\u540E\u4E0D\u62B5\u8D56\u62A5\u6587\u7684\u7B7E\u540D\uFF0C\u63A5\u53D7\u8005\u4E0D\u80FD\u7BE1\u6539\u62A5\u6587\u5185\u5BB9\u548C\u4F2A\u9020\u5BF9\u62A5\u6587\u7684\u7B7E\u540D\u3002</p><p>\u5C06\u62A5\u6587\u4F7F\u7528\u4E00\u5B9A\u7684HASH\u7B97\u6CD5\u7B97\u51FA\u4E00\u4E2A\u56FA\u5B9A\u4F4D\u6570\u7684\u6458\u8981\u4FE1\u606F\uFF0C\u7136\u540E\u7528\u79C1\u94A5\u5C06\u6458\u8981\u52A0\u5BC6\uFF0C\u8FDE\u540C\u539F\u6765\u7684\u62A5\u6587\u4E00\u8D77\uFF0C\u53D1\u9001\u7ED9\u63A5\u6536\u8005\uFF0C\u63A5\u53D7\u8005\u901A\u8FC7\u516C\u94A5\u5C06\u6458\u8981\u89E3\u51FA\u6765\uFF0C\u4E5F\u901A\u8FC7HASH\u7B97\u6CD5\u7B97\u51FA\u62A5\u6587\u6458\u8981\uFF0C\u5982\u679C\u4E24\u4E2A\u6458\u8981\u4E00\u81F4\uFF0C\u8BF4\u660E\u6570\u636E\u672A\u88AB\u7BE1\u6539\uFF0C\u6570\u636E\u662F\u5B8C\u6574\u7684\u3002 \u56E0\u4E3A\u63A5\u6536\u8005\u662F\u4F7F\u7528\u516C\u94A5\u89E3\u51FA\u7684\u6570\u636E\uFF0C\u5982\u679C\u6570\u636E\u5B8C\u6574\uFF0C\u8BC1\u660E\u53D1\u9001\u6570\u636E\u7684\u4EBA\u6301\u6709\u79C1\u94A5\uFF0C\u5C31\u80FD\u8BC1\u660E\u53D1\u9001\u8005\u7684\u8EAB\u4EFD\uFF0C\u56E0\u6B64\u6570\u5B57\u7B7E\u540D\u5177\u6709\u8BC1\u660E\u53D1\u9001\u8005\u8EAB\u4EFD\u548C\u9632\u7BE1\u6539\u7684\u529F\u80FD\u3002</p><p>\u53D1\u9001\u62A5\u6587\u65F6\uFF0C\u53D1\u9001\u65B9\u7528\u4E00\u4E2A\u54C8\u5E0C\u51FD\u6570\u4ECE\u62A5\u6587\u6587\u672C\u4E2D\u751F\u6210\u62A5\u6587\u6458\u8981\uFF0C\u7136\u540E\u7528\u53D1\u9001\u65B9\u7684\u79C1\u94A5\u5BF9\u8FD9\u4E2A\u6458\u8981\u8FDB\u884C\u52A0\u5BC6\uFF0C\u8FD9\u4E2A\u52A0\u5BC6\u540E\u7684\u6458\u8981\u5C06\u4F5C\u4E3A\u62A5\u6587\u7684\u6570\u5B57\u7B7E\u540D\u548C\u62A5\u6587\u4E00\u8D77\u53D1\u9001\u7ED9\u63A5\u6536\u65B9\uFF0C\u63A5\u6536\u65B9\u9996\u5148\u7528\u4E0E\u53D1\u9001\u65B9\u4E00\u6837\u7684\u54C8\u5E0C\u51FD\u6570\u4ECE\u63A5\u6536\u5230\u7684\u539F\u59CB\u62A5\u6587\u4E2D\u8BA1\u7B97\u51FA\u62A5\u6587\u6458\u8981\uFF0C\u63A5\u7740\u518D\u516C\u94A5\u6765\u5BF9\u62A5\u6587\u9644\u52A0\u7684\u6570\u5B57\u7B7E\u540D\u8FDB\u884C\u89E3\u5BC6\uFF0C\u5982\u679C\u8FD9\u4E24\u4E2A\u6458\u8981\u76F8\u540C\u3001\u90A3\u4E48\u63A5\u6536\u65B9\u5C31\u80FD\u786E\u8BA4\u8BE5\u62A5\u6587\u662F\u53D1\u9001\u65B9\u7684\u3002 [5] \u6570\u5B57\u7B7E\u540D\u6709\u4E24\u79CD\u529F\u6548\uFF1A\u4E00\u662F\u80FD\u786E\u5B9A\u6D88\u606F\u786E\u5B9E\u662F\u7531\u53D1\u9001\u65B9\u7B7E\u540D\u5E76\u53D1\u51FA\u6765\u7684\uFF0C\u56E0\u4E3A\u522B\u4EBA\u5047\u5192\u4E0D\u4E86\u53D1\u9001\u65B9\u7684\u7B7E\u540D\u3002\u4E8C\u662F\u6570\u5B57\u7B7E\u540D\u80FD\u786E\u5B9A\u6D88\u606F\u7684\u5B8C\u6574\u6027\u3002\u56E0\u4E3A\u6570\u5B57\u7B7E\u540D\u7684\u7279\u70B9\u662F\u5B83\u4EE3\u8868\u4E86\u6587\u4EF6\u7684\u7279\u5F81\uFF0C\u6587\u4EF6\u5982\u679C\u53D1\u751F\u6539\u53D8\uFF0C\u6570\u5B57\u6458\u8981\u7684\u503C\u4E5F\u5C06\u53D1\u751F\u53D8\u5316\u3002\u4E0D\u540C\u7684\u6587\u4EF6\u5C06\u5F97\u5230\u4E0D\u540C\u7684\u6570\u5B57\u6458\u8981\u3002 \u4E00\u6B21\u6570\u5B57\u7B7E\u540D\u6D89\u53CA\u5230\u4E00\u4E2A\u54C8\u5E0C\u51FD\u6570\u3001\u63A5\u6536\u8005\u7684\u516C\u94A5\u3001\u53D1\u9001\u65B9\u7684\u79C1\u94A5\u3002 [5]</p><p><strong>\u7EFC\u5408\u8BB2\u5C31\u662F \u6563\u5217 \u7B7E\u540D \u9A8C\u8BC1</strong></p><h3 id="\u83B7\u53D6\u516C\u94A5\u79C1\u94A5" tabindex="-1">\u83B7\u53D6\u516C\u94A5\u79C1\u94A5</h3><div class="language-shell"><pre><code><span class="token comment"># \u4F7F\u7528git\u81EA\u5E26\u7684openssl\u751F\u6210\u79C1\u94A5\u548C\u516C\u94A5</span>
openssl
<span class="token comment"># \u9881\u53D1\u79C1\u94A5  1024\u6307\u79C1\u94A5\u957F\u5EA6</span>
<span class="token operator">&gt;</span> openssl genrsa -out rsa_private_key.pem <span class="token number">1024</span>  
<span class="token comment"># \u6839\u636E\u79C1\u94A5\u751F\u6210\u516C\u94A5</span>
<span class="token operator">&gt;</span> openssl rsa -in rsa_private_key.pem -pubout -out rsa_public_key.pem
</code></pre></div><h3 id="nodejs\u793A\u4F8B\u4EE3\u7801" tabindex="-1"><strong>NodeJs\u793A\u4F8B\u4EE3\u7801:</strong></h3><div class="language-js"><pre><code><span class="token keyword">const</span> crypo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getPublicKey</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&quot;./ca/public.key&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">getPrivateKey</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&quot;./ca/private.key&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">/**
 * \u7B7E\u540D\u8FC7\u7A0B
 */</span>
<span class="token comment">// \u521B\u5EFA\u7B7E\u540D \u8FD4\u56DEsign\u5BF9\u8C61</span>
<span class="token keyword">let</span> sign <span class="token operator">=</span> crypo<span class="token punctuation">.</span><span class="token function">createSign</span><span class="token punctuation">(</span><span class="token string">&#39;RSA-SHA256&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6307\u5B9A\u52A0\u5BC6\u6570\u636E</span>
sign<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7528\u79C1\u94A5\u5BF9\u6570\u636E\u8FDB\u884C\u7B7E\u540D</span>
<span class="token keyword">let</span> signature <span class="token operator">=</span> sign<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token function">getPrivateKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;base64&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FD9\u662F\u4E00\u4E32\u6570\u5B57\u7B7E\u540D\uFF1A&quot;</span><span class="token punctuation">,</span> signature<span class="token punctuation">)</span>



<span class="token comment">/**
 * \u6821\u9A8C\u8FC7\u7A0B  \u9A8C\u8BC1\u7B7E\u540D\u662F\u5426\u6709\u88AB\u7BE1\u6539
 */</span>
<span class="token comment">// \u521B\u5EFA\u7B7E\u540D\u9A8C\u8BC1 \u8FD4\u56DEverify\u5BF9\u8C61</span>
<span class="token keyword">let</span> verify <span class="token operator">=</span> crypo<span class="token punctuation">.</span><span class="token function">createVerify</span><span class="token punctuation">(</span><span class="token string">&#39;RSA-SHA256&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6307\u5B9A\u9700\u8981\u88AB\u9A8C\u8BC1\u7684\u6570\u636E</span>
verify<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> verifyResult <span class="token operator">=</span> verify<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span><span class="token function">getPublicKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> signature<span class="token punctuation">,</span> <span class="token string">&#39;base64&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u9A8C\u8BC1\u6570\u636E\u7B7E\u540D\u662F\u5426\u4E00\u81F4&quot;</span><span class="token punctuation">,</span> verifyResult<span class="token punctuation">)</span>
</code></pre></div><h3 id="\u5E38\u89C1\u95EE\u9898" tabindex="-1">\u5E38\u89C1\u95EE\u9898</h3><ul><li><strong>\u5728\u8FD0\u884C\u7684\u65F6\u5019\u5982\u679C\u9047\u5230\u8FD9\u79CD\u62A5\u9519,\u9700\u8981\u5C06\u4F60\u5728\u7535\u8111\u5B89\u88C5\u7684openssl\u7A0B\u5E8F\u7ED9\u5378\u8F7D\u8C03\uFF0C\u7136\u540E\u4E5F\u9700\u8981\u5C06openssl\u7684\u73AF\u5883\u53D8\u91CF\u7ED9\u62B9\u9664</strong></li></ul><div class="language-shell"><pre><code>Error: error:25078067:DSO support routines:win32_load:could not load the shared library
    at Sign.sign <span class="token punctuation">(</span>internal/crypto/sig.js:110:29<span class="token punctuation">)</span>
    at Object.sign <span class="token punctuation">(</span>F:<span class="token punctuation">\\</span>xxxxx<span class="token punctuation">\\</span>Koa<span class="token punctuation">\\</span>node_modules<span class="token punctuation">\\</span>jwa<span class="token punctuation">\\</span>index.js:152:45<span class="token punctuation">)</span>
    at Object.jwsSign <span class="token punctuation">[</span>as sign<span class="token punctuation">]</span> <span class="token punctuation">(</span>F:<span class="token punctuation">\\</span>xxxxx<span class="token punctuation">\\</span>Koa<span class="token punctuation">\\</span>node_modules<span class="token punctuation">\\</span>jws<span class="token punctuation">\\</span>lib<span class="token punctuation">\\</span>sign-stream.js:32:24<span class="token punctuation">)</span>
    at Object.module.exports <span class="token punctuation">[</span>as sign<span class="token punctuation">]</span> <span class="token punctuation">(</span>F:<span class="token punctuation">\\</span>xxxxx<span class="token punctuation">\\</span>Koa<span class="token punctuation">\\</span>node_modules<span class="token punctuation">\\</span>jsonwebtoken<span class="token punctuation">\\</span>sign.js:204:16<span class="token punctuation">)</span>
    at Object.<span class="token operator">&lt;</span>anonymous<span class="token operator">&gt;</span> <span class="token punctuation">(</span>F:<span class="token punctuation">\\</span>xxxxx<span class="token punctuation">\\</span>Koa<span class="token punctuation">\\</span>jwt.js:4:17<span class="token punctuation">)</span>
    at Module._compile <span class="token punctuation">(</span>internal/modules/cjs/loader.js:1085:14<span class="token punctuation">)</span>
    at Object.Module._extensions<span class="token punctuation">..</span>js <span class="token punctuation">(</span>internal/modules/cjs/loader.js:1114:10<span class="token punctuation">)</span>
    at Module.load <span class="token punctuation">(</span>internal/modules/cjs/loader.js:950:32<span class="token punctuation">)</span>
    at Function.Module._load <span class="token punctuation">(</span>internal/modules/cjs/loader.js:790:12<span class="token punctuation">)</span>
    at Function.executeUserEntryPoint <span class="token punctuation">[</span>as runMain<span class="token punctuation">]</span> <span class="token punctuation">(</span>internal/modules/run_main.js:76:12<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  opensslErrorStack: <span class="token punctuation">[</span>
    <span class="token string">&#39;error:0E076071:configuration file routines:module_run:unknown module name&#39;</span>,
    <span class="token string">&#39;error:0E07506E:configuration file routines:module_load_dso:error loading dso&#39;</span>,
    <span class="token string">&#39;error:25070067:DSO support routines:DSO_load:could not load the shared library&#39;</span>
  <span class="token punctuation">]</span>,
  library: <span class="token string">&#39;DSO support routines&#39;</span>,
  function: <span class="token string">&#39;win32_load&#39;</span>,
  reason: <span class="token string">&#39;could not load the shared library&#39;</span>,
  code: <span class="token string">&#39;ERR_OSSL_DSO_COULD_NOT_LOAD_THE_SHARED_LIBRARY&#39;</span>
<span class="token punctuation">}</span>

</code></pre></div><h2 id="\u6570\u5B57\u8BC1\u4E66" tabindex="-1">\u6570\u5B57\u8BC1\u4E66</h2><p>\u7531CA\u9881\u53D1\u7ED9\u7F51\u7AD9\u7684\u8EAB\u4EFD\u8BC1\u4E66\uFF0C\u91CC\u9762\u5305\u542B\u4E86\u8BE5\u7F51\u7AD9\u7684\u516C\u94A5\uFF0C\u6709\u6548\u65F6\u95F4\uFF0C\u7F51\u7AD9\u7684\u5730\u5740\uFF0CCA\u7684\u6570\u5B57\u7B7E\u540D\u7B49\u3002 \u6240\u8C13\u7684CA\u6570\u5B57\u7B7E\u540D\uFF0C\u5B9E\u9645\u4E0A\u5C31\u662F\u4F7F\u7528\u4E86CA\u7684\u79C1\u94A5\u5C06\u7F51\u7AD9\u7684\u516C\u94A5\u7B49\u4FE1\u606F\u8FDB\u884C\u4E86\u7B7E\u540D\uFF0C\u5F53\u5BA2\u6237\u7AEF\u8BF7\u6C42\u670D\u52A1\u5668\u7684\u65F6\u5019\uFF0C\u7F51\u7AD9\u4F1A\u628A\u8BC1\u4E66\u53D1\u7ED9\u5BA2\u6237\u7AEF\uFF0C\u5BA2\u6237\u7AEF\u9996\u5148\u53EF\u4EE5\u901A\u8FC7CA\u7684\u6570\u5B57\u7B7E\u540D\u6821\u9A8CCA\u7684\u8EAB\u4EFD\uFF0C\u4E5F\u80FD\u8BC1\u660E\u8BC1\u4E66\u7684\u771F\u5B9E\u5B8C\u6574\u6027\uFF08\u4E4B\u524D\u8BF4\u4E86\uFF0C\u6570\u5B57\u7B7E\u540D\u62E5\u6709\u8BC1\u660E\u8EAB\u4EFD\u548C\u9632\u7BE1\u6539\u7684\u529F\u80FD\uFF09\u3002</p><p>\u5BA2\u6237\u7AEF\u6709\u6CA1\u6709\u53EF\u80FD\u5230\u4E00\u4E2A\u5047\u5192\u7684CA\u53BB\u6821\u9A8C\u6570\u5B57\u8BC1\u4E66\u5462\uFF1F\u4E0D\u592A\u53EF\u80FD\uFF0C\u56E0\u4E3ACA\u7684\u5730\u5740\u662F\u5185\u5D4C\u5728\u6D4F\u89C8\u5668\u4E2D\u7684\uFF0C\u5F88\u96BE\u88AB\u7BE1\u6539\u3002</p><h2 id="ctypro\u6A21\u5757" tabindex="-1">ctypro\u6A21\u5757</h2><h3 id="hash\u7B97\u6CD5-\u4EE3\u7801\u793A\u4F8B" tabindex="-1">[Hash\u7B97\u6CD5]\u4EE3\u7801\u793A\u4F8B</h3><div class="language-js"><pre><code><span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> hash <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;md5&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// \u6307\u5B9A\u8981\u6458\u8981\u7684\u539F\u59CB\u5185\u5BB9,\u53EF\u4EE5\u5728\u6458\u8981\u88AB\u8F93\u51FA\u4E4B\u524D\u4F7F\u7528\u591A\u6B21update\u65B9\u6CD5\u6765\u6DFB\u52A0\u6458\u8981\u5185\u5BB9</span>
hash<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, world!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
hash<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, nodejs!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> val <span class="token operator">=</span> hash<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
</code></pre></div><h3 id="hmac\u7B97\u6CD5\uFF08\u52A0\u76D0\uFF09-\u4EE3\u7801\u793A\u4F8B" tabindex="-1">[Hmac\u7B97\u6CD5\uFF08\u52A0\u76D0\uFF09]\u4EE3\u7801\u793A\u4F8B</h3><div class="language-js"><pre><code><span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> hmac <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHmac</span><span class="token punctuation">(</span><span class="token string">&#39;sha256&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;secret-key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
hmac<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, world!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
hmac<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, nodejs!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> val <span class="token operator">=</span> hmac<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
</code></pre></div><h3 id="aes\u7B97\u6CD5-\u5BF9\u79F0\u52A0\u5BC6-\u4EE3\u7801\u793A\u4F8B" tabindex="-1">[AES\u7B97\u6CD5(\u5BF9\u79F0\u52A0\u5BC6)]\u4EE3\u7801\u793A\u4F8B</h3><div class="language-js"><pre><code><span class="token keyword">var</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u52A0\u5BC6</span>
<span class="token keyword">function</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span>secret</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> cipher <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createCipher</span><span class="token punctuation">(</span><span class="token string">&#39;aes192&#39;</span><span class="token punctuation">,</span>secret<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//</span>
    <span class="token keyword">var</span> enc <span class="token operator">=</span> cipher<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    enc <span class="token operator">+=</span> cipher<span class="token punctuation">.</span><span class="token function">final</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> enc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u89E3\u5BC6</span>
<span class="token keyword">function</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span>secret</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> decipher <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createDecipher</span><span class="token punctuation">(</span><span class="token string">&#39;aes192&#39;</span><span class="token punctuation">,</span>secret<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> dec <span class="token operator">=</span> decipher<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dec <span class="token operator">+=</span> decipher<span class="token punctuation">.</span><span class="token function">final</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> dec<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token string">&#39;Hello, this is a secret message!&#39;</span>
<span class="token keyword">var</span> key <span class="token operator">=</span> <span class="token string">&#39;Password!&#39;</span>
<span class="token keyword">var</span> encrypted <span class="token operator">=</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
<span class="token keyword">var</span> decrypted <span class="token operator">=</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>encrypted<span class="token punctuation">,</span> key<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Plain text: &#39;</span> <span class="token operator">+</span> data<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Encrypted text: &#39;</span> <span class="token operator">+</span> encrypted<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Decrypted text: &#39;</span> <span class="token operator">+</span> decrypted<span class="token punctuation">)</span>
</code></pre></div><h3 id="rsa\u7B97\u6CD5-\u975E\u5BF9\u79F0\u52A0\u5BC6-\u4EE3\u7801\u793A\u4F8B" tabindex="-1">[RSA\u7B97\u6CD5(\u975E\u5BF9\u79F0\u52A0\u5BC6)]\u4EE3\u7801\u793A\u4F8B</h3><div class="language-js"><pre><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
      crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4ECE\u6587\u4EF6\u52A0\u8F7Dkey:</span>
<span class="token keyword">function</span> <span class="token function">loadKey</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// key\u5B9E\u9645\u4E0A\u5C31\u662FPEM\u7F16\u7801\u7684\u5B57\u7B26\u4E32:</span>
    <span class="token keyword">return</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span>
    prvKey <span class="token operator">=</span> <span class="token function">loadKey</span><span class="token punctuation">(</span><span class="token string">&#39;./rsa-prv.pem&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    pubKey <span class="token operator">=</span> <span class="token function">loadKey</span><span class="token punctuation">(</span><span class="token string">&#39;./rsa-pub.pem&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    message <span class="token operator">=</span> <span class="token string">&#39;Hello, world!&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528\u79C1\u94A5\u52A0\u5BC6:</span>
<span class="token keyword">let</span> enc_by_prv <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">privateEncrypt</span><span class="token punctuation">(</span>prvKey<span class="token punctuation">,</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;encrypted by private key: &#39;</span> <span class="token operator">+</span> enc_by_prv<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528\u516C\u94A5\u89E3\u5BC6</span>
<span class="token keyword">let</span> dec_by_pub <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">publicDecrypt</span><span class="token punctuation">(</span>pubKey<span class="token punctuation">,</span> enc_by_prv<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;decrypted by public key: &#39;</span> <span class="token operator">+</span> dec_by_pub<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528\u516C\u94A5\u52A0\u5BC6:</span>
<span class="token keyword">let</span> enc_by_pub <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">publicEncrypt</span><span class="token punctuation">(</span>pubKey<span class="token punctuation">,</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;encrypted by public key: &#39;</span> <span class="token operator">+</span> enc_by_pub<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528\u79C1\u94A5\u89E3\u5BC6:</span>
<span class="token keyword">let</span> dec_by_prv <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">privateDecrypt</span><span class="token punctuation">(</span>prvKey<span class="token punctuation">,</span> enc_by_pub<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;decrypted by private key: &#39;</span> <span class="token operator">+</span> dec_by_prv<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u901A\u8FC7\u8F93\u51FA\u7ED3\u679C\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA\uFF0C\u65E0\u8BBA\u662F\u79C1\u94A5\u52A0\u5BC6\uFF0C\u516C\u94A5\u89E3\u5BC6\uFF0C\u8FD8\u662F\u516C\u94A5\u52A0\u5BC6\uFF0C\u79C1\u94A5\u89E3\u5BC6\uFF0C\u89E3\u5BC6\u540E\u7684\u6D88\u606F\u90FD\u4E0E\u539F\u59CB\u6D88\u606F\u76F8\u540C\u3002</p><h3 id="\u6570\u5B57\u7B7E\u540D-\u4EE3\u7801\u793A\u4F8B" tabindex="-1">\u6570\u5B57\u7B7E\u540D-\u4EE3\u7801\u793A\u4F8B</h3><p>\u5982\u4E0A \uFF1A\u6570\u5B57\u7B7E\u540D</p><h3 id="\u692D\u5706\u66F2\u7EBF\u7B7E\u540D" tabindex="-1">\u692D\u5706\u66F2\u7EBF\u7B7E\u540D</h3><p>\u692D\u5706\u66F2\u7EBF\u52A0\u5BC6\u7B97\u6CD5\uFF0C\u5373\uFF1AElliptic Curve Cryptography\uFF0C\u7B80\u79F0ECC\uFF0C\u662F\u57FA\u4E8E\u692D\u5706\u66F2\u7EBF\u6570\u5B66\u7406\u8BBA\u5B9E\u73B0\u7684\u4E00\u79CD\u975E\u5BF9\u79F0\u52A0\u5BC6\u7B97\u6CD5\u3002 \u76F8\u6BD4RSA\uFF0CECC\u4F18\u52BF\u662F\u53EF\u4EE5\u4F7F\u7528\u66F4\u77ED\u7684\u5BC6\u94A5\uFF0C\u6765\u5B9E\u73B0\u4E0ERSA\u76F8\u5F53\u6216\u66F4\u9AD8\u7684\u5B89\u5168\u3002</p><p>\u539F\u7406 \u692D\u5706\u66F2\u7EBF\u52A0\u89E3\u5BC6\u539F\u7406\uFF1A \u516C\u5F00\u5BC6\u94A5\u7B97\u6CD5\u603B\u662F\u8981\u57FA\u4E8E\u4E00\u4E2A\u6570\u5B66\u4E0A\u7684\u96BE\u9898\u3002\u6BD4\u5982RSA\u4F9D\u636E\u7684\u662F\uFF1A\u7ED9\u5B9A\u4E24\u4E2A\u7D20\u6570p\u3001q \u5F88\u5BB9\u6613\u76F8\u4E58\u5F97\u5230n\uFF0C\u800C\u5BF9n\u8FDB\u884C\u56E0\u5F0F\u5206\u89E3\u5374\u76F8\u5BF9\u56F0\u96BE\u3002 \u90A3\u692D\u5706\u66F2\u7EBF\u4E0A\u6709\u4EC0\u4E48\u96BE\u9898\u5462\uFF1F\u8003\u8651\u5982\u4E0B\u7B49\u5F0F\uFF1A</p><p>K=kG [\u5176\u4E2DK,G\u4E3AEp(a,b)\u4E0A\u7684\u70B9\uFF0Ck\u4E3A\u5C0F\u4E8En\uFF08n\u662F\u70B9G\u7684\u9636\uFF09\u7684\u6574\u6570]</p><p>\u7ED9\u5B9Ak\u548CG\uFF0C\u6839\u636E\u52A0\u6CD5\u6CD5\u5219\uFF0C\u8BA1\u7B97K\u5F88\u5BB9\u6613\uFF1B\u4F46\u7ED9\u5B9AK\u548CG\uFF0C\u6C42k\u5C31\u76F8\u5BF9\u56F0\u96BE\u4E86\u3002\u8FD9\u5C31\u662F\u692D\u5706\u66F2\u7EBF\u52A0\u5BC6\u7B97\u6CD5\u91C7\u7528\u7684\u96BE\u9898\u3002</p><p>\u6211\u4EEC\u628A\u70B9G\u79F0\u4E3A\u57FA\u70B9\uFF08base point\uFF09\uFF0Ck\uFF08k&lt;n\uFF0Cn\u4E3A\u57FA\u70B9G\u7684\u9636\uFF09\u79F0\u4E3A\u79C1\u6709\u5BC6\u94A5\uFF08privte key\uFF09\uFF0CK\u79F0\u4E3A\u516C\u5F00\u5BC6\u94A5\uFF08public key)\u3002</p><p>k = 2\uFF0CK\u4E3AG\u76842\u500D\u70B9; k = 3\uFF0CK\u4E3AG\u76843\u500D\u70B9; k = 4\uFF0CK\u4E3AG\u76844\u500D\u70B9; \u2026</p><p>\u5982\u679C\u7ED9\u5B9A\u692D\u5706\u66F2\u7EBF\u4E0AK\u4E3AG\u7684\u4E00\u4E2A\u500D\u70B9\uFF0C\u5982\u4F55\u8BA1\u7B97K\u4E3AG\u7684\u591A\u5C11\u500D\uFF1F \u76F4\u89C2\u4E0A\u7406\u89E3\uFF0C\u6B63\u5411\u8BA1\u7B97\u4E00\u4E2A\u500D\u70B9\u662F\u5BB9\u6613\u7684\uFF0C\u53CD\u5411\u8BA1\u7B97\u4E00\u4E2A\u70B9K\u662FG\u7684\u51E0\u500D\u70B9\u5219\u56F0\u96BE\u7684\u591A\u3002 \u56E0\u6B64\u5728\u692D\u5706\u66F2\u7EBF\u7B97\u6CD5\u4E2D\uFF0C\u5C06\u500D\u6570k\u505A\u4E3A\u79C1\u94A5\uFF0C\u5C06K\u505A\u4E3A\u516C\u94A5\u3002</p><p>\u692D\u5706\u66F2\u7EBF\u6570\u5B57\u7B7E\u540D\u539F\u7406:\u692D\u5706\u66F2\u7EBF\u6570\u5B57\u7B7E\u540D\u7B97\u6CD5\uFF08ECDSA\uFF09\u662F\u4F7F\u7528\u692D\u5706\u66F2\u7EBF\u5BC6\u7801\uFF08ECC\uFF09\u5BF9\u6570\u5B57\u7B7E\u540D\u7B97\u6CD5\uFF08DSA\uFF09\u7684\u6A21\u62DF\u3002</p><p>secp256k1\u66F2\u7EBF \u6BD4\u7279\u5E01\u4F7F\u7528\u692D\u5706\u66F2\u7EBF\u7B97\u6CD5\u751F\u6210\u516C\u94A5\u548C\u79C1\u94A5\uFF0C\u9009\u62E9\u7684\u662Fsecp256k1\u66F2\u7EBF\u3002 \u5177\u4F53\u4F7F\u7528\u8FC7\u7A0B\u662F\uFF0C\u5148\u968F\u673A\u751F\u6210\u4E00\u4E2A\u79C1\u94A5\uFF0C\u7136\u540E\u901A\u8FC7\u692D\u5706\u66F2\u7EBF\u52A0\u5BC6\u7B97\u6CD5\uFF08ECC\uFF09\u5F97\u5230\u4E00\u4E2A\u516C\u94A5\uFF0C\u7136\u540E\u518D\u4F7F\u7528\u692D\u5706\u66F2\u7EBF\u7B7E\u540D\u7B97\u6CD5\uFF08ECDSA\uFF09\u548C\u79C1\u94A5\u7ED3\u5408\u8FDB\u884C\u7B7E\u540D</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> randomBytes <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> secp256k1 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;secp256k1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ecdsa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;ecdsa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u968F\u673A\u751F\u6210\u4E00\u4E2A\u6570, \u4F5C\u4E3A\u901A\u4FE1\u5185\u5BB9</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">randomBytes</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u968F\u673A\u4EA7\u751F\u4E00\u4E2A\u79C1\u94A5</span>
<span class="token keyword">let</span> privKey
<span class="token keyword">do</span> <span class="token punctuation">{</span>
  privKey <span class="token operator">=</span> <span class="token function">randomBytes</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>privKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>secp256k1<span class="token punctuation">.</span><span class="token function">privateKeyVerify</span><span class="token punctuation">(</span>privKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6839\u636E\u79C1\u94A5\u5BFC\u51FA\u516C\u94A5</span>
<span class="token keyword">const</span> pubKey <span class="token operator">=</span> secp256k1<span class="token punctuation">.</span><span class="token function">publicKeyCreate</span><span class="token punctuation">(</span>privKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pubKey<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B7E\u540D</span>
<span class="token keyword">const</span> signature <span class="token operator">=</span> ecdsa<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> privKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sig<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u9A8C\u7B7E</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ecdsa<span class="token punctuation">.</span><span class="token function">verify</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> signature<span class="token punctuation">,</span> pubKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u6838\u67E5\u7B7E\u540D\u662F\u5426\u6B63\u786E</span>
<span class="token comment">// =&gt; true</span>
</code></pre></div>`,73),e=[o];function c(u,l,i,k,r,d){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{y as __pageData,f as default};
