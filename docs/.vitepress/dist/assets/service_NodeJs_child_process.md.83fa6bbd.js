import{_ as n,c as s,o as a,a as t}from"./app.71728ad2.js";const m='{"title":"child_process","description":"","frontmatter":{},"headers":[{"level":2,"title":".spawn()","slug":"spawn"},{"level":2,"title":".exec()","slug":"exec"},{"level":2,"title":".execFile()","slug":"execfile"},{"level":2,"title":".fork()","slug":"fork"},{"level":2,"title":"\u65B9\u6CD5","slug":"\u65B9\u6CD5"},{"level":3,"title":"exec()","slug":"exec-1"},{"level":3,"title":".execFile()","slug":"execfile-1"},{"level":3,"title":".fork()","slug":"fork-1"},{"level":3,"title":".spawn()","slug":"spawn-1"},{"level":3,"title":"options.detached","slug":"options-detached"},{"level":3,"title":"options.stdio","slug":"options-stdio"},{"level":2,"title":"\u5B50\u7C7BChildProcess \u4E8B\u4EF6","slug":"\u5B50\u7C7Bchildprocess-\u4E8B\u4EF6"},{"level":3,"title":"close","slug":"close"},{"level":3,"title":"disconnect","slug":"disconnect"},{"level":3,"title":"error","slug":"error"},{"level":3,"title":"exit","slug":"exit"},{"level":3,"title":"message","slug":"message"},{"level":3,"title":"spawn","slug":"spawn-2"},{"level":2,"title":"\u5C5E\u6027","slug":"\u5C5E\u6027"},{"level":3,"title":"subprocess.channel","slug":"subprocess-channel"},{"level":3,"title":"subprocess.channel.ref()","slug":"subprocess-channel-ref"},{"level":3,"title":"subprocess.channel.unref()","slug":"subprocess-channel-unref"},{"level":3,"title":"subprocess.connected","slug":"subprocess-connected"},{"level":3,"title":"subprocess.disconnect()","slug":"subprocess-disconnect"},{"level":3,"title":"subprocess.exitCode","slug":"subprocess-exitcode"},{"level":3,"title":"subprocess.kill([signal])","slug":"subprocess-kill-signal"},{"level":3,"title":"subprocess.killed","slug":"subprocess-killed"},{"level":3,"title":"subprocess.pid","slug":"subprocess-pid"},{"level":3,"title":"subprocess.ref()","slug":"subprocess-ref"},{"level":3,"title":"subprocess.send(message[, sendHandle[, options]][, callback])","slug":"subprocess-send-message-sendhandle-options-callback"},{"level":3,"title":"subprocess.signalCode","slug":"subprocess-signalcode"},{"level":3,"title":"subprocess.spawnargs","slug":"subprocess-spawnargs"},{"level":3,"title":"subprocess.spawnfile","slug":"subprocess-spawnfile"},{"level":3,"title":"subprocess.stderr","slug":"subprocess-stderr"},{"level":3,"title":"subprocess.stdin","slug":"subprocess-stdin"},{"level":3,"title":"subprocess.stdout","slug":"subprocess-stdout"},{"level":3,"title":"subprocess.stdio","slug":"subprocess-stdio"},{"level":3,"title":"subprocess.unref()","slug":"subprocess-unref"},{"level":2,"title":"maxBuffer \u548C Unicode","slug":"maxbuffer-\u548C-unicode"},{"level":2,"title":"shell \u7684\u8981\u6C42","slug":"shell-\u7684\u8981\u6C42"},{"level":2,"title":"\u9ED8\u8BA4\u7684 Windows shell","slug":"\u9ED8\u8BA4\u7684-windows-shell"},{"level":2,"title":"\u9AD8\u7EA7\u5E8F\u5217\u5316","slug":"\u9AD8\u7EA7\u5E8F\u5217\u5316"}],"relativePath":"service/NodeJs/child_process.md","lastUpdated":1657610014657}',p={},o=t(`<h1 id="child-process" tabindex="-1">child_process</h1><p>child_process \u6A21\u5757\u63D0\u4F9B\u4E86\u884D\u751F\u5B50\u8FDB\u7A0B\u7684\u80FD\u529B, \u7B80\u5355\u6765\u8BF4\u5C31\u662F\u6267\u884Ccmd\u547D\u4EE4\u7684\u80FD\u529B</p><h2 id="spawn" tabindex="-1">.spawn()</h2><p>\u9002\u7528\u4E8E\u8FD4\u56DE\u5927\u91CF\u6570\u636E\uFF0C\u4F8B\u5982\u56FE\u50CF\u5904\u7406\uFF0C\u4E8C\u8FDB\u5236\u6570\u636E\u5904\u7406\u3002</p><h2 id="exec" tabindex="-1">.exec()</h2><p>\u9002\u7528\u4E8E\u5C0F\u91CF\u6570\u636E\uFF0CmaxBuffer \u9ED8\u8BA4\u503C\u4E3A 200 * 1024 \u8D85\u51FA\u8FD9\u4E2A\u9ED8\u8BA4\u503C\u5C06\u4F1A\u5BFC\u81F4\u7A0B\u5E8F\u5D29\u6E83\uFF0C\u6570\u636E\u91CF\u8FC7\u5927\u53EF\u91C7\u7528 spawn</p><h2 id="execfile" tabindex="-1">.execFile()</h2><p>\u7C7B\u4F3C child_process.exec()\uFF0C\u533A\u522B\u662F\u4E0D\u80FD\u901A\u8FC7 shell \u6765\u6267\u884C\uFF0C\u4E0D\u652F\u6301\u50CF I/O \u91CD\u5B9A\u5411\u548C\u6587\u4EF6\u67E5\u627E\u8FD9\u6837\u7684\u884C\u4E3A</p><h2 id="fork" tabindex="-1">.fork()</h2><p>\u884D\u751F\u65B0\u7684\u8FDB\u7A0B\uFF0C\u8FDB\u7A0B\u4E4B\u95F4\u662F\u76F8\u4E92\u72EC\u7ACB\u7684\uFF0C\u6BCF\u4E2A\u8FDB\u7A0B\u90FD\u6709\u81EA\u5DF1\u7684 V8 \u5B9E\u4F8B\u3001\u5185\u5B58\uFF0C\u7CFB\u7EDF\u8D44\u6E90\u662F\u6709\u9650\u7684\uFF0C\u4E0D\u5EFA\u8BAE\u884D\u751F\u592A\u591A\u7684\u5B50\u8FDB\u7A0B\u51FA\u6765\uFF0C \u901A\u957F\u6839\u636E\u7CFB\u7EDF** CPU \u6838\u5FC3\u6570**\u8BBE\u7F6E\u3002</p><p>\u5F02\u6B65\u521B\u5EFA\u8FDB\u7A0B</p><p>spawn\u3001fork\u3001exec\u3001execFile\u90FD\u9075\u5FAA\u5F02\u6B65\u7F16\u7A0B\u6A21\u5F0F\uFF0C\u6BCF\u4E2A\u65B9\u6CD5\u90FD\u8FD4\u56DEchildProcess\u5B9E\u4F8B\u3002</p><h2 id="\u65B9\u6CD5" tabindex="-1">\u65B9\u6CD5</h2><h3 id="exec-1" tabindex="-1">exec()</h3><p>\u8BED\u6CD5\uFF1A</p><div class="language-html"><pre><code>options <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Object</span><span class="token punctuation">&gt;</span></span>
    cwd <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>URL</span><span class="token punctuation">&gt;</span></span> \u5B50\u8FDB\u7A0B\u7684\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\u3002 \u9ED8\u8BA4\u503C: process.cwd()\u3002
    env <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Object</span><span class="token punctuation">&gt;</span></span> \u73AF\u5883\u53D8\u91CF\u952E\u503C\u5BF9\u3002 \u9ED8\u8BA4\u503C: process.<wbr>env\u3002
    encoding <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u9ED8\u8BA4\u503C: &#39;utf8&#39;
    shell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u7528\u4E8E\u6267\u884C\u547D\u4EE4\u7684 shell\u3002 \u8BF7\u53C2\u9605 shell \u7684\u8981\u6C42\u548C\u9ED8\u8BA4\u7684 Windows shell\u3002 \u9ED8\u8BA4\u503C: Unix \u4E0A\u662F &#39;/bin/sh&#39;\uFF0CWindows \u4E0A\u662F process.<wbr>env.ComSpec\u3002
    signal <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AbortSignal</span><span class="token punctuation">&gt;</span></span> \u5141\u8BB8\u4F7F\u7528\u4E2D\u6B62\u4FE1\u53F7\u4E2D\u6B62\u5B50\u8FDB\u7A0B\u3002
    timeout <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u9ED8\u8BA4\u503C: 0
    maxBuffer <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u6807\u51C6\u8F93\u51FA\u6216\u6807\u51C6\u9519\u8BEF\u4E0A\u5141\u8BB8\u7684\u6700\u5927\u6570\u636E\u91CF\uFF08\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\uFF09\u3002 \u5982\u679C\u8D85\u8FC7\uFF0C\u5219\u5B50\u8FDB\u7A0B\u5C06\u7EC8\u6B62\u5E76\u622A\u65AD\u4EFB\u4F55\u8F93\u51FA\u3002 \u8BF7\u53C2\u9605 maxBuffer \u548C Unicode \u7684\u6CE8\u610F\u4E8B\u9879\u3002 \u9ED8\u8BA4\u503C: 1024 * 1024\u3002
    killSignal <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>integer</span><span class="token punctuation">&gt;</span></span> \u9ED8\u8BA4\u503C: &#39;SIGTERM&#39;
    uid <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u8BBE\u7F6E\u8FDB\u7A0B\u7684\u7528\u6237\u6807\u8BC6\uFF08\u53C2\u89C1 setuid(2)\uFF09\u3002
    gid <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u8BBE\u7F6E\u8FDB\u7A0B\u7684\u7FA4\u7EC4\u6807\u8BC6\uFF08\u53C2\u89C1 setgid(2)\uFF09\u3002
    windowsHide <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span> \u9690\u85CF\u901A\u5E38\u5728 Windows \u7CFB\u7EDF\u4E0A\u521B\u5EFA\u7684\u5B50\u8FDB\u7A0B\u63A7\u5236\u53F0\u7A97\u53E3\u3002 \u9ED8\u8BA4\u503C: false\u3002
callback <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Function</span><span class="token punctuation">&gt;</span></span> \u5F53\u8FDB\u7A0B\u7EC8\u6B62\u65F6\u4F7F\u7528\u8F93\u51FA\u8C03\u7528\u3002
    error <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Error</span><span class="token punctuation">&gt;</span></span>
    stdout <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Buffer</span><span class="token punctuation">&gt;</span></span>
    stderr <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Buffer</span><span class="token punctuation">&gt;</span></span>
\u8FD4\u56DE: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ChildProcess</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u884D\u751F shell\uFF0C\u7136\u540E\u5728\u8BE5 shell \u4E2D\u6267\u884C command\uFF0C\u7F13\u51B2\u4EFB\u4F55\u751F\u6210\u7684\u8F93\u51FA\u3002 \u4F20\u7ED9\u6267\u884C\u51FD\u6570\u7684 command \u5B57\u7B26\u4E32\u7531 shell \u76F4\u63A5\u5904\u7406\uFF0C \u7279\u6B8A\u5B57\u7B26\uFF08\u56E0 shell \u800C\u5F02\uFF09\u9700\u8981\u8FDB\u884C\u76F8\u5E94\u5904\u7406\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">const</span> util <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:util&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> exec <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;echo &quot;The \\\\$HOME variable is $HOME&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// $HOME \u53D8\u91CF\u5728\u7B2C\u4E00\u4E2A\u5B9E\u4F8B\u4E2D\u88AB\u8F6C\u4E49\uFF0C\u4F46\u5728\u7B2C\u4E8C\u4E2A\u5B9E\u4F8B\u4E2D\u6CA1\u6709\u3002</span>


<span class="token comment">/**
 * \u56DE\u8C03\u6A21\u5F0F
 * \u4F7F\u7528\u53CC\u5F15\u53F7\uFF0C\u8FD9\u6837\u8DEF\u5F84\u4E2D\u7684\u7A7A\u683C\u5C31\u4E0D\u4F1A\u88AB\u89E3\u91CA\u4E3A\u591A\u4E2A\u53C2\u6570\u7684\u5206\u9694\u7B26\u3002
 */</span>
<span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;&quot;/path/to/test file/test.sh&quot; arg1 arg2&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">exec error: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stdout: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>stdout<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stderr: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>stderr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">/**
 * \u5F02\u6B65\u8F6C\u540C\u6B65\u6A21\u5F0F
 * 
 \u5982\u679C\u6B64\u65B9\u6CD5\u4F5C\u4E3A\u5176 util.promisify() \u7248\u672C\u88AB\u8C03\u7528\uFF0C\u5219\u5176\u5C06\u4E3A\u5177\u6709 stdout \u548C stderr \u5C5E\u6027\u7684 Object 
 \u8FD4\u56DE Promise\u3002\u8FD4\u56DE\u7684 ChildProcess \u5B9E\u4F8B\u4F5C\u4E3A child \u5C5E\u6027\u9644\u52A0\u5230 Promise\u3002 \u5982\u679C\u51FA\u73B0\u9519\u8BEF
 \uFF08\u5305\u62EC\u4EFB\u4F55\u5BFC\u81F4\u9000\u51FA\u7801\u4E0D\u662F 0 \u7684\u9519\u8BEF\uFF09,\u5219\u5C06\u8FD4\u56DE\u88AB\u62D2\u7EDD\u7684 promise,\u5176\u5177\u6709\u4E0E\u56DE\u8C03\u4E2D\u7ED9\u5B9A\u76F8\u540C\u7684 error\u5BF9\u8C61\uFF0C
 \u4F46\u6709\u4E24\u4E2A\u989D\u5916\u7684\u5C5E\u6027 stdout \u548C stderr\u3002
 */</span>
<span class="token keyword">const</span> _exec <span class="token operator">=</span> util<span class="token punctuation">.</span><span class="token function">promisify</span><span class="token punctuation">(</span>exec<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">lsExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> stdout<span class="token punctuation">,</span> stderr <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">_exec</span><span class="token punctuation">(</span><span class="token string">&#39;ls&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;stdout:&#39;</span><span class="token punctuation">,</span> stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;stderr:&#39;</span><span class="token punctuation">,</span> stderr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">lsExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">/**
 \u5982\u679C\u542F\u7528\u4E86 signal \u9009\u9879\uFF0C\u5219\u5728\u76F8\u5E94\u7684 AbortController \u4E0A\u8C03\u7528 .abort() \u4E0E\u5728\u5B50\u8FDB\u7A0B\u4E0A\u8C03\u7528
 .kill() \u7C7B\u4F3C\uFF0C\u53EA\u662F\u4F20\u7ED9\u56DE\u8C03\u7684\u9519\u8BEF\u5C06\u662F AbortError\uFF1A
 */</span>
<span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AbortController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> signal <span class="token punctuation">}</span> <span class="token operator">=</span> controller<span class="token punctuation">;</span>
<span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;grep ssh&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> signal <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E00\u4E2A AbortError</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
controller<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5982\u679C timeout \u5927\u4E8E 0\uFF0C\u5219\u5982\u679C\u5B50\u8FDB\u7A0B\u8FD0\u884C\u65F6\u95F4\u8D85\u8FC7 timeout \u6BEB\u79D2\uFF0C\u7236\u8FDB\u7A0B\u5C06\u53D1\u9001\u7531 killSignal \u5C5E\u6027\uFF08\u9ED8\u8BA4\u4E3A &#39;SIGTERM&#39;\uFF09\u6807\u8BC6\u7684\u4FE1\u53F7\u3002</p><h3 id="execfile-1" tabindex="-1">.execFile()</h3><p>child_process.execFile() \u51FD\u6570\u4E0E child_process.exec() \u7C7B\u4F3C\uFF0C\u4E0D\u540C\u4E4B\u5904\u5728\u4E8E\u5B83\u9ED8\u8BA4\u4E0D\u884D\u751F shell\u3002 \u800C\u662F\uFF0C\u6307\u5B9A\u7684\u53EF\u6267\u884C\u6587\u4EF6 file \u76F4\u63A5\u4F5C\u4E3A\u65B0\u8FDB\u7A0B\u884D\u751F\uFF0C\u4F7F\u5176\u6BD4 child_process.exec() \u7565\u6709\u6548\u7387\u3002</p><p>\u652F\u6301\u4E0E child_process.exec() \u76F8\u540C\u7684\u9009\u9879\u3002 \u7531\u4E8E\u672A\u884D\u751F shell\uFF0C\u56E0\u6B64\u4E0D\u652F\u6301 I/O \u91CD\u5B9A\u5411\u548C\u6587\u4EF6\u901A\u914D\u7B49\u884C\u4E3A\u3002</p><div class="language-html"><pre><code>file <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u8981\u8FD0\u884C\u7684\u53EF\u6267\u884C\u6587\u4EF6\u7684\u540D\u79F0\u6216\u8DEF\u5F84\u3002
args <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string[]</span><span class="token punctuation">&gt;</span></span> \u5B57\u7B26\u4E32\u53C2\u6570\u5217\u8868\u3002
options <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Object</span><span class="token punctuation">&gt;</span></span>
    cwd <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>URL</span><span class="token punctuation">&gt;</span></span> \u5B50\u8FDB\u7A0B\u7684\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\u3002
    env <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Object</span><span class="token punctuation">&gt;</span></span> \u73AF\u5883\u53D8\u91CF\u952E\u503C\u5BF9\u3002 \u9ED8\u8BA4\u503C: process.<wbr>env\u3002
    encoding <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u9ED8\u8BA4\u503C: &#39;utf8&#39;
    timeout <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u9ED8\u8BA4\u503C: 0
    maxBuffer <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u6807\u51C6\u8F93\u51FA\u6216\u6807\u51C6\u9519\u8BEF\u4E0A\u5141\u8BB8\u7684\u6700\u5927\u6570\u636E\u91CF\uFF08\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\uFF09\u3002 \u5982\u679C\u8D85\u8FC7\uFF0C\u5219\u5B50\u8FDB\u7A0B\u5C06\u7EC8\u6B62\u5E76\u622A\u65AD\u4EFB\u4F55\u8F93\u51FA\u3002 \u8BF7\u53C2\u9605 maxBuffer \u548C Unicode \u7684\u6CE8\u610F\u4E8B\u9879\u3002 \u9ED8\u8BA4\u503C: 1024 * 1024\u3002
    killSignal <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>integer</span><span class="token punctuation">&gt;</span></span> \u9ED8\u8BA4\u503C: &#39;SIGTERM&#39;
    uid <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u8BBE\u7F6E\u8FDB\u7A0B\u7684\u7528\u6237\u6807\u8BC6\uFF08\u53C2\u89C1 setuid(2)\uFF09\u3002
    gid <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u8BBE\u7F6E\u8FDB\u7A0B\u7684\u7FA4\u7EC4\u6807\u8BC6\uFF08\u53C2\u89C1 setgid(2)\uFF09\u3002
    windowsHide <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span> \u9690\u85CF\u901A\u5E38\u5728 Windows \u7CFB\u7EDF\u4E0A\u521B\u5EFA\u7684\u5B50\u8FDB\u7A0B\u63A7\u5236\u53F0\u7A97\u53E3\u3002 \u9ED8\u8BA4\u503C: false\u3002
    windowsVerbatimArguments <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span> \u5728 Windows \u4E0A\u4E0D\u4E3A\u53C2\u6570\u52A0\u4E0A\u5F15\u53F7\u6216\u8F6C\u4E49\u3002 \u5728 Unix \u4E0A\u88AB\u5FFD\u7565\u3002 \u9ED8\u8BA4\u503C: false\u3002
    shell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u5982\u679C\u662F true\uFF0C\u5219\u5728 shell \u5185\u8FD0\u884C command\u3002 \u5728 Unix \u4E0A\u4F7F\u7528 &#39;/bin/sh&#39;\uFF0C\u5728 Windows \u4E0A\u4F7F\u7528 process.<wbr>env.ComSpec\u3002 \u53EF\u4EE5\u5C06\u4E0D\u540C\u7684 shell \u6307\u5B9A\u4E3A\u5B57\u7B26\u4E32\u3002 \u8BF7\u53C2\u9605 shell \u7684\u8981\u6C42\u548C\u9ED8\u8BA4\u7684 Windows shell\u3002 \u9ED8\u8BA4\u503C: false \uFF08\u6CA1\u6709 shell\uFF09
    signal <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AbortSignal</span><span class="token punctuation">&gt;</span></span> \u5141\u8BB8\u4F7F\u7528\u4E2D\u6B62\u4FE1\u53F7\u4E2D\u6B62\u5B50\u8FDB\u7A0B\u3002
callback <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Function</span><span class="token punctuation">&gt;</span></span> \u8FDB\u7A0B\u7EC8\u6B62\u65F6\u4F7F\u7528\u8F93\u51FA\u8C03\u7528\u3002
    error <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Error</span><span class="token punctuation">&gt;</span></span>
    stdout <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Buffer</span><span class="token punctuation">&gt;</span></span>
    stderr <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Buffer</span><span class="token punctuation">&gt;</span></span>
\u8FD4\u56DE: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ChildProcess</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">/**
 * \u9996\u4F8B \u56DE\u8C03\u65B9\u5F0F
 */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> execFile <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">execFile</span><span class="token punctuation">(</span><span class="token string">&#39;node&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;--version&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> error<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>



<span class="token comment">/**
 * \u5F02\u6B65\u8F6C\u540C\u6B65\u6A21\u5F0F
 */</span>
<span class="token keyword">const</span> util <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:util&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> execFile <span class="token operator">=</span> util<span class="token punctuation">.</span><span class="token function">promisify</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>execFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> stdout <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">execFile</span><span class="token punctuation">(</span><span class="token string">&#39;node&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;--version&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>




<span class="token comment">// \u5982\u679C\u542F\u7528\u4E86 shell \u9009\u9879\uFF0C\u5219\u8BF7\u52FF\u5C06\u672A\u7ECF\u5904\u7406\u7684\u7528\u6237\u8F93\u5165\u4F20\u9012\u7ED9\u6B64\u51FD\u6570\u3002 \u4EFB\u4F55\u5305\u542B shell \u5143\u5B57\u7B26\u7684\u8F93\u5165\u90FD\u53EF\u7528\u4E8E\u89E6\u53D1\u4EFB\u610F\u547D\u4EE4\u6267\u884C\u3002</span>
<span class="token comment">// \u5982\u679C\u542F\u7528\u4E86 signal \u9009\u9879\uFF0C\u5219\u5728\u76F8\u5E94\u7684 AbortController \u4E0A\u8C03\u7528 .abort() \u4E0E\u5728\u5B50\u8FDB\u7A0B\u4E0A\u8C03\u7528 .kill() \u7C7B\u4F3C\uFF0C\u53EA\u662F\u4F20\u7ED9\u56DE\u8C03\u7684\u9519\u8BEF\u5C06\u662F AbortError\uFF1A</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> execFile <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AbortController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> signal <span class="token punctuation">}</span> <span class="token operator">=</span> controller<span class="token punctuation">;</span>
<span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">execFile</span><span class="token punctuation">(</span><span class="token string">&#39;node&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;--version&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> signal <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E00\u4E2A AbortError</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
controller<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="fork-1" tabindex="-1">.fork()</h3><div class="language-html"><pre><code>modulePath <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>URL</span><span class="token punctuation">&gt;</span></span> \u8981\u5728\u5B50\u8FDB\u7A0B\u4E2D\u8FD0\u884C\u7684\u6A21\u5757\u3002
args <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string[]</span><span class="token punctuation">&gt;</span></span> \u5B57\u7B26\u4E32\u53C2\u6570\u5217\u8868\u3002
options <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Object</span><span class="token punctuation">&gt;</span></span>
    cwd <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>URL</span><span class="token punctuation">&gt;</span></span> \u5B50\u8FDB\u7A0B\u7684\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\u3002
    detached <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span> \u51C6\u5907\u5B50\u8FDB\u7A0B\u72EC\u7ACB\u4E8E\u5176\u7236\u8FDB\u7A0B\u8FD0\u884C\u3002 \u5177\u4F53\u884C\u4E3A\u53D6\u51B3\u4E8E\u5E73\u53F0\uFF0C\u53C2\u89C1 options.detached\u3002
    env <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Object</span><span class="token punctuation">&gt;</span></span> \u73AF\u5883\u53D8\u91CF\u952E\u503C\u5BF9\u3002 \u9ED8\u8BA4\u503C: process.<wbr>env\u3002
    execPath <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u7528\u4E8E\u521B\u5EFA\u5B50\u8FDB\u7A0B\u7684\u53EF\u6267\u884C\u6587\u4EF6\u3002
    execArgv <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string[]</span><span class="token punctuation">&gt;</span></span> \u4F20\u7ED9\u53EF\u6267\u884C\u6587\u4EF6\u7684\u5B57\u7B26\u4E32\u53C2\u6570\u5217\u8868\u3002 \u9ED8\u8BA4\u503C: process.execArgv\u3002
    gid <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u8BBE\u7F6E\u8FDB\u7A0B\u7684\u7FA4\u7EC4\u6807\u8BC6\uFF08\u53C2\u89C1 setgid(2)\uFF09\u3002
    serialization <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u6307\u5B9A\u7528\u4E8E\u5728\u8FDB\u7A0B\u4E4B\u95F4\u53D1\u9001\u6D88\u606F\u7684\u5E8F\u5217\u5316\u7C7B\u578B\u3002 \u53EF\u80FD\u7684\u503C\u4E3A &#39;json&#39; \u548C &#39;advanced&#39;\u3002 \u6709\u5173\u66F4\u591A\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u8BF7\u53C2\u9605\u9AD8\u7EA7\u5E8F\u5217\u5316\u3002 \u9ED8\u8BA4\u503C: &#39;json&#39;\u3002
    signal <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AbortSignal</span><span class="token punctuation">&gt;</span></span> \u5141\u8BB8\u4F7F\u7528\u4E2D\u6B62\u4FE1\u53F7\u5173\u95ED\u5B50\u8FDB\u7A0B\u3002
    killSignal <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>integer</span><span class="token punctuation">&gt;</span></span> \u5F53\u884D\u751F\u7684\u8FDB\u7A0B\u5C06\u88AB\u8D85\u65F6\u6216\u4E2D\u6B62\u4FE1\u53F7\u6740\u6B7B\u65F6\u8981\u4F7F\u7528\u7684\u4FE1\u53F7\u503C\u3002 \u9ED8\u8BA4\u503C: &#39;SIGTERM&#39;\u3002
    silent <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span> \u5982\u679C\u4E3A true\uFF0C\u5219\u5B50\u8FDB\u7A0B\u7684\u6807\u51C6\u8F93\u5165\u3001\u6807\u51C6\u8F93\u51FA\u548C\u6807\u51C6\u9519\u8BEF\u5C06\u901A\u8FC7\u7BA1\u9053\u4F20\u8F93\u5230\u7236\u8FDB\u7A0B\uFF0C\u5426\u5219\u5B83\u4EEC\u5C06\u4ECE\u7236\u8FDB\u7A0B\u7EE7\u627F\uFF0C\u6709\u5173\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u8BF7\u53C2\u9605 child_process.spawn() \u7684 stdio \u7684 &#39;pipe&#39; \u548C &#39;inherit&#39; \u9009\u9879\u3002 \u9ED8\u8BA4\u503C: false\u3002
    stdio <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Array</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u53C2\u89C1 child_process.spawn() \u7684 stdio\u3002 \u63D0\u4F9B\u6B64\u9009\u9879\u65F6\uFF0C\u5B83\u4F1A\u8986\u76D6 silent\u3002 \u5982\u679C\u4F7F\u7528\u6570\u7EC4\u53D8\u4F53\uFF0C\u5219\u5B83\u5FC5\u987B\u6070\u597D\u5305\u542B\u4E00\u4E2A\u503C\u4E3A &#39;ipc&#39; \u7684\u6761\u76EE\uFF0C\u5426\u5219\u5C06\u629B\u51FA\u9519\u8BEF\u3002 \u4F8B\u5982 [0, 1, 2, &#39;ipc&#39;]\u3002
    uid <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u8BBE\u7F6E\u8FDB\u7A0B\u7684\u7528\u6237\u6807\u8BC6\uFF08\u53C2\u89C1 setuid(2)\uFF09\u3002
    windowsVerbatimArguments <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span> \u5728 Windows \u4E0A\u4E0D\u4E3A\u53C2\u6570\u52A0\u4E0A\u5F15\u53F7\u6216\u8F6C\u4E49\u3002 \u5728 Unix \u4E0A\u88AB\u5FFD\u7565\u3002 \u9ED8\u8BA4\u503C: false\u3002
    timeout <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u5141\u8BB8\u8FDB\u7A0B\u8FD0\u884C\u7684\u6700\u957F\u65F6\u95F4\uFF08\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\uFF09\u3002 \u9ED8\u8BA4\u503C: undefined\u3002
\u8FD4\u56DE: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ChildProcess</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>child_process.fork() \u65B9\u6CD5\u662F child_process.spawn() \u7684\u7279\u4F8B\uFF0C\u4E13\u95E8\u7528\u4E8E\u884D\u751F\u65B0\u7684 Node.js \u8FDB\u7A0B\u3002 \u4E0E child_process.spawn() \u4E00\u6837\uFF0C \u8FD4\u56DE ChildProcess \u5BF9\u8C61\u3002 \u8FD4\u56DE\u7684 ChildProcess \u5C06\u6709\u989D\u5916\u7684\u5185\u7F6E\u901A\u4FE1\u901A\u9053\uFF0C\u5141\u8BB8\u6D88\u606F\u5728\u7236\u8FDB\u7A0B\u548C\u5B50\u8FDB\u7A0B\u4E4B\u95F4\u6765\u56DE\u4F20\u9012\u3002 \u8BE6\u89C1 subprocess.send()\u3002</p><p>\u8BF7\u8BB0\u4F4F\uFF0C\u884D\u751F\u7684 Node.js \u5B50\u8FDB\u7A0B\u72EC\u7ACB\u4E8E\u7236\u8FDB\u7A0B\uFF0C\u9664\u4E86\u4E24\u8005\u4E4B\u95F4\u5EFA\u7ACB\u7684 IPC \u901A\u4FE1\u901A\u9053\u3002 \u6BCF\u4E2A\u8FDB\u7A0B\u90FD\u6709\u81EA\u5DF1\u7684\u5185\u5B58\uFF0C\u5177\u6709\u81EA\u5DF1\u7684 V8 \u5B9E\u4F8B\u3002 \u7531\u4E8E\u9700\u8981\u989D\u5916\u7684\u8D44\u6E90\u5206\u914D\uFF0C\u4E0D\u5EFA\u8BAE\u884D\u751F\u5927\u91CF\u5B50 Node.js \u8FDB\u7A0B\u3002</p><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0Cchild_process.fork() \u5C06\u4F7F\u7528\u7236\u8FDB\u7A0B\u7684 process.execPath \u884D\u751F\u65B0\u7684 Node.js \u5B9E\u4F8B\u3002 options \u5BF9\u8C61\u4E2D\u7684 execPath \u5C5E\u6027\u5141\u8BB8\u4F7F\u7528\u66FF\u4EE3\u7684\u6267\u884C\u8DEF\u5F84\u3002</p><p>\u4F7F\u7528\u81EA\u5B9A\u4E49 execPath \u542F\u52A8\u7684 Node.js \u8FDB\u7A0B\u5C06\u4F7F\u7528\u5728\u5B50\u8FDB\u7A0B\u4E0A\u4F7F\u7528\u73AF\u5883\u53D8\u91CF NODE_CHANNEL_FD \u6807\u8BC6\u7684\u6587\u4EF6\u63CF\u8FF0\u7B26\u4E0E\u7236\u8FDB\u7A0B\u901A\u4FE1\u3002</p><p>\u4E0E fork(2) POSIX \u7CFB\u7EDF\u8C03\u7528\u4E0D\u540C\uFF0Cchild_process.fork() \u4E0D\u514B\u9686\u5F53\u524D\u8FDB\u7A0B\u3002</p><p>child_process.fork() \u4E0D\u652F\u6301 child_process.spawn() \u4E2D\u53EF\u7528\u7684 shell \u9009\u9879\uFF0C\u5982\u679C\u8BBE\u7F6E\u5C06\u88AB\u5FFD\u7565\u3002</p><p>\u5982\u679C\u542F\u7528\u4E86 signal \u9009\u9879\uFF0C\u5219\u5728\u76F8\u5E94\u7684 AbortController \u4E0A\u8C03\u7528 .abort() \u4E0E\u5728\u5B50\u8FDB\u7A0B\u4E0A\u8C03\u7528 .kill() \u7C7B\u4F3C\uFF0C\u53EA\u662F\u4F20\u7ED9\u56DE\u8C03\u7684\u9519\u8BEF\u5C06\u662F AbortError\uFF1A</p><div class="language-js"><pre><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u88AB\u521B\u5EFA\u4E86N\u6B21&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;child&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello from </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1_000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> fork <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AbortController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> signal <span class="token punctuation">}</span> <span class="token operator">=</span> controller<span class="token punctuation">;</span>
    <span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">fork</span><span class="token punctuation">(</span>__filename<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;child&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> signal <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    child<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u63A7\u5236\u5668\u4E2D\u6B62\uFF0C\u5219\u8FD9\u5C06\u5728 err \u4E3A AbortError \u7684\u60C5\u51B5\u4E0B\u88AB\u8C03\u7528</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    controller<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u505C\u6B62\u5B50\u8FDB\u7A0B</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="spawn-1" tabindex="-1">.spawn()</h3><div class="language-html"><pre><code>command <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u8981\u8FD0\u884C\u7684\u547D\u4EE4\u3002
args <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string[]</span><span class="token punctuation">&gt;</span></span> \u5B57\u7B26\u4E32\u53C2\u6570\u5217\u8868\u3002
options <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Object</span><span class="token punctuation">&gt;</span></span>
    cwd <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>URL</span><span class="token punctuation">&gt;</span></span> \u5B50\u8FDB\u7A0B\u7684\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\u3002
    env <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Object</span><span class="token punctuation">&gt;</span></span> \u73AF\u5883\u53D8\u91CF\u952E\u503C\u5BF9\u3002 \u9ED8\u8BA4\u503C: process.<wbr>env\u3002
    argv0 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u663E\u5F0F\u8BBE\u7F6E\u53D1\u9001\u7ED9\u5B50\u8FDB\u7A0B\u7684 argv[0] \u7684\u503C\u3002 \u5982\u679C\u672A\u6307\u5B9A\uFF0C\u8FD9\u5C06\u8BBE\u7F6E\u4E3A command\u3002
    stdio <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Array</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u5B50\u8FDB\u7A0B\u7684\u6807\u51C6\u8F93\u5165\u8F93\u51FA\u914D\u7F6E\uFF08\u53C2\u89C1 options.stdio\uFF09\u3002
    detached <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span> \u51C6\u5907\u5B50\u8FDB\u7A0B\u72EC\u7ACB\u4E8E\u5176\u7236\u8FDB\u7A0B\u8FD0\u884C\u3002 \u5177\u4F53\u884C\u4E3A\u53D6\u51B3\u4E8E\u5E73\u53F0\uFF0C\u53C2\u89C1 options.detached\u3002
    uid <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u8BBE\u7F6E\u8FDB\u7A0B\u7684\u7528\u6237\u6807\u8BC6\uFF08\u53C2\u89C1 setuid(2)\uFF09\u3002
    gid <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u8BBE\u7F6E\u8FDB\u7A0B\u7684\u7FA4\u7EC4\u6807\u8BC6\uFF08\u53C2\u89C1 setgid(2)\uFF09\u3002
    serialization <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u6307\u5B9A\u7528\u4E8E\u5728\u8FDB\u7A0B\u4E4B\u95F4\u53D1\u9001\u6D88\u606F\u7684\u5E8F\u5217\u5316\u7C7B\u578B\u3002 \u53EF\u80FD\u7684\u503C\u4E3A &#39;json&#39; \u548C &#39;advanced&#39;\u3002 \u6709\u5173\u66F4\u591A\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u8BF7\u53C2\u9605\u9AD8\u7EA7\u5E8F\u5217\u5316\u3002 \u9ED8\u8BA4\u503C: &#39;json&#39;\u3002
    shell <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u5982\u679C\u662F true\uFF0C\u5219\u5728 shell \u5185\u8FD0\u884C command\u3002 \u5728 Unix \u4E0A\u4F7F\u7528 &#39;/bin/sh&#39;\uFF0C\u5728 Windows \u4E0A\u4F7F\u7528 process.<wbr>env.ComSpec\u3002 \u53EF\u4EE5\u5C06\u4E0D\u540C\u7684 shell \u6307\u5B9A\u4E3A\u5B57\u7B26\u4E32\u3002 \u8BF7\u53C2\u9605 shell \u7684\u8981\u6C42\u548C\u9ED8\u8BA4\u7684 Windows shell\u3002 \u9ED8\u8BA4\u503C: false \uFF08\u6CA1\u6709 shell\uFF09
    windowsVerbatimArguments <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span> \u5728 Windows \u4E0A\u4E0D\u4E3A\u53C2\u6570\u52A0\u4E0A\u5F15\u53F7\u6216\u8F6C\u4E49\u3002 \u5728 Unix \u4E0A\u88AB\u5FFD\u7565\u3002 \u5F53\u6307\u5B9A\u4E86 shell \u5E76\u4E14\u662F CMD \u65F6\uFF0C\u5219\u81EA\u52A8\u8BBE\u7F6E\u4E3A true\u3002 \u9ED8\u8BA4\u503C: false\u3002
    windowsHide <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span> \u9690\u85CF\u901A\u5E38\u5728 Windows \u7CFB\u7EDF\u4E0A\u521B\u5EFA\u7684\u5B50\u8FDB\u7A0B\u63A7\u5236\u53F0\u7A97\u53E3\u3002 \u9ED8\u8BA4\u503C: false\u3002
    signal <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AbortSignal</span><span class="token punctuation">&gt;</span></span> \u5141\u8BB8\u4F7F\u7528\u4E2D\u6B62\u4FE1\u53F7\u4E2D\u6B62\u5B50\u8FDB\u7A0B\u3002
    timeout <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u5141\u8BB8\u8FDB\u7A0B\u8FD0\u884C\u7684\u6700\u957F\u65F6\u95F4\uFF08\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\uFF09\u3002 \u9ED8\u8BA4\u503C: undefined\u3002
    killSignal <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>integer</span><span class="token punctuation">&gt;</span></span> \u5F53\u884D\u751F\u7684\u8FDB\u7A0B\u5C06\u88AB\u8D85\u65F6\u6216\u4E2D\u6B62\u4FE1\u53F7\u6740\u6B7B\u65F6\u8981\u4F7F\u7528\u7684\u4FE1\u53F7\u503C\u3002 \u9ED8\u8BA4\u503C: &#39;SIGTERM&#39;\u3002
\u8FD4\u56DE: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ChildProcess</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>child_process.spawn() \u65B9\u6CD5\u4F7F\u7528\u7ED9\u5B9A\u7684 command \u548C args \u4E2D\u7684\u547D\u4EE4\u884C\u53C2\u6570\u884D\u751F\u65B0\u8FDB\u7A0B\u3002 \u5982\u679C\u7701\u7565\uFF0Cargs \u9ED8\u8BA4\u4E3A\u7A7A\u6570\u7EC4\u3002</p><p>\u5982\u679C\u542F\u7528\u4E86 shell \u9009\u9879\uFF0C\u5219\u8BF7\u52FF\u5C06\u672A\u7ECF\u5904\u7406\u7684\u7528\u6237\u8F93\u5165\u4F20\u9012\u7ED9\u6B64\u51FD\u6570\u3002 \u4EFB\u4F55\u5305\u542B shell \u5143\u5B57\u7B26\u7684\u8F93\u5165\u90FD\u53EF\u7528\u4E8E\u89E6\u53D1\u4EFB\u610F\u547D\u4EE4\u6267\u884C\u3002</p><p>\u4F7F\u7528 cwd \u6307\u5B9A\u4ECE\u4E2D\u884D\u751F\u8FDB\u7A0B\u7684\u5DE5\u4F5C\u76EE\u5F55\u3002 \u5982\u679C\u6CA1\u6709\u7ED9\u5B9A\uFF0C\u5219\u9ED8\u8BA4\u662F\u7EE7\u627F\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\u3002 \u5982\u679C\u7ED9\u5B9A\uFF0C\u4F46\u8DEF\u5F84\u4E0D\u5B58\u5728\uFF0C\u5219\u5B50\u8FDB\u7A0B\u4F1A\u89E6\u53D1 ENOENT \u9519\u8BEF\u5E76\u7ACB\u5373\u9000\u51FA\u3002 \u5F53\u547D\u4EE4\u4E0D\u5B58\u5728\u65F6\uFF0C\u4E5F\u4F1A\u89E6\u53D1 ENOENT\u3002</p><p>\u4F7F\u7528 env \u6307\u5B9A\u5BF9\u65B0\u8FDB\u7A0B\u53EF\u89C1\u7684\u73AF\u5883\u53D8\u91CF\uFF0C\u9ED8\u8BA4\u4E3A process.<wbr>env\u3002</p><p>env \u4E2D\u7684 undefined \u503C\u5C06\u88AB\u5FFD\u7565\u3002</p><div class="language-js"><pre><code><span class="token comment">/**
 * \u8FD0\u884C ls -lh /usr\u3001\u6355\u83B7 stdout\u3001stderr \u548C\u9000\u51FA\u7801\u7684\u793A\u4F8B\uFF1A
 */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ls <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;ls&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;-lh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/usr&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ls<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stdout: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ls<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stderr: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ls<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">child process exited with code </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>




<span class="token comment">/**
 * \u793A\u4F8B\uFF1A\u4E00\u79CD\u975E\u5E38\u7CBE\u7EC6\u7684\u8FD0\u884C ps ax | grep ssh \u7684\u65B9\u5F0F
 */</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ps <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;ps&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;ax&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> grep <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;grep&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;ssh&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ps<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    grep<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ps<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ps stderr: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ps<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ps process exited with code </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    grep<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

grep<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

grep<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">grep stderr: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

grep<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">grep process exited with code </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">/**
 * \u67D0\u4E9B\u5E73\u53F0\uFF08macOS\u3001Linux\uFF09\u5C06\u4F7F\u7528 argv[0] \u7684\u503C\u4F5C\u4E3A\u8FDB\u7A0B\u6807\u9898\uFF0C\u800C\u5176\u4ED6\u5E73\u53F0\uFF08Windows\u3001SunOS\uFF09\u5C06\u4F7F\u7528 command\u3002

 Node.js \u5F53\u524D\u5728\u542F\u52A8\u65F6\u7528 process.execPath \u8986\u76D6 argv[0]\uFF0C\u56E0\u6B64 Node.js \u5B50\u8FDB\u7A0B\u4E2D\u7684 process.argv[0] \u5C06\u4E0D\u5339\u914D\u4ECE\u7236\u8FDB\u7A0B\u4F20\u7ED9 spawn \u7684 argv0 \u53C2\u6570\uFF0C\u800C\u662F\u4F7F\u7528 process.argv0 \u5C5E\u6027\u68C0\u7D22\u5B83\u3002

 \u5982\u679C\u542F\u7528\u4E86 signal \u9009\u9879\uFF0C\u5219\u5728\u76F8\u5E94\u7684 AbortController \u4E0A\u8C03\u7528 .abort() \u4E0E\u5728\u5B50\u8FDB\u7A0B\u4E0A\u8C03\u7528 .kill() \u7C7B\u4F3C\uFF0C\u53EA\u662F\u4F20\u7ED9\u56DE\u8C03\u7684\u9519\u8BEF\u5C06\u662F AbortError\uFF1A
 */</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AbortController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> signal <span class="token punctuation">}</span> <span class="token operator">=</span> controller<span class="token punctuation">;</span>
<span class="token keyword">const</span> grep <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;grep&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;ssh&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> signal <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
grep<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u63A7\u5236\u5668\u4E2D\u6B62\uFF0C\u5219\u8FD9\u5C06\u5728 err \u4E3A AbortError \u7684\u60C5\u51B5\u4E0B\u88AB\u8C03\u7528</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
controller<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u505C\u6B62\u5B50\u8FDB\u7A0B</span>
</code></pre></div><h3 id="options-detached" tabindex="-1">options.detached</h3><p>\u5728 Windows \u4E0A\uFF0C\u5C06 options.detached \u8BBE\u7F6E\u4E3A true \u53EF\u4EE5\u8BA9\u5B50\u8FDB\u7A0B\u5728\u7236\u8FDB\u7A0B\u9000\u51FA\u540E\u7EE7\u7EED\u8FD0\u884C\u3002 \u5B50\u8FDB\u7A0B\u5C06\u6709\u81EA\u5DF1\u7684\u63A7\u5236\u53F0\u7A97\u53E3\u3002 \u4E00\u65E6\u4E3A\u5B50\u8FDB\u7A0B\u542F\u7528\uFF0C\u5219\u5B83\u5C31\u4E0D\u80FD\u88AB\u7981\u7528\u3002</p><p>\u5728\u975E Windows \u5E73\u53F0\u4E0A\uFF0C\u5982\u679C options.detached \u8BBE\u7F6E\u4E3A true\uFF0C\u5219\u5B50\u8FDB\u7A0B\u5C06\u6210\u4E3A\u65B0\u8FDB\u7A0B\u7EC4\u548C\u4F1A\u8BDD\u7684\u9886\u5BFC\u8005\u3002 \u5B50\u8FDB\u7A0B\u53EF\u4EE5\u5728\u7236\u8FDB\u7A0B\u9000\u51FA\u540E\u7EE7\u7EED\u8FD0\u884C\uFF0C\u4E0D\u7BA1\u5B83\u4EEC\u662F\u5426\u5206\u79BB\u3002 \u6709\u5173\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u8BF7\u53C2\u9605 setsid(2)\u3002</p><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u7236\u8FDB\u7A0B\u5C06\u7B49\u5F85\u5206\u79BB\u7684\u5B50\u8FDB\u7A0B\u9000\u51FA\u3002 \u4E3A\u4E86\u9632\u6B62\u7236\u8FDB\u7A0B\u7B49\u5F85\u7ED9\u5B9A\u7684 subprocess \u9000\u51FA\uFF0C\u5219\u4F7F\u7528 subprocess.unref() \u65B9\u6CD5\u3002 \u8FD9\u6837\u505A\u4F1A\u4F7F\u7236\u8FDB\u7A0B\u7684\u4E8B\u4EF6\u5FAA\u73AF\u4E0D\u5C06\u5B50\u8FDB\u7A0B\u5305\u62EC\u5728\u5176\u5F15\u7528\u8BA1\u6570\u4E2D\uFF0C\u4ECE\u800C\u5141\u8BB8\u7236\u8FDB\u7A0B\u72EC\u7ACB\u4E8E\u5B50\u8FDB\u7A0B\u9000\u51FA\uFF0C\u9664\u975E\u5728\u5B50\u8FDB\u7A0B\u548C\u7236\u8FDB\u7A0B\u4E4B\u95F4\u5EFA\u7ACB\u4E86 IPC \u901A\u9053\u3002</p><p>\u5F53\u4F7F\u7528 detached \u9009\u9879\u542F\u52A8\u957F\u65F6\u95F4\u8FD0\u884C\u7684\u8FDB\u7A0B\u65F6\uFF0C\u8FDB\u7A0B\u5728\u7236\u8FDB\u7A0B\u9000\u51FA\u540E\u4E0D\u4F1A\u4E00\u76F4\u5728\u540E\u53F0\u8FD0\u884C\uFF0C\u9664\u975E\u63D0\u4F9B\u4E86\u672A\u8FDE\u63A5\u5230\u7236\u8FDB\u7A0B\u7684 stdio \u914D\u7F6E\u3002 \u5982\u679C\u7EE7\u627F\u4E86\u7236\u8FDB\u7A0B\u7684 stdio\uFF0C\u5219\u5B50\u8FDB\u7A0B\u5C06\u4FDD\u6301\u4E0E\u63A7\u5236\u7EC8\u7AEF\u7684\u8FDE\u63A5\u3002</p><p>\u957F\u65F6\u95F4\u8FD0\u884C\u7684\u8FDB\u7A0B\u7684\u793A\u4F8B\uFF0C\u901A\u8FC7\u5206\u79BB\u5E76\u5FFD\u7565\u5176\u7236\u8FDB\u7A0B\u7684 stdio \u6587\u4EF6\u63CF\u8FF0\u7B26\uFF0C\u4EE5\u5FFD\u7565\u7236\u8FDB\u7A0B\u7684\u7EC8\u6B62\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> subprocess <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;child_program.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">detached</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">stdio</span><span class="token operator">:</span> <span class="token string">&#39;ignore&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

subprocess<span class="token punctuation">.</span><span class="token function">unref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u6216\u8005\uFF0C\u53EF\u4EE5\u5C06\u5B50\u8FDB\u7A0B\u7684\u8F93\u51FA\u91CD\u5B9A\u5411\u5230\u6587\u4EF6\u4E2D\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> out <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">openSync</span><span class="token punctuation">(</span><span class="token string">&#39;./out.log&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> err <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">openSync</span><span class="token punctuation">(</span><span class="token string">&#39;./out.log&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> subprocess <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;prg&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">detached</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">stdio</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token string">&#39;ignore&#39;</span><span class="token punctuation">,</span> out<span class="token punctuation">,</span> err <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

subprocess<span class="token punctuation">.</span><span class="token function">unref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="options-stdio" tabindex="-1">options.stdio</h3><p>options.stdio \u9009\u9879\u7528\u4E8E\u914D\u7F6E\u5728\u7236\u8FDB\u7A0B\u548C\u5B50\u8FDB\u7A0B\u4E4B\u95F4\u5EFA\u7ACB\u7684\u7BA1\u9053\u3002 \u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u5B50\u8FDB\u7A0B\u7684\u6807\u51C6\u8F93\u5165\u3001\u6807\u51C6\u8F93\u51FA\u548C\u6807\u51C6\u9519\u8BEF\u88AB\u91CD\u5B9A\u5411\u5230 ChildProcess \u5BF9\u8C61\u4E0A\u76F8\u5E94\u7684 subprocess.stdin\u3001subprocess.stdout \u548C subprocess.stderr \u6D41\u3002 \u8FD9\u76F8\u5F53\u4E8E\u5C06 options.stdio \u8BBE\u7F6E\u4E3A\u7B49\u4E8E [&#39;pipe&#39;, &#39;pipe&#39;, &#39;pipe&#39;]\u3002</p><p>\u4E3A\u65B9\u4FBF\u8D77\u89C1\uFF0Coptions.stdio \u53EF\u80FD\u662F\u4EE5\u4E0B\u5B57\u7B26\u4E32\u4E4B\u4E00\uFF1A</p><p>\u5426\u5219\uFF0Coptions.stdio \u7684\u503C\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5176\u4E2D\u6BCF\u4E2A\u7D22\u5F15\u5BF9\u5E94\u4E8E\u5B50\u8FDB\u7A0B\u4E2D\u7684\u6587\u4EF6\u63CF\u8FF0\u7B26\u3002 \u6587\u4EF6\u63CF\u8FF0\u7B26 0\u30011 \u548C 2 \u5206\u522B\u5BF9\u5E94\u4E8E\u6807\u51C6\u8F93\u5165\u3001\u6807\u51C6\u8F93\u51FA\u548C\u6807\u51C6\u9519\u8BEF\u3002 \u53EF\u4EE5\u6307\u5B9A\u989D\u5916\u7684\u6587\u4EF6\u63CF\u8FF0\u7B26\u4EE5\u5728\u7236\u8FDB\u7A0B\u548C\u5B50\u8FDB\u7A0B\u4E4B\u95F4\u521B\u5EFA\u989D\u5916\u7684\u7BA1\u9053\u3002 \u8BE5\u503C\u662F\u4EE5\u4E0B\u4E4B\u4E00\uFF1A</p><div class="language-js"><pre><code><span class="token string">&#39;pipe&#39;</span>\uFF1A\u5728\u5B50\u8FDB\u7A0B\u548C\u7236\u8FDB\u7A0B\u4E4B\u95F4\u521B\u5EFA\u7BA1\u9053\u3002 \u7BA1\u9053\u7684\u7236\u7AEF\u4F5C\u4E3A subprocess<span class="token punctuation">.</span>stdio<span class="token punctuation">[</span>fd<span class="token punctuation">]</span> \u7684 child_process \u5BF9\u8C61\u7684\u5C5E\u6027\u66B4\u9732\u7ED9\u7236\u8FDB\u7A0B\u3002 \u4E3A\u6587\u4EF6\u63CF\u8FF0\u7B26 <span class="token number">0</span>\u3001<span class="token number">1</span> \u548C <span class="token number">2</span> \u521B\u5EFA\u7684\u7BA1\u9053\u4E5F\u53EF\u5206\u522B\u7528\u4F5C subprocess<span class="token punctuation">.</span>stdin\u3001subprocess<span class="token punctuation">.</span>stdout \u548C subprocess<span class="token punctuation">.</span>stderr\u3002 \u76EE\u524D\uFF0C\u8FD9\u4E9B\u4E0D\u662F\u5B9E\u9645\u7684 Unix \u7BA1\u9053\uFF0C\u56E0\u6B64\u5B50\u8FDB\u7A0B\u4E0D\u80FD\u901A\u8FC7\u5B83\u4EEC\u7684\u63CF\u8FF0\u7B26\u6587\u4EF6\u4F7F\u7528\u5B83\u4EEC\uFF0C\u4F8B\u5982 <span class="token operator">/</span>dev<span class="token operator">/</span>fd<span class="token operator">/</span><span class="token number">2</span> \u6216 <span class="token operator">/</span>dev<span class="token operator">/</span>stdout\u3002

<span class="token string">&#39;overlapped&#39;</span>\uFF1A\u4E0E <span class="token string">&#39;pipe&#39;</span> \u76F8\u540C\uFF0C\u53EA\u662F\u5728\u53E5\u67C4\u4E0A\u8BBE\u7F6E\u4E86 <span class="token constant">FILE_FLAG_OVERLAPPED</span> \u6807\u5FD7\u3002 \u8FD9\u5BF9\u4E8E\u5B50\u8FDB\u7A0B\u7684\u6807\u51C6\u8F93\u5165\u8F93\u51FA\u53E5\u67C4\u4E0A\u7684\u91CD\u53E0 <span class="token constant">I</span><span class="token operator">/</span><span class="token constant">O</span> \u662F\u5FC5\u9700\u7684\u3002 \u6709\u5173\u66F4\u591A\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u8BF7\u53C2\u9605\u6587\u6863\u3002 \u8FD9\u4E0E\u975E Windows \u7CFB\u7EDF\u4E0A\u7684 <span class="token string">&#39;pipe&#39;</span> \u5B8C\u5168\u76F8\u540C\u3002

<span class="token string">&#39;ipc&#39;</span>\uFF1A\u521B\u5EFA <span class="token constant">IPC</span> \u901A\u9053\uFF0C\u7528\u4E8E\u5728\u7236\u5B50\u8FDB\u7A0B\u4E4B\u95F4\u4F20\u9012\u6D88\u606F<span class="token operator">/</span>\u6587\u4EF6\u63CF\u8FF0\u7B26\u3002 \u4E00\u4E2A ChildProcess \u6700\u591A\u53EF\u4EE5\u6709\u4E00\u4E2A <span class="token constant">IPC</span> \u6807\u51C6\u8F93\u5165\u8F93\u51FA\u6587\u4EF6\u63CF\u8FF0\u7B26\u3002 \u8BBE\u7F6E\u6B64\u9009\u9879\u5C06\u542F\u7528 subprocess<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> \u65B9\u6CD5\u3002 \u5982\u679C\u5B50\u8FDB\u7A0B\u662F Node<span class="token punctuation">.</span>js \u8FDB\u7A0B\uFF0C\u5219 <span class="token constant">IPC</span> \u901A\u9053\u7684\u5B58\u5728\u5C06\u542F\u7528 process<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> \u548C process<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> \u65B9\u6CD5\uFF0C\u4EE5\u53CA\u5B50\u8FDB\u7A0B\u4E2D\u7684 <span class="token string">&#39;disconnect&#39;</span> \u548C <span class="token string">&#39;message&#39;</span> \u4E8B\u4EF6\u3002

\u4E0D\u652F\u6301\u4EE5 process<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> \u4EE5\u5916\u7684\u4EFB\u4F55\u65B9\u5F0F\u8BBF\u95EE <span class="token constant">IPC</span> \u901A\u9053\u6587\u4EF6\u63CF\u8FF0\u7B26\u3001\u6216\u8005\u5C06 <span class="token constant">IPC</span> \u901A\u9053\u4E0E\u975E Node<span class="token punctuation">.</span>js \u5B9E\u4F8B\u7684\u5B50\u8FDB\u7A0B\u4E00\u8D77\u4F7F\u7528\u3002

<span class="token string">&#39;ignore&#39;</span>\uFF1A\u6307\u793A Node<span class="token punctuation">.</span>js \u5FFD\u7565\u5B50\u8FDB\u7A0B\u4E2D\u7684\u6587\u4EF6\u63CF\u8FF0\u7B26\u3002 \u867D\u7136 Node<span class="token punctuation">.</span>js \u5C06\u59CB\u7EC8\u4E3A\u5176\u884D\u751F\u7684\u8FDB\u7A0B\u6253\u5F00\u6587\u4EF6\u63CF\u8FF0\u7B26 <span class="token number">0</span>\u3001<span class="token number">1</span> \u548C <span class="token number">2</span>\uFF0C\u4F46\u5C06\u6587\u4EF6\u63CF\u8FF0\u7B26\u8BBE\u7F6E\u4E3A <span class="token string">&#39;ignore&#39;</span> \u5C06\u5BFC\u81F4 Node<span class="token punctuation">.</span>js \u6253\u5F00 <span class="token operator">/</span>dev<span class="token operator">/</span><span class="token keyword">null</span> \u5E76\u5C06\u5176\u9644\u52A0\u5230\u5B50\u8FDB\u7A0B\u7684\u6587\u4EF6\u63CF\u8FF0\u7B26\u3002

<span class="token string">&#39;inherit&#39;</span>\uFF1A\u901A\u8FC7\u76F8\u5E94\u7684\u6807\u51C6\u8F93\u5165\u8F93\u51FA\u6D41\u4F20\u5165<span class="token operator">/</span>\u4F20\u51FA\u7236\u8FDB\u7A0B\u3002 \u5728\u524D\u4E09\u4E2A\u4F4D\u7F6E\uFF0C\u8FD9\u5206\u522B\u76F8\u5F53\u4E8E process<span class="token punctuation">.</span>stdin\u3001process<span class="token punctuation">.</span>stdout \u548C process<span class="token punctuation">.</span>stderr\u3002 \u5728\u4EFB\u4F55\u5176\u4ED6\u4F4D\u7F6E\uFF0C\u76F8\u5F53\u4E8E <span class="token string">&#39;ignore&#39;</span>\u3002

<span class="token operator">&lt;</span>Stream<span class="token operator">&gt;</span> \u5BF9\u8C61\uFF1A\u4E0E\u5B50\u8FDB\u7A0B\u5171\u4EAB\u5F15\u7528\u7EC8\u7AEF\u3001\u6587\u4EF6\u3001\u5957\u63A5\u5B57\u6216\u7BA1\u9053\u7684\u53EF\u8BFB\u6216\u53EF\u5199\u6D41\u3002 \u6D41\u7684\u5E95\u5C42\u6587\u4EF6\u63CF\u8FF0\u7B26\u5728\u5B50\u8FDB\u7A0B\u4E2D\u590D\u5236\u5230\u5BF9\u5E94\u4E8E stdio \u6570\u7EC4\u4E2D\u7684\u7D22\u5F15\u7684\u6587\u4EF6\u63CF\u8FF0\u7B26\u3002 \u6D41\u5FC5\u987B\u6709\u5E95\u5C42\u63CF\u8FF0\u7B26\uFF08\u6587\u4EF6\u6D41\u5728 <span class="token string">&#39;open&#39;</span> \u4E8B\u4EF6\u53D1\u751F\u4E4B\u524D\u6CA1\u6709\uFF09\u3002

\u6B63\u6574\u6570\uFF1A\u8BE5\u6574\u6570\u503C\u88AB\u89E3\u91CA\u4E3A\u5F53\u524D\u5728\u7236\u8FDB\u7A0B\u4E2D\u6253\u5F00\u7684\u6587\u4EF6\u63CF\u8FF0\u7B26\u3002 \u5B83\u4E0E\u5B50\u8FDB\u7A0B\u5171\u4EAB\uFF0C\u7C7B\u4F3C\u4E8E\u5171\u4EAB <span class="token operator">&lt;</span>Stream<span class="token operator">&gt;</span> \u5BF9\u8C61\u7684\u65B9\u5F0F\u3002 Windows \u4E0D\u652F\u6301\u4F20\u5165\u5957\u63A5\u5B57\u3002

<span class="token keyword">null</span>\u3001<span class="token keyword">undefined</span>\uFF1A\u4F7F\u7528\u9ED8\u8BA4\u503C\u3002 \u5BF9\u4E8E\u6807\u51C6\u8F93\u5165\u8F93\u51FA\u6587\u4EF6\u63CF\u8FF0\u7B26 <span class="token number">0</span>\u3001<span class="token number">1</span> \u548C <span class="token number">2</span>\uFF08\u6362\u53E5\u8BDD\u8BF4\uFF0C\u6807\u51C6\u8F93\u5165\u3001\u6807\u51C6\u8F93\u51FA\u548C\u6807\u51C6\u9519\u8BEF\uFF09\uFF0C\u521B\u5EFA\u7BA1\u9053\u3002 \u5BF9\u4E8E\u6587\u4EF6\u63CF\u8FF0\u7B26 <span class="token number">3</span> \u53CA\u4EE5\u4E0A\uFF0C\u9ED8\u8BA4\u503C\u4E3A <span class="token string">&#39;ignore&#39;</span>\u3002
</code></pre></div><p>\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF0C\u5F53\u7236\u5B50\u8FDB\u7A0B\u4E4B\u95F4\u5EFA\u7ACB\u4E86 IPC \u901A\u9053\uFF0C\u5E76\u4E14\u5B50\u8FDB\u7A0B\u662F Node.js \u8FDB\u7A0B\u65F6\uFF0C\u5219\u5B50\u8FDB\u7A0B\u4F1A\u5728\u672A\u5F15\u7528 IPC \u901A\u9053\u7684\u60C5\u51B5\u4E0B\u542F\u52A8\uFF08\u4F7F\u7528 unref() \uFF09\uFF0C\u76F4\u5230\u5B50\u8FDB\u7A0B\u4E3A &#39;disconnect&#39; \u4E8B\u4EF6\u6216 &#39;message&#39; \u4E8B\u4EF6\u6CE8\u518C\u4E8B\u4EF6\u53E5\u67C4\u3002 \u8FD9\u5141\u8BB8\u5B50\u8FDB\u7A0B\u6B63\u5E38\u9000\u51FA\uFF0C\u800C\u8FDB\u7A0B\u4E0D\u4F1A\u88AB\u6253\u5F00\u7684 IPC \u901A\u9053\u4FDD\u6301\u6253\u5F00\u72B6\u6001\u3002</p><p>\u5728\u7C7B Unix \u64CD\u4F5C\u7CFB\u7EDF\u4E0A\uFF0Cchild_process.spawn() \u65B9\u6CD5\u5728\u5C06\u4E8B\u4EF6\u5FAA\u73AF\u4E0E\u5B50\u8FDB\u7A0B\u5206\u79BB\u4E4B\u524D\u540C\u6B65\u6267\u884C\u5185\u5B58\u64CD\u4F5C\u3002 \u5177\u6709\u5927\u91CF\u5185\u5B58\u5360\u7528\u7684\u5E94\u7528\u7A0B\u5E8F\u53EF\u80FD\u4F1A\u53D1\u73B0\u9891\u7E41\u7684 child_process.spawn() \u8C03\u7528\u662F\u4E00\u4E2A\u74F6\u9888\u3002 \u6709\u5173\u66F4\u591A\u4FE1\u606F\uFF0C\u8BF7\u53C2\u9605 V8 \u95EE\u9898 7381\u3002</p><p>\u53E6\u89C1\uFF1Achild_process.exec() \u548C child_process.fork()\u3002</p><h2 id="\u5B50\u7C7Bchildprocess-\u4E8B\u4EF6" tabindex="-1">\u5B50\u7C7BChildProcess \u4E8B\u4EF6</h2><p>ChildProcess \u7684\u5B9E\u4F8B\uFF0C\u8868\u793A\u884D\u751F\u7684\u5B50\u8FDB\u7A0B\u3002</p><p>ChildProcess \u7684\u5B9E\u4F8B\u4E0D\u662F\u76F4\u63A5\u521B\u5EFA\u7684\u3002 \u800C\u662F\uFF0C\u4F7F\u7528 child_process.spawn()\u3001child_process.exec()\u3001child_process.execFile() \u6216 child_process.fork() \u65B9\u6CD5\u6765\u521B\u5EFA ChildProcess \u7684\u5B9E\u4F8B\u3002</p><h3 id="close" tabindex="-1">close</h3><div class="language-html"><pre><code>code <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u5982\u679C\u5B50\u8FDB\u7A0B\u81EA\u5DF1\u9000\u51FA\uFF0C\u5219\u4E3A\u9000\u51FA\u7801\u3002
signal <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u7EC8\u6B62\u5B50\u8FDB\u7A0B\u7684\u4FE1\u53F7\u3002
</code></pre></div><p>\u5728\u8FDB\u7A0B\u5DF2\u7ED3\u675F\u5E76\u4E14\u5B50\u8FDB\u7A0B\u7684\u6807\u51C6\u8F93\u5165\u8F93\u51FA\u6D41\u5DF2\u5173\u95ED\u4E4B\u540E\uFF0C\u5219\u89E6\u53D1 &#39;close&#39; \u4E8B\u4EF6\u3002 \u8FD9\u4E0E &#39;exit&#39; \u4E8B\u4EF6\u4E0D\u540C\uFF0C\u56E0\u4E3A\u591A\u4E2A\u8FDB\u7A0B\u53EF\u80FD\u5171\u4EAB\u76F8\u540C\u7684\u6807\u51C6\u8F93\u5165\u8F93\u51FA\u6D41\u3002 &#39;close&#39; \u4E8B\u4EF6\u5C06\u59CB\u7EC8\u5728 &#39;exit&#39; \u6216 &#39;error&#39;\uFF08\u5982\u679C\u5B50\u8FDB\u7A0B\u884D\u751F\u5931\u8D25\uFF09\u5DF2\u7ECF\u89E6\u53D1\u4E4B\u540E\u89E6\u53D1\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ls <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;ls&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;-lh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/usr&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ls<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stdout: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ls<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">child process close all stdio with code </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ls<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;exit&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">child process exited with code </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="disconnect" tabindex="-1">disconnect</h3><p>\u8C03\u7528\u7236\u8FDB\u7A0B\u4E2D\u7684 subprocess.<s>disconnect</s>() \u65B9\u6CD5\u6216\u5B50\u8FDB\u7A0B\u4E2D\u7684 process.disconnect() \u65B9\u6CD5\u540E\u4F1A\u89E6\u53D1 &#39;disconnect&#39; \u4E8B\u4EF6\u3002 \u65AD\u5F00\u8FDE\u63A5\u540E\u5C31\u4E0D\u80FD\u518D\u53D1\u9001\u6216\u63A5\u6536\u6D88\u606F\uFF0C\u4E14 subprocess.connected \u5C5E\u6027\u4E3A false\u3002</p><h3 id="error" tabindex="-1">error</h3><div class="language-html"><pre><code>err <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Error</span><span class="token punctuation">&gt;</span></span> \u9519\u8BEF\u3002
</code></pre></div><p>&#39;error&#39; \u4E8B\u4EF6\u5728\u4EE5\u4E0B\u60C5\u51B5\u4E0B\u89E6\u53D1\uFF1A</p><p>\u65E0\u6CD5\u884D\u751F\u8BE5\u8FDB\u7A0B\uFF0C\u6216 \u8FDB\u7A0B\u65E0\u6CD5\u7EC8\u6B62\uFF0C\u6216 \u5411\u5B50\u8FDB\u7A0B\u53D1\u9001\u6D88\u606F\u5931\u8D25\u3002 \u53D1\u751F\u9519\u8BEF\u540E\uFF0C&#39;exit&#39; \u4E8B\u4EF6\u53EF\u80FD\u4F1A\u4E5F\u53EF\u80FD\u4E0D\u4F1A\u89E6\u53D1\u3002 \u5728\u76D1\u542C &#39;exit&#39; \u548C &#39;error&#39; \u4E8B\u4EF6\u65F6\uFF0C\u9632\u6B62\u591A\u6B21\u610F\u5916\u8C03\u7528\u53E5\u67C4\u51FD\u6570\u3002</p><p>\u53E6\u89C1 subprocess.kill() \u548C subprocess.send()\u3002</p><h3 id="exit" tabindex="-1">exit</h3><div class="language-html"><pre><code>code <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> \u5982\u679C\u5B50\u8FDB\u7A0B\u81EA\u5DF1\u9000\u51FA\uFF0C\u5219\u4E3A\u9000\u51FA\u7801\u3002
signal <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> \u7EC8\u6B62\u5B50\u8FDB\u7A0B\u7684\u4FE1\u53F7\u3002
</code></pre></div><p>&#39;exit&#39; \u4E8B\u4EF6\u5728\u5B50\u8FDB\u7A0B\u7ED3\u675F\u540E\u89E6\u53D1\u3002 \u5982\u679C\u8FDB\u7A0B\u9000\u51FA\uFF0C\u5219 code \u4E3A\u6700\u7EC8\u7684\u8FDB\u7A0B\u9000\u51FA\u7801\uFF0C\u5426\u5219\u4E3A null\u3002 \u5982\u679C\u8FDB\u7A0B\u56E0\u6536\u5230\u4FE1\u53F7\u800C\u7EC8\u6B62\uFF0C\u5219 signal \u662F\u4FE1\u53F7\u7684\u5B57\u7B26\u4E32\u540D\u79F0\uFF0C\u5426\u5219\u4E3A null\u3002 \u4E24\u8005\u4E4B\u4E00\u5C06\u59CB\u7EC8\u662F\u975E null\u3002</p><p>\u5F53 &#39;exit&#39; \u4E8B\u4EF6\u88AB\u89E6\u53D1\u65F6\uFF0C\u5B50\u8FDB\u7A0B\u6807\u51C6\u8F93\u5165\u8F93\u51FA\u6D41\u53EF\u80FD\u4ECD\u5904\u4E8E\u6253\u5F00\u72B6\u6001\u3002</p><p>Node.js \u4E3A SIGINT \u548C SIGTERM \u5EFA\u7ACB\u4FE1\u53F7\u53E5\u67C4\uFF0C\u4E14 Node.js \u8FDB\u7A0B\u4E0D\u4F1A\u56E0\u4E3A\u6536\u5230\u8FD9\u4E9B\u4FE1\u53F7\u800C\u7ACB\u5373\u7EC8\u6B62\u3002 \u800C\u662F\uFF0CNode.js \u5C06\u6267\u884C\u4E00\u7CFB\u5217\u6E05\u7406\u64CD\u4F5C\uFF0C\u7136\u540E\u91CD\u65B0\u89E6\u53D1\u5DF2\u5904\u7406\u7684\u4FE1\u53F7\u3002</p><h3 id="message" tabindex="-1">message</h3><div class="language-html"><pre><code>message <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Object</span><span class="token punctuation">&gt;</span></span> \u89E3\u6790\u7684 JSON \u5BF9\u8C61\u6216\u539F\u59CB\u503C\u3002
sendHandle <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Handle</span><span class="token punctuation">&gt;</span></span> net.Socket \u6216 net.Server \u5BF9\u8C61\u3001\u6216\u672A\u5B9A\u4E49\u3002
</code></pre></div><p>\u5F53\u5B50\u8FDB\u7A0B\u4F7F\u7528 process.send() \u53D1\u9001\u6D88\u606F\u65F6\uFF0C\u5219\u89E6\u53D1 &#39;message&#39; \u4E8B\u4EF6\u3002</p><p>\u6D88\u606F\u7ECF\u8FC7\u5E8F\u5217\u5316\u548C\u89E3\u6790\u3002 \u7ED3\u679C\u6D88\u606F\u53EF\u80FD\u4E0E\u6700\u521D\u53D1\u9001\u7684\u6D88\u606F\u4E0D\u540C\u3002</p><p>\u5982\u679C\u5728\u884D\u751F\u5B50\u8FDB\u7A0B\u65F6\u5C06 serialization \u9009\u9879\u8BBE\u7F6E\u4E3A &#39;advanced&#39;\uFF0C\u5219 message \u53C2\u6570\u53EF\u4EE5\u5305\u542B JSON \u65E0\u6CD5\u8868\u793A\u7684\u6570\u636E\u3002 \u6709\u5173\u66F4\u591A\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u8BF7\u53C2\u9605\u9AD8\u7EA7\u5E8F\u5217\u5316\u3002</p><h3 id="spawn-2" tabindex="-1">spawn</h3><div class="language-html"><pre><code>\u4E00\u65E6\u5B50\u8FDB\u7A0B\u884D\u751F\u6210\u529F\uFF0C\u5219\u4F1A\u89E6\u53D1 &#39;spawn&#39; \u4E8B\u4EF6\u3002 \u5982\u679C\u5B50\u8FDB\u7A0B\u6CA1\u6709\u884D\u751F\u6210\u529F\uFF0C\u5219\u4E0D\u4F1A\u89E6\u53D1 &#39;spawn&#39; \u4E8B\u4EF6\uFF0C\u800C\u662F\u89E6\u53D1 &#39;error&#39; \u4E8B\u4EF6\u3002

\u5982\u679C\u89E6\u53D1\uFF0C\u5219 &#39;spawn&#39; \u4E8B\u4EF6\u5728\u6240\u6709\u5176\u4ED6\u4E8B\u4EF6\u4E4B\u524D\uFF0C\u4E14\u5728\u901A\u8FC7 stdout \u6216 stderr \u63A5\u6536\u4EFB\u4F55\u6570\u636E\u4E4B\u524D\u3002

\u65E0\u8BBA\u5728\u884D\u751F\u7684\u8FDB\u7A0B\u5185\u662F\u5426\u53D1\u751F\u9519\u8BEF\uFF0C&#39;spawn&#39; \u4E8B\u4EF6\u90FD\u4F1A\u89E6\u53D1\u3002 \u4F8B\u5982\uFF0C\u5982\u679C bash some-command \u884D\u751F\u6210\u529F\uFF0C\u5219 &#39;spawn&#39; \u4E8B\u4EF6\u5C06\u89E6\u53D1\uFF0C\u5C3D\u7BA1 bash \u53EF\u80FD\u884D\u751F some-command \u5931\u8D25\u3002 \u5F53\u4F7F\u7528 { shell: true } \u65F6\uFF0C\u6B64\u6CE8\u610F\u4E8B\u9879\u4E5F\u9002\u7528\u3002
</code></pre></div><h2 id="\u5C5E\u6027" tabindex="-1">\u5C5E\u6027</h2><h3 id="subprocess-channel" tabindex="-1">subprocess.channel</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Object</span><span class="token punctuation">&gt;</span></span> \u4EE3\u8868\u5230\u5B50\u8FDB\u7A0B\u7684 IPC \u901A\u9053\u7684\u7BA1\u9053
</code></pre></div><p>subprocess.channel \u5C5E\u6027\u662F\u5BF9\u5B50\u8FDB\u7A0B\u7684 IPC \u901A\u9053\u7684\u5F15\u7528\u3002 \u5982\u679C\u5F53\u524D\u4E0D\u5B58\u5728 IPC \u901A\u9053\uFF0C\u5219\u6B64\u5C5E\u6027\u4E3A undefined\u3002</p><h3 id="subprocess-channel-ref" tabindex="-1">subprocess.channel.ref()</h3><p>\u5982\u679C\u4E4B\u524D\u5DF2\u8C03\u7528\u8FC7 .unref()\uFF0C\u5219\u6B64\u65B9\u6CD5\u4F7F IPC \u901A\u9053\u4FDD\u6301\u7236\u8FDB\u7A0B\u7684\u4E8B\u4EF6\u5FAA\u73AF\u8FD0\u884C\u3002</p><h3 id="subprocess-channel-unref" tabindex="-1">subprocess.channel.unref()</h3><p>\u6B64\u65B9\u6CD5\u4F7F IPC \u901A\u9053\u4E0D\u4FDD\u6301\u7236\u8FDB\u7A0B\u7684\u4E8B\u4EF6\u5FAA\u73AF\u8FD0\u884C\uFF0C\u5E76\u4E14\u5373\u4F7F\u5728\u901A\u9053\u6253\u5F00\u65F6\u4E5F\u8BA9\u5176\u7ED3\u675F\u3002</p><h3 id="subprocess-connected" tabindex="-1">subprocess.connected</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span> \u8C03\u7528 subprocess.disconnect() \u540E\u8BBE\u7F6E\u4E3A false\u3002
</code></pre></div><p>subprocess.connected \u5C5E\u6027\u6307\u793A\u662F\u5426\u4ECD\u7136\u53EF\u4EE5\u4ECE\u5B50\u8FDB\u7A0B\u53D1\u9001\u548C\u63A5\u6536\u6D88\u606F\u3002 \u5F53 subprocess.connected \u4E3A false \u65F6\uFF0C\u4E0D\u518D\u53EF\u80FD\u53D1\u9001\u6216\u63A5\u6536\u6D88\u606F\u3002</p><h3 id="subprocess-disconnect" tabindex="-1">subprocess.disconnect()</h3><p>\u5173\u95ED\u7236\u8FDB\u7A0B\u548C\u5B50\u8FDB\u7A0B\u4E4B\u95F4\u7684 IPC \u901A\u9053\uFF0C\u4E00\u65E6\u6CA1\u6709\u5176\u4ED6\u8FDE\u63A5\u4F7F\u5176\u4FDD\u6301\u6D3B\u52A8\u72B6\u6001\uFF0C\u5219\u5141\u8BB8\u5B50\u8FDB\u7A0B\u6B63\u5E38\u9000\u51FA\u3002 \u8C03\u7528\u6B64\u65B9\u6CD5\u540E\uFF0C\u7236\u5B50\u8FDB\u7A0B\u4E2D\u7684 subprocess.connected \u548C process.connected \u5C5E\u6027\uFF08\u5206\u522B\uFF09\u5C06\u8BBE\u7F6E\u4E3A false\uFF0C\u8FDB\u7A0B\u4E4B\u95F4\u5C06\u65E0\u6CD5\u518D\u4F20\u9012\u6D88\u606F\u3002</p><p>\u5F53\u63A5\u6536\u8FC7\u7A0B\u4E2D\u6CA1\u6709\u6D88\u606F\u65F6\uFF0C\u5C06\u89E6\u53D1 &#39;disconnect&#39; \u4E8B\u4EF6\u3002 \u8FD9\u901A\u5E38\u4F1A\u5728\u8C03\u7528 subprocess.disconnect() \u540E\u7ACB\u5373\u89E6\u53D1\u3002</p><p>\u5F53\u5B50\u8FDB\u7A0B\u662F Node.js \u5B9E\u4F8B\uFF08\u4F8B\u5982\u4F7F\u7528 child_process.fork() \u884D\u751F\uFF09\u65F6\uFF0C\u5219\u53EF\u4EE5\u5728\u5B50\u8FDB\u7A0B\u4E2D\u8C03\u7528 process.disconnect() \u65B9\u6CD5\u6765\u5173\u95ED IPC \u901A\u9053\u3002</p><h3 id="subprocess-exitcode" tabindex="-1">subprocess.exitCode</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>integer</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>subprocess.exitCode \u5C5E\u6027\u8868\u793A\u5B50\u8FDB\u7A0B\u7684\u9000\u51FA\u7801\u3002 \u5982\u679C\u5B50\u8FDB\u7A0B\u4ECD\u5728\u8FD0\u884C\uFF0C\u5219\u8BE5\u5B57\u6BB5\u5C06\u4E3A null\u3002</p><h3 id="subprocess-kill-signal" tabindex="-1">subprocess.kill([signal])</h3><div class="language-html"><pre><code>signal <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span>
\u8FD4\u56DE: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>subprocess.kill() \u65B9\u6CD5\u5411\u5B50\u8FDB\u7A0B\u53D1\u9001\u4FE1\u53F7\u3002 \u5982\u679C\u6CA1\u6709\u7ED9\u5B9A\u53C2\u6570\uFF0C\u5219\u8FDB\u7A0B\u5C06\u88AB\u53D1\u9001 &#39;SIGTERM&#39; \u4FE1\u53F7\u3002 \u6709\u5173\u53EF\u7528\u4FE1\u53F7\u7684\u5217\u8868\uFF0C\u8BF7\u53C2\u9605 signal(7)\u3002 \u5982\u679C kill(2) \u6210\u529F\uFF0C\u5219\u6B64\u51FD\u6570\u8FD4\u56DE true\uFF0C\u5426\u5219\u8FD4\u56DE false\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> grep <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;grep&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;ssh&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

grep<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span> signal</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">child process terminated due to receipt of signal </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>signal<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u53D1\u9001 SIGHUP \u5230\u8FDB\u7A0B\u3002</span>
grep<span class="token punctuation">.</span><span class="token function">kill</span><span class="token punctuation">(</span><span class="token string">&#39;SIGHUP&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5982\u679C\u4FE1\u53F7\u65E0\u6CD5\u4F20\u8FBE\uFF0C\u5219 ChildProcess \u5BF9\u8C61\u53EF\u80FD\u4F1A\u89E6\u53D1 &#39;error&#39; \u4E8B\u4EF6\u3002 \u5411\u5DF2\u7ECF\u9000\u51FA\u7684\u5B50\u8FDB\u7A0B\u53D1\u9001\u4FE1\u53F7\u4E0D\u662F\u9519\u8BEF\uFF0C\u4F46\u53EF\u80FD\u4F1A\u4EA7\u751F\u4E0D\u53EF\u9884\u89C1\u7684\u7ED3\u679C\u3002 \u5177\u4F53\u6765\u8BF4\uFF0C\u5982\u679C\u8FDB\u7A0B\u6807\u8BC6\u7B26 (PID) \u5DF2\u91CD\u65B0\u5206\u914D\u7ED9\u53E6\u4E00\u4E2A\u8FDB\u7A0B\uFF0C\u5219\u4FE1\u53F7\u5C06\u4F20\u7ED9\u8BE5\u8FDB\u7A0B\uFF0C\u800C\u8FD9\u53EF\u80FD\u4F1A\u4EA7\u751F\u610F\u5916\u7ED3\u679C\u3002</p><p>\u867D\u7136\u8BE5\u51FD\u6570\u88AB\u79F0\u4E3A kill\uFF0C\u4F46\u4F20\u7ED9\u5B50\u8FDB\u7A0B\u7684\u4FE1\u53F7\u5B9E\u9645\u4E0A\u53EF\u80FD\u4E0D\u4F1A\u7EC8\u6B62\u8BE5\u8FDB\u7A0B\u3002</p><p>\u8BF7\u53C2\u9605 kill(2) \u4EE5\u4F9B\u53C2\u8003\u3002</p><p>\u5728\u4E0D\u5B58\u5728 POSIX \u4FE1\u53F7\u7684 Windows \u4E0A\uFF0Csignal \u53C2\u6570\u5C06\u88AB\u5FFD\u7565\uFF0C\u5E76\u4E14\u8FDB\u7A0B\u5C06\u88AB\u5F3A\u5236\u4E14\u7A81\u7136\u5730\u7EC8\u6B62\uFF08\u7C7B\u4F3C\u4E8E &#39;SIGKILL&#39;\uFF09\u3002 \u6709\u5173\u66F4\u591A\u8BE6\u7EC6\u4FE1\u606F\uFF0C\u8BF7\u53C2\u9605\u4FE1\u53F7\u4E8B\u4EF6\u3002</p><p>\u5728 Linux \u4E0A\uFF0C\u5B50\u8FDB\u7A0B\u7684\u5B50\u8FDB\u7A0B\u5728\u8BD5\u56FE\u6740\u6B7B\u5176\u7236\u8FDB\u7A0B\u65F6\u4E0D\u4F1A\u88AB\u7EC8\u6B62\u3002 \u5F53\u5728 shell \u4E2D\u8FD0\u884C\u65B0\u8FDB\u7A0B\u6216\u4F7F\u7528 ChildProcess \u7684 shell \u9009\u9879\u65F6\uFF0C\u53EF\u80FD\u4F1A\u53D1\u751F\u8FD9\u79CD\u60C5\u51B5\uFF1A</p><div class="language-js"><pre><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> subprocess <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span>
  <span class="token string">&#39;sh&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>
    <span class="token string">&#39;-c&#39;</span><span class="token punctuation">,</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">node -e &quot;setInterval(() =&gt; {
      console.log(process.pid, &#39;is alive&#39;)
    }, 500);&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">stdio</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;inherit&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;inherit&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;inherit&#39;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  subprocess<span class="token punctuation">.</span><span class="token function">kill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u4F1A\u7EC8\u6B62 shell \u4E2D\u7684 Node.js \u8FDB\u7A0B\u3002</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="subprocess-killed" tabindex="-1">subprocess.killed</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span> \u4F7F\u7528 subprocess.kill() \u6210\u529F\u53D1\u9001\u4FE1\u53F7\u7ED9\u5B50\u8FDB\u7A0B\u540E\u8BBE\u7F6E\u4E3A true\u3002
</code></pre></div><p>subprocess.killed \u5C5E\u6027\u6307\u793A\u5B50\u8FDB\u7A0B\u662F\u5426\u6210\u529F\u63A5\u6536\u5230\u6765\u81EA subprocess.kill() \u7684\u4FE1\u53F7\u3002 killed \u5C5E\u6027\u5E76\u4E0D\u8868\u793A\u5B50\u8FDB\u7A0B\u5DF2\u7EC8\u6B62\u3002</p><h3 id="subprocess-pid" tabindex="-1">subprocess.pid</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>integer</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>undefined</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u8FD4\u56DE\u5B50\u8FDB\u7A0B\u7684\u8FDB\u7A0B\u6807\u8BC6\u7B26 (PID)\u3002 \u5982\u679C\u5B50\u8FDB\u7A0B\u7531\u4E8E\u9519\u8BEF\u800C\u65E0\u6CD5\u884D\u751F\uFF0C\u5219\u8BE5\u503C\u4E3A undefined \u5E76\u89E6\u53D1 error\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> grep <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;grep&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;ssh&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Spawned child pid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>grep<span class="token punctuation">.</span>pid<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
grep<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="subprocess-ref" tabindex="-1">subprocess.ref()</h3><p>\u5728\u8C03\u7528 subprocess.unref() \u540E\u8C03\u7528 subprocess.ref() \u5C06\u4E3A\u5B50\u8FDB\u7A0B\u6062\u590D\u5220\u9664\u7684\u5F15\u7528\u8BA1\u6570\uFF0C\u8FEB\u4F7F\u7236\u8FDB\u7A0B\u5728\u9000\u51FA\u4E4B\u524D\u7B49\u5F85\u5B50\u8FDB\u7A0B\u9000\u51FA\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> subprocess <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;child_program.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">detached</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">stdio</span><span class="token operator">:</span> <span class="token string">&#39;ignore&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

subprocess<span class="token punctuation">.</span><span class="token function">unref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
subprocess<span class="token punctuation">.</span><span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="subprocess-send-message-sendhandle-options-callback" tabindex="-1">subprocess.send(message[, sendHandle[, options]][, callback])</h3><div class="language-html"><pre><code>message <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Object</span><span class="token punctuation">&gt;</span></span>
sendHandle <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Handle</span><span class="token punctuation">&gt;</span></span>
options <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Object</span><span class="token punctuation">&gt;</span></span> options \u53C2\u6570\uFF08\u5982\u679C\u5B58\u5728\uFF09\u662F\u7528\u4E8E\u53C2\u6570\u5316\u67D0\u4E9B\u7C7B\u578B\u53E5\u67C4\u7684\u53D1\u9001\u7684\u5BF9\u8C61\u3002 options \u652F\u6301\u4EE5\u4E0B\u5C5E\u6027\uFF1A
keepOpen <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span> \u5F53\u4F20\u5165 net.Socket \u5B9E\u4F8B\u65F6\u53EF\u4EE5\u4F7F\u7528\u7684\u503C\u3002 \u5F53\u4E3A true \u65F6\uFF0C\u5957\u63A5\u5B57\u5728\u53D1\u9001\u8FC7\u7A0B\u4E2D\u4FDD\u6301\u6253\u5F00\u72B6\u6001\u3002 \u9ED8\u8BA4\u503C: false\u3002
callback <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Function</span><span class="token punctuation">&gt;</span></span>
\u8FD4\u56DE: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>boolean</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u5F53\u7236\u8FDB\u7A0B\u548C\u5B50\u8FDB\u7A0B\u4E4B\u95F4\u5EFA\u7ACB\u4E86 IPC \u901A\u9053\u65F6\uFF08\u5373\u5F53\u4F7F\u7528 child_process.fork() \u65F6\uFF09\uFF0C\u53EF\u4EE5\u4F7F\u7528 subprocess.send() \u65B9\u6CD5\u5411\u5B50\u8FDB\u7A0B\u53D1\u9001\u6D88\u606F\u3002 \u5F53\u5B50\u8FDB\u7A0B\u662F Node.js \u5B9E\u4F8B\u65F6\uFF0C\u53EF\u4EE5\u901A\u8FC7 &#39;message&#39; \u4E8B\u4EF6\u63A5\u6536\u8FD9\u4E9B\u6D88\u606F\u3002</p><p>\u6D88\u606F\u7ECF\u8FC7\u5E8F\u5217\u5316\u548C\u89E3\u6790\u3002 \u7ED3\u679C\u6D88\u606F\u53EF\u80FD\u4E0E\u6700\u521D\u53D1\u9001\u7684\u6D88\u606F\u4E0D\u540C\u3002</p><p>\u4F8B\u5982\uFF0C\u5728\u7236\u8FDB\u7A0B\u811A\u672C\u4E2D\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">const</span> cp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> n <span class="token operator">=</span> cp<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/sub.js</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

n<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">m</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;PARENT got message:&#39;</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5F15\u8D77\u5B50\u8FDB\u7A0B\u6253\u5370\uFF1ACHILD got message: { hello: &#39;world&#39; }</span>
n<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">hello</span><span class="token operator">:</span> <span class="token string">&#39;world&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7136\u540E\u5B50\u8FDB\u7A0B\u811A\u672C &#39;sub.js&#39; \u53EF\u80FD\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-js"><pre><code>process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">m</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;CHILD got message:&#39;</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5F15\u8D77\u7236\u8FDB\u7A0B\u6253\u5370\uFF1APARENT got message: { foo: &#39;bar&#39;, baz: null }</span>
process<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token number">NaN</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5B50 Node.js \u8FDB\u7A0B\u5C06\u62E5\u6709\u81EA\u5DF1\u7684 process.send() \u65B9\u6CD5\uFF0C\u5141\u8BB8\u5B50\u8FDB\u7A0B\u5C06\u6D88\u606F\u53D1\u9001\u56DE\u7236\u8FDB\u7A0B\u3002</p><p>\u5F53\u53D1\u9001 {cmd: &#39;NODE_foo&#39;} \u6D88\u606F\u65F6\u662F\u4E00\u79CD\u7279\u6B8A\u60C5\u51B5\u3002 \u5728 cmd \u5C5E\u6027\u4E2D\u5305\u542B NODE_ \u524D\u7F00\u7684\u6D88\u606F\u662F Node.js \u6838\u5FC3\u9884\u7559\u4F7F\u7528\u7684\uFF0C\u4E0D\u4F1A\u5728\u5B50\u8FDB\u7A0B\u7684 &#39;message&#39; \u4E8B\u4EF6\u4E2D\u89E6\u53D1\u3002 \u800C\u662F\uFF0C\u6B64\u7C7B\u6D88\u606F\u4F7F\u7528 &#39;internalMessage&#39; \u4E8B\u4EF6\u89E6\u53D1\uFF0C\u5E76\u7531 Node.js \u5728\u5185\u90E8\u4F7F\u7528\u3002 \u5E94\u7528\u7A0B\u5E8F\u5E94\u907F\u514D\u4F7F\u7528\u6B64\u7C7B\u6D88\u606F\u6216\u76D1\u542C &#39;internalMessage&#39; \u4E8B\u4EF6\uFF0C\u56E0\u4E3A\u5B83\u53EF\u80FD\u968F\u65F6\u66F4\u6539\uFF0C\u6055\u4E0D\u53E6\u884C\u901A\u77E5\u3002</p><p>\u53EF\u4EE5\u4F20\u7ED9 subprocess.send() \u7684\u53EF\u9009 sendHandle \u53C2\u6570\u7528\u4E8E\u5C06 TCP \u670D\u52A1\u5668\u6216\u5957\u63A5\u5B57\u5BF9\u8C61\u4F20\u7ED9\u5B50\u8FDB\u7A0B\u3002 \u5B50\u8FDB\u7A0B\u5C06\u63A5\u6536\u8BE5\u5BF9\u8C61\u4F5C\u4E3A\u4F20\u7ED9\u5728 &#39;message&#39; \u4E8B\u4EF6\u4E0A\u6CE8\u518C\u7684\u56DE\u8C03\u51FD\u6570\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u3002 \u5728\u5957\u63A5\u5B57\u4E2D\u63A5\u6536\u548C\u7F13\u51B2\u7684\u4EFB\u4F55\u6570\u636E\u90FD\u4E0D\u4F1A\u53D1\u9001\u7ED9\u5B50\u8FDB\u7A0B\u3002</p><p>\u53EF\u9009\u7684 callback \u51FD\u6570\u5C06\u5728\u6D88\u606F\u53D1\u9001\u4E4B\u540E\u4F46\u5728\u5B50\u8FDB\u7A0B\u53EF\u80FD\u63A5\u6536\u5230\u5B83\u4E4B\u524D\u8C03\u7528\u3002 \u8BE5\u51FD\u6570\u4F7F\u7528\u5355\u4E2A\u53C2\u6570\u8C03\u7528\uFF1A\u6210\u529F\u65F6\u4E3A null\uFF0C\u5931\u8D25\u65F6\u4E3A Error \u5BF9\u8C61\u3002</p><p>\u5982\u679C\u6CA1\u6709\u63D0\u4F9B callback \u51FD\u6570\u4E14\u65E0\u6CD5\u53D1\u9001\u6D88\u606F\uFF0C\u5219 ChildProcess \u5BF9\u8C61\u5C06\u89E6\u53D1 &#39;error&#39; \u4E8B\u4EF6\u3002 \u4F8B\u5982\uFF0C\u5F53\u5B50\u8FDB\u7A0B\u5DF2\u7ECF\u9000\u51FA\u65F6\uFF0C\u5C31\u4F1A\u53D1\u751F\u8FD9\u79CD\u60C5\u51B5\u3002</p><p>\u5982\u679C\u901A\u9053\u5DF2\u5173\u95ED\u6216\u672A\u53D1\u9001\u6D88\u606F\u7684\u79EF\u538B\u8D85\u8FC7\u9608\u503C\uFF08\u8FD9\u4F7F\u5F97\u53D1\u9001\u66F4\u591A\u6D88\u606F\u662F\u4E0D\u660E\u667A\u7684\uFF09\uFF0C\u5219 subprocess.send() \u5C06\u8FD4\u56DE false\u3002 \u5426\u5219\uFF0C\u8BE5\u65B9\u6CD5\u8FD4\u56DE true\u3002 callback \u51FD\u6570\u53EF\u7528\u4E8E\u5B9E\u73B0\u6D41\u91CF\u63A7\u5236</p><p>\u793A\u4F8B\uFF1A\u53D1\u9001\u670D\u52A1\u5668\u5BF9\u8C61</p><div class="language-js"><pre><code>\u4F8B\u5982\uFF0C\u53EF\u4EE5\u4F7F\u7528 sendHandle \u53C2\u6570\u5C06 <span class="token constant">TCP</span> \u670D\u52A1\u5668\u5BF9\u8C61\u7684\u53E5\u67C4\u4F20\u7ED9\u5B50\u8FDB\u7A0B\uFF0C\u5982\u4E0B\u4F8B\u6240\u793A\uFF1A

<span class="token keyword">const</span> subprocess <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token string">&#39;subprocess.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6253\u5F00\u670D\u52A1\u5668\u5BF9\u8C61\u5E76\u53D1\u9001\u53E5\u67C4\u3002</span>
<span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:net&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;connection&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">socket</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
socket<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;handled by parent&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">1337</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
subprocess<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;server&#39;</span><span class="token punctuation">,</span> server<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
\u7136\u540E\u5B50\u8FDB\u7A0B\u5C06\u6536\u5230\u670D\u52A1\u5668\u5BF9\u8C61\uFF1A

process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> server</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">===</span> <span class="token string">&#39;server&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;connection&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">socket</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
socket<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;handled by child&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
\u4E00\u65E6\u670D\u52A1\u5668\u73B0\u5728\u5728\u7236\u8FDB\u7A0B\u548C\u5B50\u8FDB\u7A0B\u4E4B\u95F4\u5171\u4EAB\uFF0C\u5219\u4E00\u4E9B\u8FDE\u63A5\u53EF\u4EE5\u7531\u7236\u8FDB\u7A0B\u5904\u7406\uFF0C\u4E00\u4E9B\u8FDE\u63A5\u7531\u5B50\u8FDB\u7A0B\u5904\u7406\u3002
\u867D\u7136\u4E0A\u9762\u7684\u793A\u4F8B\u4F7F\u7528\u4F7F\u7528 node<span class="token operator">:</span>net \u6A21\u5757\u521B\u5EFA\u7684\u670D\u52A1\u5668\uFF0C\u4F46 node<span class="token operator">:</span>dgram \u6A21\u5757\u670D\u52A1\u5668\u4F7F\u7528\u5B8C\u5168\u76F8\u540C\u7684\u5DE5\u4F5C\u6D41\u7A0B\uFF0C
\u9664\u4E86\u76D1\u542C <span class="token string">&#39;message&#39;</span> \u4E8B\u4EF6\u800C\u4E0D\u662F <span class="token string">&#39;connection&#39;</span> \u548C\u4F7F\u7528 <span class="token function">server</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> \u800C\u4E0D\u662F server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\u3002 
\u4F46\u662F\uFF0C\u76EE\u524D\u4EC5\u5728 Unix \u5E73\u53F0\u4E0A\u652F\u6301\u3002
</code></pre></div><p>\u793A\u4F8B\uFF1A\u53D1\u9001\u5957\u63A5\u5B57\u5BF9\u8C61</p><p>\u540C\u6837\uFF0CsendHandler \u53C2\u6570\u53EF\u7528\u4E8E\u5C06\u5957\u63A5\u5B57\u7684\u53E5\u67C4\u4F20\u7ED9\u5B50\u8FDB\u7A0B\u3002 \u4E0B\u9762\u7684\u4F8B\u5B50\u4EA7\u751F\u4E86\u4E24\u4E2A\u5B50\u8FDB\u7A0B\uFF0C\u6BCF\u4E2A\u5B50\u8FDB\u7A0B\u90FD\u5904\u7406\u5177\u6709\u201Cnormal\u201D\u6216\u201Cspecial\u201D\u4F18\u5148\u7EA7\u7684\u8FDE\u63A5\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> fork <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> normal <span class="token operator">=</span> <span class="token function">fork</span><span class="token punctuation">(</span><span class="token string">&#39;subprocess.js&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;normal&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> special <span class="token operator">=</span> <span class="token function">fork</span><span class="token punctuation">(</span><span class="token string">&#39;subprocess.js&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;special&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6253\u5F00\u670D\u52A1\u5668\u5E76\u5C06\u5957\u63A5\u5B57\u53D1\u9001\u7ED9\u5B50\u8FDB\u7A0B\u3002</span>
<span class="token comment">// \u4F7F\u7528 pauseOnConnect \u9632\u6B62\u5957\u63A5\u5B57\u5728\u53D1\u9001\u5230\u5B50\u8FDB\u7A0B\u4E4B\u524D\u88AB\u8BFB\u53D6\u3002</span>
<span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:net&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">pauseOnConnect</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;connection&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">socket</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u5982\u679C\u8FD9\u662F special \u4F18\u5148\u7EA7...</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>socket<span class="token punctuation">.</span>remoteAddress <span class="token operator">===</span> <span class="token string">&#39;74.125.127.100&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        special<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;socket&#39;</span><span class="token punctuation">,</span> socket<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8FD9\u662F normal \u4F18\u5148\u7EA7\u3002</span>
    normal<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;socket&#39;</span><span class="token punctuation">,</span> socket<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">1337</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>subprocess.js \u5C06\u63A5\u6536\u5957\u63A5\u5B57\u53E5\u67C4\u4F5C\u4E3A\u4F20\u7ED9\u4E8B\u4EF6\u56DE\u8C03\u51FD\u6570\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF1A</p><div class="language-js"><pre><code>process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> socket</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">===</span> <span class="token string">&#39;socket&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>socket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u68C0\u67E5\u5BA2\u6237\u7AEF\u5957\u63A5\u5B57\u662F\u5426\u5B58\u5728\u3002</span>
      <span class="token comment">// \u5957\u63A5\u5B57\u53EF\u80FD\u4F1A\u5728\u53D1\u9001\u548C\u5728\u5B50\u8FDB\u7A0B\u4E2D\u63A5\u6536\u5230\u5B83\u4E4B\u95F4\u5173\u95ED\u3002</span>
      socket<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Request handled with </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> priority</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u4E0D\u8981\u5728\u5DF2\u4F20\u7ED9\u5B50\u8FDB\u7A0B\u7684\u5957\u63A5\u5B57\u4E0A\u4F7F\u7528 .maxConnections\u3002 \u7236\u8FDB\u7A0B\u65E0\u6CD5\u8DDF\u8E2A\u5957\u63A5\u5B57\u4F55\u65F6\u88AB\u9500\u6BC1\u3002</p><p>\u5B50\u8FDB\u7A0B\u4E2D\u7684\u4EFB\u4F55 &#39;message&#39; \u53E5\u67C4\u90FD\u5E94\u9A8C\u8BC1 socket \u662F\u5426\u5B58\u5728\uFF0C\u56E0\u4E3A\u5728\u5C06\u8FDE\u63A5\u53D1\u9001\u5230\u5B50\u8FDB\u7A0B\u6240\u9700\u7684\u65F6\u95F4\u5185\uFF0C\u8FDE\u63A5\u53EF\u80FD\u5DF2\u5173\u95ED\u3002</p><h3 id="subprocess-signalcode" tabindex="-1">subprocess.signalCode</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span> | <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>null</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>subprocess.signalCode \u5C5E\u6027\u8868\u793A\u5B50\u8FDB\u7A0B\u63A5\u6536\u5230\u7684\u4FE1\u53F7\uFF08\u5982\u679C\u6709\uFF09\uFF0C\u5426\u5219\u4E3A null\u3002</p><h3 id="subprocess-spawnargs" tabindex="-1">subprocess.spawnargs</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Array</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>subprocess.spawnargs \u5C5E\u6027\u8868\u793A\u5B50\u8FDB\u7A0B\u542F\u52A8\u65F6\u4F7F\u7528\u7684\u547D\u4EE4\u884C\u53C2\u6570\u7684\u5B8C\u6574\u5217\u8868\u3002</p><h3 id="subprocess-spawnfile" tabindex="-1">subprocess.spawnfile</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>subprocess.spawnfile \u5C5E\u6027\u8868\u793A\u542F\u52A8\u7684\u5B50\u8FDB\u7A0B\u7684\u53EF\u6267\u884C\u6587\u4EF6\u540D\u3002</p><p>\u5BF9\u4E8E child_process.fork()\uFF0C\u5176\u503C\u5C06\u7B49\u4E8E process.execPath\u3002 \u5BF9\u4E8E child_process.spawn()\uFF0C\u5B83\u7684\u503C\u5C06\u662F\u53EF\u6267\u884C\u6587\u4EF6\u7684\u540D\u79F0\u3002 \u5BF9\u4E8E child_process.exec()\uFF0C\u5B83\u7684\u503C\u5C06\u662F\u542F\u52A8\u5B50\u8FDB\u7A0B\u7684 shell \u7684\u540D\u79F0\u3002</p><h3 id="subprocess-stderr" tabindex="-1">subprocess.stderr</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stream.Readable</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u4EE3\u8868\u5B50\u8FDB\u7A0B\u7684 stderr \u7684 Readable Stream\u3002</p><p>\u5982\u679C\u5B50\u8FDB\u7A0B\u884D\u751F\u65F6 stdio[2] \u8BBE\u7F6E\u4E3A &#39;pipe&#39; \u4EE5\u5916\u7684\u4EFB\u4F55\u503C\uFF0C\u5219\u6B64\u5C06\u662F null\u3002</p><p>subprocess.stderr \u662F subprocess.stdio[2] \u7684\u522B\u540D\u3002 \u8FD9\u4E24\u4E2A\u5C5E\u6027\u5C06\u5F15\u7528\u76F8\u540C\u7684\u503C\u3002</p><p>\u5982\u679C\u65E0\u6CD5\u6210\u529F\u884D\u751F\u5B50\u8FDB\u7A0B\uFF0C\u5219 subprocess.stderr \u5C5E\u6027\u53EF\u80FD\u662F null\u3002</p><h3 id="subprocess-stdin" tabindex="-1">subprocess.stdin</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stream.Writable</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u4EE3\u8868\u5B50\u8FDB\u7A0B\u7684 stdin \u7684 Writable Stream\u3002</p><p>\u5982\u679C\u5B50\u8FDB\u7A0B\u7B49\u5F85\u8BFB\u53D6\u5176\u6240\u6709\u8F93\u5165\uFF0C\u5219\u5728\u901A\u8FC7 end() \u5173\u95ED\u6B64\u6D41\u4E4B\u524D\uFF0C\u5B50\u8FDB\u7A0B\u5C06\u4E0D\u4F1A\u7EE7\u7EED\u3002</p><p>\u5982\u679C\u5B50\u8FDB\u7A0B\u884D\u751F\u65F6 stdio[0] \u8BBE\u7F6E\u4E3A &#39;pipe&#39; \u4EE5\u5916\u7684\u4EFB\u4F55\u503C\uFF0C\u5219\u6B64\u5C06\u662F null\u3002</p><p>subprocess.stdin \u662F subprocess.stdio[0] \u7684\u522B\u540D\u3002 \u8FD9\u4E24\u4E2A\u5C5E\u6027\u5C06\u5F15\u7528\u76F8\u540C\u7684\u503C\u3002</p><p>\u5982\u679C\u65E0\u6CD5\u6210\u529F\u884D\u751F\u5B50\u8FDB\u7A0B\uFF0C\u5219 subprocess.stdin \u5C5E\u6027\u53EF\u80FD\u662F undefined\u3002</p><h3 id="subprocess-stdout" tabindex="-1">subprocess.stdout</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stream.Readable</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u4EE3\u8868\u5B50\u8FDB\u7A0B\u7684 stdout \u7684 Readable Stream\u3002</p><p>\u5982\u679C\u5B50\u8FDB\u7A0B\u884D\u751F\u65F6 stdio[1] \u8BBE\u7F6E\u4E3A &#39;pipe&#39; \u4EE5\u5916\u7684\u4EFB\u4F55\u503C\uFF0C\u5219\u6B64\u5C06\u662F null\u3002</p><p>subprocess.stdout \u662F subprocess.stdio[1] \u7684\u522B\u540D\u3002 \u8FD9\u4E24\u4E2A\u5C5E\u6027\u5C06\u5F15\u7528\u76F8\u540C\u7684\u503C\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> spawn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> subprocess <span class="token operator">=</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;ls&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

subprocess<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Received chunk </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>data<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="subprocess-stdio" tabindex="-1">subprocess.stdio</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Array</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u5230\u5B50\u8FDB\u7A0B\u7684\u7A00\u758F\u7BA1\u9053\u6570\u7EC4\uFF0C\u5BF9\u5E94\u4E8E\u4F20\u7ED9 child_process.spawn() \u7684 stdio \u9009\u9879\u4E2D\u7684\u4F4D\u7F6E\uFF0C\u8FD9\u4E9B\u4F4D\u7F6E\u5DF2\u8BBE\u7F6E\u4E3A\u503C &#39;pipe&#39;\u3002 subprocess.stdio[0]\u3001subprocess.stdio[1] \u548C subprocess.stdio[2] \u4E5F\u53EF\u5206\u522B\u7528\u4F5C subprocess.stdin\u3001subprocess.stdout \u548C subprocess.stderr\u3002</p><p>\u5728\u4E0B\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u53EA\u6709\u5B50\u8FDB\u7A0B\u7684\u6587\u4EF6\u63CF\u8FF0\u7B26 1 (\u6807\u51C6\u8F93\u51FA) \u88AB\u914D\u7F6E\u4E3A\u7BA1\u9053\uFF0C\u6240\u4EE5\u53EA\u6709\u8FDB\u7A0B\u7684 subprocess.stdio[1] \u662F\u6D41\uFF0C\u6570\u7EC4\u4E2D\u7684\u6240\u6709\u5176\u4ED6\u503C\u90FD\u662F null\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> assert <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:assert&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> child_process <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> subprocess <span class="token operator">=</span> child_process<span class="token punctuation">.</span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;ls&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">stdio</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// \u4E3A\u5B50\u8FDB\u7A0B\u4F7F\u7528\u7236\u8FDB\u7A0B\u7684\u6807\u51C6\u8F93\u5165\u3002</span>
    <span class="token string">&#39;pipe&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u7BA1\u9053\u5B50\u8FDB\u7A0B\u7684\u6807\u51C6\u8F93\u51FA\u5230\u7236\u8FDB\u7A0B\u3002</span>
    fs<span class="token punctuation">.</span><span class="token function">openSync</span><span class="token punctuation">(</span><span class="token string">&#39;err.out&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u5C06\u5B50\u8FDB\u7A0B\u7684\u6807\u51C6\u9519\u8BEF\u5B9A\u5411\u5230\u6587\u4EF6\u3002</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

assert<span class="token punctuation">.</span><span class="token function">strictEqual</span><span class="token punctuation">(</span>subprocess<span class="token punctuation">.</span>stdio<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
assert<span class="token punctuation">.</span><span class="token function">strictEqual</span><span class="token punctuation">(</span>subprocess<span class="token punctuation">.</span>stdio<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> subprocess<span class="token punctuation">.</span>stdin<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">assert</span><span class="token punctuation">(</span>subprocess<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>
assert<span class="token punctuation">.</span><span class="token function">strictEqual</span><span class="token punctuation">(</span>subprocess<span class="token punctuation">.</span>stdio<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> subprocess<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>

assert<span class="token punctuation">.</span><span class="token function">strictEqual</span><span class="token punctuation">(</span>subprocess<span class="token punctuation">.</span>stdio<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
assert<span class="token punctuation">.</span><span class="token function">strictEqual</span><span class="token punctuation">(</span>subprocess<span class="token punctuation">.</span>stdio<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> subprocess<span class="token punctuation">.</span>stderr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5982\u679C\u65E0\u6CD5\u6210\u529F\u884D\u751F\u5B50\u8FDB\u7A0B\uFF0C\u5219 subprocess.stdio \u5C5E\u6027\u53EF\u80FD\u662F undefined\u3002</p><h3 id="subprocess-unref" tabindex="-1">subprocess.unref()</h3><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u7236\u8FDB\u7A0B\u5C06\u7B49\u5F85\u5206\u79BB\u7684\u5B50\u8FDB\u7A0B\u9000\u51FA\u3002 \u4E3A\u4E86\u9632\u6B62\u7236\u8FDB\u7A0B\u7B49\u5F85\u7ED9\u5B9A\u7684 subprocess \u9000\u51FA\uFF0C\u5219\u4F7F\u7528 subprocess.unref() \u65B9\u6CD5\u3002 \u8FD9\u6837\u505A\u4F1A\u4F7F\u7236\u8FDB\u7A0B\u7684\u4E8B\u4EF6\u5FAA\u73AF\u4E0D\u5C06\u5B50\u8FDB\u7A0B\u5305\u62EC\u5728\u5176\u5F15\u7528\u8BA1\u6570\u4E2D\uFF0C\u4ECE\u800C\u5141\u8BB8\u7236\u8FDB\u7A0B\u72EC\u7ACB\u4E8E\u5B50\u8FDB\u7A0B\u9000\u51FA\uFF0C\u9664\u975E\u5728\u5B50\u8FDB\u7A0B\u548C\u7236\u8FDB\u7A0B\u4E4B\u95F4\u5EFA\u7ACB\u4E86 IPC \u901A\u9053\u3002</p><div class="language-html"><pre><code>const { spawn } = require(&#39;node:child_process&#39;);

const subprocess = spawn(process.argv[0], [&#39;child_program.js&#39;], {
  detached: true,
  stdio: &#39;ignore&#39;
});

subprocess.unref();
</code></pre></div><h2 id="maxbuffer-\u548C-unicode" tabindex="-1">maxBuffer \u548C Unicode</h2><p>maxBuffer \u9009\u9879\u6307\u5B9A stdout \u6216 stderr \u4E0A\u5141\u8BB8\u7684\u6700\u5927\u5B57\u8282\u6570\u3002 \u5982\u679C\u8D85\u8FC7\u6B64\u503C\uFF0C\u5219\u7EC8\u6B62\u5B50\u8FDB\u7A0B\u3002 \u8FD9\u4F1A\u5F71\u54CD\u5305\u542B\u591A\u5B57\u8282\u5B57\u7B26\u7F16\u7801\uFF08\u4F8B\u5982 UTF-8 \u6216 UTF-16\uFF09\u7684\u8F93\u51FA\u3002 \u4F8B\u5982\uFF0Cconsole.log(&#39;\u4E2D\u6587\u6D4B\u8BD5&#39;) \u5C06\u5411 stdout \u53D1\u9001 13 \u4E2A UTF-8 \u7F16\u7801\u5B57\u8282\uFF0C\u5C3D\u7BA1\u53EA\u6709 4 \u4E2A\u5B57\u7B26\u3002</p><h2 id="shell-\u7684\u8981\u6C42" tabindex="-1">shell \u7684\u8981\u6C42</h2><p>shell \u5E94\u8BE5\u7406\u89E3 -c \u5F00\u5173\u3002 \u5982\u679C shell \u662F &#39;cmd.exe&#39;\uFF0C\u5219\u5E94\u8BE5\u7406\u89E3 /d /s /c \u5F00\u5173\uFF0C\u5E76\u4E14\u547D\u4EE4\u884C\u89E3\u6790\u5E94\u8BE5\u662F\u517C\u5BB9\u7684\u3002</p><h2 id="\u9ED8\u8BA4\u7684-windows-shell" tabindex="-1">\u9ED8\u8BA4\u7684 Windows shell</h2><p>\u5C3D\u7BA1\u5FAE\u8F6F\u6307\u5B9A %COMSPEC% \u5FC5\u987B\u5305\u542B\u6839\u73AF\u5883\u4E2D\u5230 &#39;cmd.exe&#39; \u7684\u8DEF\u5F84\uFF0C\u4F46\u5B50\u8FDB\u7A0B\u5E76\u4E0D\u603B\u662F\u53D7\u5230\u76F8\u540C\u7684\u8981\u6C42\u3002 \u56E0\u6B64\uFF0C\u5728\u53EF\u4EE5\u884D\u751F shell \u7684 child_process \u51FD\u6570\u4E2D\uFF0C\u5982\u679C process.<wbr>env.ComSpec \u4E0D\u53EF\u7528\uFF0C\u5219\u4F7F\u7528 &#39;cmd.exe&#39; \u4F5C\u4E3A\u540E\u5907\u3002</p><h2 id="\u9AD8\u7EA7\u5E8F\u5217\u5316" tabindex="-1">\u9AD8\u7EA7\u5E8F\u5217\u5316</h2><p>\u65B0\u589E\u4E8E: v13.2.0, v12.16.0 \u5B50\u8FDB\u7A0B\u652F\u6301 IPC \u7684\u5E8F\u5217\u5316\u673A\u5236\uFF0C\u8BE5\u673A\u5236\u57FA\u4E8E node:v8 \u6A21\u5757\u7684\u5E8F\u5217\u5316 API\uFF0C\u57FA\u4E8E HTML \u7ED3\u6784\u5316\u514B\u9686\u7B97\u6CD5\u3002 \u8FD9\u901A\u5E38\u529F\u80FD\u66F4\u5F3A\u5927\uFF0C\u652F\u6301\u66F4\u591A\u5185\u7F6E\u7684 JavaScript \u5BF9\u8C61\u7C7B\u578B\uFF0C\u4F8B\u5982 BigInt\u3001Map \u548C Set\u3001ArrayBuffer \u548C TypedArray\u3001Buffer\u3001Error\u3001RegExp \u7B49\u3002</p>`,192),c=[o];function e(l,u,i,k,r,g){return a(),s("div",null,c)}var b=n(p,[["render",e]]);export{m as __pageData,b as default};
