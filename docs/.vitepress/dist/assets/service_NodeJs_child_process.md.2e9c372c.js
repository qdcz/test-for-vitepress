import{_ as n,c as s,o as a,a as t}from"./app.f3070ad9.js";const m='{"title":"child_process","description":"","frontmatter":{},"headers":[{"level":2,"title":".spawn()","slug":"spawn"},{"level":2,"title":".exec()","slug":"exec"},{"level":2,"title":".execFile()","slug":"execfile"},{"level":2,"title":".fork()","slug":"fork"},{"level":2,"title":"\u65B9\u6CD5","slug":"\u65B9\u6CD5"},{"level":3,"title":"exec()","slug":"exec-1"},{"level":3,"title":".execFile()","slug":"execfile-1"}],"relativePath":"service/NodeJs/child_process.md","lastUpdated":1657541881476}',p={},o=t(`<h1 id="child-process" tabindex="-1">child_process</h1><p>child_process \u6A21\u5757\u63D0\u4F9B\u4E86\u884D\u751F\u5B50\u8FDB\u7A0B\u7684\u80FD\u529B, \u7B80\u5355\u6765\u8BF4\u5C31\u662F\u6267\u884Ccmd\u547D\u4EE4\u7684\u80FD\u529B</p><h2 id="spawn" tabindex="-1">.spawn()</h2><p>\u9002\u7528\u4E8E\u8FD4\u56DE\u5927\u91CF\u6570\u636E\uFF0C\u4F8B\u5982\u56FE\u50CF\u5904\u7406\uFF0C\u4E8C\u8FDB\u5236\u6570\u636E\u5904\u7406\u3002</p><h2 id="exec" tabindex="-1">.exec()</h2><p>\u9002\u7528\u4E8E\u5C0F\u91CF\u6570\u636E\uFF0CmaxBuffer \u9ED8\u8BA4\u503C\u4E3A 200 * 1024 \u8D85\u51FA\u8FD9\u4E2A\u9ED8\u8BA4\u503C\u5C06\u4F1A\u5BFC\u81F4\u7A0B\u5E8F\u5D29\u6E83\uFF0C\u6570\u636E\u91CF\u8FC7\u5927\u53EF\u91C7\u7528 spawn</p><h2 id="execfile" tabindex="-1">.execFile()</h2><p>\u7C7B\u4F3C child_process.exec()\uFF0C\u533A\u522B\u662F\u4E0D\u80FD\u901A\u8FC7 shell \u6765\u6267\u884C\uFF0C\u4E0D\u652F\u6301\u50CF I/O \u91CD\u5B9A\u5411\u548C\u6587\u4EF6\u67E5\u627E\u8FD9\u6837\u7684\u884C\u4E3A</p><h2 id="fork" tabindex="-1">.fork()</h2><p>\u884D\u751F\u65B0\u7684\u8FDB\u7A0B\uFF0C\u8FDB\u7A0B\u4E4B\u95F4\u662F\u76F8\u4E92\u72EC\u7ACB\u7684\uFF0C\u6BCF\u4E2A\u8FDB\u7A0B\u90FD\u6709\u81EA\u5DF1\u7684 V8 \u5B9E\u4F8B\u3001\u5185\u5B58\uFF0C\u7CFB\u7EDF\u8D44\u6E90\u662F\u6709\u9650\u7684\uFF0C\u4E0D\u5EFA\u8BAE\u884D\u751F\u592A\u591A\u7684\u5B50\u8FDB\u7A0B\u51FA\u6765\uFF0C \u901A\u957F\u6839\u636E\u7CFB\u7EDF** CPU \u6838\u5FC3\u6570**\u8BBE\u7F6E\u3002</p><p>\u5F02\u6B65\u521B\u5EFA\u8FDB\u7A0B</p><p>spawn\u3001fork\u3001exec\u3001execFile\u90FD\u9075\u5FAA\u5F02\u6B65\u7F16\u7A0B\u6A21\u5F0F\uFF0C\u6BCF\u4E2A\u65B9\u6CD5\u90FD\u8FD4\u56DEchildProcess\u5B9E\u4F8B\u3002</p><h2 id="\u65B9\u6CD5" tabindex="-1">\u65B9\u6CD5</h2><h3 id="exec-1" tabindex="-1">exec()</h3><p>\u8BED\u6CD5\uFF1A</p><div class="language-shell"><pre><code>options <span class="token operator">&lt;</span>Object<span class="token operator">&gt;</span>
    cwd <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token operator">&lt;</span>URL<span class="token operator">&gt;</span> \u5B50\u8FDB\u7A0B\u7684\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\u3002 \u9ED8\u8BA4\u503C: process.cwd<span class="token punctuation">(</span><span class="token punctuation">)</span>\u3002
    <span class="token function">env</span> <span class="token operator">&lt;</span>Object<span class="token operator">&gt;</span> \u73AF\u5883\u53D8\u91CF\u952E\u503C\u5BF9\u3002 \u9ED8\u8BA4\u503C: process.<wbr>env\u3002
    encoding <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> \u9ED8\u8BA4\u503C: <span class="token string">&#39;utf8&#39;</span>
    shell <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> \u7528\u4E8E\u6267\u884C\u547D\u4EE4\u7684 shell\u3002 \u8BF7\u53C2\u9605 shell \u7684\u8981\u6C42\u548C\u9ED8\u8BA4\u7684 Windows shell\u3002 \u9ED8\u8BA4\u503C: Unix \u4E0A\u662F <span class="token string">&#39;/bin/sh&#39;</span>\uFF0CWindows \u4E0A\u662F process.<wbr>env.ComSpec\u3002
    signal <span class="token operator">&lt;</span>AbortSignal<span class="token operator">&gt;</span> \u5141\u8BB8\u4F7F\u7528\u4E2D\u6B62\u4FE1\u53F7\u4E2D\u6B62\u5B50\u8FDB\u7A0B\u3002
    <span class="token function">timeout</span> <span class="token operator">&lt;</span>number<span class="token operator">&gt;</span> \u9ED8\u8BA4\u503C: <span class="token number">0</span>
    maxBuffer <span class="token operator">&lt;</span>number<span class="token operator">&gt;</span> \u6807\u51C6\u8F93\u51FA\u6216\u6807\u51C6\u9519\u8BEF\u4E0A\u5141\u8BB8\u7684\u6700\u5927\u6570\u636E\u91CF\uFF08\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\uFF09\u3002 \u5982\u679C\u8D85\u8FC7\uFF0C\u5219\u5B50\u8FDB\u7A0B\u5C06\u7EC8\u6B62\u5E76\u622A\u65AD\u4EFB\u4F55\u8F93\u51FA\u3002 \u8BF7\u53C2\u9605 maxBuffer \u548C Unicode \u7684\u6CE8\u610F\u4E8B\u9879\u3002 \u9ED8\u8BA4\u503C: <span class="token number">1024</span> * <span class="token number">1024</span>\u3002
    killSignal <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token operator">&lt;</span>integer<span class="token operator">&gt;</span> \u9ED8\u8BA4\u503C: <span class="token string">&#39;SIGTERM&#39;</span>
    uid <span class="token operator">&lt;</span>number<span class="token operator">&gt;</span> \u8BBE\u7F6E\u8FDB\u7A0B\u7684\u7528\u6237\u6807\u8BC6\uFF08\u53C2\u89C1 setuid<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\uFF09\u3002
    gid <span class="token operator">&lt;</span>number<span class="token operator">&gt;</span> \u8BBE\u7F6E\u8FDB\u7A0B\u7684\u7FA4\u7EC4\u6807\u8BC6\uFF08\u53C2\u89C1 setgid<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\uFF09\u3002
    windowsHide <span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span> \u9690\u85CF\u901A\u5E38\u5728 Windows \u7CFB\u7EDF\u4E0A\u521B\u5EFA\u7684\u5B50\u8FDB\u7A0B\u63A7\u5236\u53F0\u7A97\u53E3\u3002 \u9ED8\u8BA4\u503C: false\u3002
callback <span class="token operator">&lt;</span>Function<span class="token operator">&gt;</span> \u5F53\u8FDB\u7A0B\u7EC8\u6B62\u65F6\u4F7F\u7528\u8F93\u51FA\u8C03\u7528\u3002
    error <span class="token operator">&lt;</span>Error<span class="token operator">&gt;</span>
    stdout <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token operator">&lt;</span>Buffer<span class="token operator">&gt;</span>
    stderr <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token operator">&lt;</span>Buffer<span class="token operator">&gt;</span>
\u8FD4\u56DE: <span class="token operator">&lt;</span>ChildProcess<span class="token operator">&gt;</span>
</code></pre></div><p>\u884D\u751F shell\uFF0C\u7136\u540E\u5728\u8BE5 shell \u4E2D\u6267\u884C command\uFF0C\u7F13\u51B2\u4EFB\u4F55\u751F\u6210\u7684\u8F93\u51FA\u3002 \u4F20\u7ED9\u6267\u884C\u51FD\u6570\u7684 command \u5B57\u7B26\u4E32\u7531 shell \u76F4\u63A5\u5904\u7406\uFF0C \u7279\u6B8A\u5B57\u7B26\uFF08\u56E0 shell \u800C\u5F02\uFF09\u9700\u8981\u8FDB\u884C\u76F8\u5E94\u5904\u7406\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">const</span> util <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:util&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> exec <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;echo &quot;The \\\\$HOME variable is $HOME&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// $HOME \u53D8\u91CF\u5728\u7B2C\u4E00\u4E2A\u5B9E\u4F8B\u4E2D\u88AB\u8F6C\u4E49\uFF0C\u4F46\u5728\u7B2C\u4E8C\u4E2A\u5B9E\u4F8B\u4E2D\u6CA1\u6709\u3002</span>


<span class="token comment">/**
 * \u56DE\u8C03\u6A21\u5F0F
 * \u4F7F\u7528\u53CC\u5F15\u53F7\uFF0C\u8FD9\u6837\u8DEF\u5F84\u4E2D\u7684\u7A7A\u683C\u5C31\u4E0D\u4F1A\u88AB\u89E3\u91CA\u4E3A\u591A\u4E2A\u53C2\u6570\u7684\u5206\u9694\u7B26\u3002
 */</span>
<span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;&quot;/path/to/test file/test.sh&quot; arg1 arg2&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">exec error: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stdout: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>stdout<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">stderr: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>stderr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">/**
 * \u5F02\u6B65\u8F6C\u540C\u6B65\u6A21\u5F0F
 * 
 \u5982\u679C\u6B64\u65B9\u6CD5\u4F5C\u4E3A\u5176 util.promisify() \u7248\u672C\u88AB\u8C03\u7528\uFF0C\u5219\u5176\u5C06\u4E3A\u5177\u6709 stdout \u548C stderr \u5C5E\u6027\u7684 Object 
 \u8FD4\u56DE Promise\u3002\u8FD4\u56DE\u7684 ChildProcess \u5B9E\u4F8B\u4F5C\u4E3A child \u5C5E\u6027\u9644\u52A0\u5230 Promise\u3002 \u5982\u679C\u51FA\u73B0\u9519\u8BEF
 \uFF08\u5305\u62EC\u4EFB\u4F55\u5BFC\u81F4\u9000\u51FA\u7801\u4E0D\u662F 0 \u7684\u9519\u8BEF\uFF09,\u5219\u5C06\u8FD4\u56DE\u88AB\u62D2\u7EDD\u7684 promise,\u5176\u5177\u6709\u4E0E\u56DE\u8C03\u4E2D\u7ED9\u5B9A\u76F8\u540C\u7684 error\u5BF9\u8C61\uFF0C
 \u4F46\u6709\u4E24\u4E2A\u989D\u5916\u7684\u5C5E\u6027 stdout \u548C stderr\u3002
 */</span>
<span class="token keyword">const</span> _exec <span class="token operator">=</span> util<span class="token punctuation">.</span><span class="token function">promisify</span><span class="token punctuation">(</span>exec<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">lsExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> stdout<span class="token punctuation">,</span> stderr <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">_exec</span><span class="token punctuation">(</span><span class="token string">&#39;ls&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;stdout:&#39;</span><span class="token punctuation">,</span> stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;stderr:&#39;</span><span class="token punctuation">,</span> stderr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">lsExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">/**
 \u5982\u679C\u542F\u7528\u4E86 signal \u9009\u9879\uFF0C\u5219\u5728\u76F8\u5E94\u7684 AbortController \u4E0A\u8C03\u7528 .abort() \u4E0E\u5728\u5B50\u8FDB\u7A0B\u4E0A\u8C03\u7528
 .kill() \u7C7B\u4F3C\uFF0C\u53EA\u662F\u4F20\u7ED9\u56DE\u8C03\u7684\u9519\u8BEF\u5C06\u662F AbortError\uFF1A
 */</span>
<span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AbortController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> signal <span class="token punctuation">}</span> <span class="token operator">=</span> controller<span class="token punctuation">;</span>
<span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;grep ssh&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> signal <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E00\u4E2A AbortError</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
controller<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5982\u679C timeout \u5927\u4E8E 0\uFF0C\u5219\u5982\u679C\u5B50\u8FDB\u7A0B\u8FD0\u884C\u65F6\u95F4\u8D85\u8FC7 timeout \u6BEB\u79D2\uFF0C\u7236\u8FDB\u7A0B\u5C06\u53D1\u9001\u7531 killSignal \u5C5E\u6027\uFF08\u9ED8\u8BA4\u4E3A &#39;SIGTERM&#39;\uFF09\u6807\u8BC6\u7684\u4FE1\u53F7\u3002</p><h3 id="execfile-1" tabindex="-1">.execFile()</h3><div class="language-shell"><pre><code><span class="token function">file</span> <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> \u8981\u8FD0\u884C\u7684\u53EF\u6267\u884C\u6587\u4EF6\u7684\u540D\u79F0\u6216\u8DEF\u5F84\u3002
args <span class="token operator">&lt;</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> \u5B57\u7B26\u4E32\u53C2\u6570\u5217\u8868\u3002
options <span class="token operator">&lt;</span>Object<span class="token operator">&gt;</span>
    cwd <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token operator">&lt;</span>URL<span class="token operator">&gt;</span> \u5B50\u8FDB\u7A0B\u7684\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\u3002
    <span class="token function">env</span> <span class="token operator">&lt;</span>Object<span class="token operator">&gt;</span> \u73AF\u5883\u53D8\u91CF\u952E\u503C\u5BF9\u3002 \u9ED8\u8BA4\u503C: process.<wbr>env\u3002
    encoding <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> \u9ED8\u8BA4\u503C: <span class="token string">&#39;utf8&#39;</span>
    <span class="token function">timeout</span> <span class="token operator">&lt;</span>number<span class="token operator">&gt;</span> \u9ED8\u8BA4\u503C: <span class="token number">0</span>
    maxBuffer <span class="token operator">&lt;</span>number<span class="token operator">&gt;</span> \u6807\u51C6\u8F93\u51FA\u6216\u6807\u51C6\u9519\u8BEF\u4E0A\u5141\u8BB8\u7684\u6700\u5927\u6570\u636E\u91CF\uFF08\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\uFF09\u3002 \u5982\u679C\u8D85\u8FC7\uFF0C\u5219\u5B50\u8FDB\u7A0B\u5C06\u7EC8\u6B62\u5E76\u622A\u65AD\u4EFB\u4F55\u8F93\u51FA\u3002 \u8BF7\u53C2\u9605 maxBuffer \u548C Unicode \u7684\u6CE8\u610F\u4E8B\u9879\u3002 \u9ED8\u8BA4\u503C: <span class="token number">1024</span> * <span class="token number">1024</span>\u3002
    killSignal <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token operator">&lt;</span>integer<span class="token operator">&gt;</span> \u9ED8\u8BA4\u503C: <span class="token string">&#39;SIGTERM&#39;</span>
    uid <span class="token operator">&lt;</span>number<span class="token operator">&gt;</span> \u8BBE\u7F6E\u8FDB\u7A0B\u7684\u7528\u6237\u6807\u8BC6\uFF08\u53C2\u89C1 setuid<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\uFF09\u3002
    gid <span class="token operator">&lt;</span>number<span class="token operator">&gt;</span> \u8BBE\u7F6E\u8FDB\u7A0B\u7684\u7FA4\u7EC4\u6807\u8BC6\uFF08\u53C2\u89C1 setgid<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\uFF09\u3002
    windowsHide <span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span> \u9690\u85CF\u901A\u5E38\u5728 Windows \u7CFB\u7EDF\u4E0A\u521B\u5EFA\u7684\u5B50\u8FDB\u7A0B\u63A7\u5236\u53F0\u7A97\u53E3\u3002 \u9ED8\u8BA4\u503C: false\u3002
    windowsVerbatimArguments <span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span> \u5728 Windows \u4E0A\u4E0D\u4E3A\u53C2\u6570\u52A0\u4E0A\u5F15\u53F7\u6216\u8F6C\u4E49\u3002 \u5728 Unix \u4E0A\u88AB\u5FFD\u7565\u3002 \u9ED8\u8BA4\u503C: false\u3002
    shell <span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> \u5982\u679C\u662F true\uFF0C\u5219\u5728 shell \u5185\u8FD0\u884C command\u3002 \u5728 Unix \u4E0A\u4F7F\u7528 <span class="token string">&#39;/bin/sh&#39;</span>\uFF0C\u5728 Windows \u4E0A\u4F7F\u7528 process.<wbr>env.ComSpec\u3002 \u53EF\u4EE5\u5C06\u4E0D\u540C\u7684 shell \u6307\u5B9A\u4E3A\u5B57\u7B26\u4E32\u3002 \u8BF7\u53C2\u9605 shell \u7684\u8981\u6C42\u548C\u9ED8\u8BA4\u7684 Windows shell\u3002 \u9ED8\u8BA4\u503C: <span class="token boolean">false</span> \uFF08\u6CA1\u6709 shell\uFF09
    signal <span class="token operator">&lt;</span>AbortSignal<span class="token operator">&gt;</span> \u5141\u8BB8\u4F7F\u7528\u4E2D\u6B62\u4FE1\u53F7\u4E2D\u6B62\u5B50\u8FDB\u7A0B\u3002
callback <span class="token operator">&lt;</span>Function<span class="token operator">&gt;</span> \u8FDB\u7A0B\u7EC8\u6B62\u65F6\u4F7F\u7528\u8F93\u51FA\u8C03\u7528\u3002
    error <span class="token operator">&lt;</span>Error<span class="token operator">&gt;</span>
    stdout <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token operator">&lt;</span>Buffer<span class="token operator">&gt;</span>
    stderr <span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token operator">&lt;</span>Buffer<span class="token operator">&gt;</span>
\u8FD4\u56DE: <span class="token operator">&lt;</span>ChildProcess<span class="token operator">&gt;</span>
</code></pre></div>`,21),e=[o];function c(l,r,u,i,k,g){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{m as __pageData,f as default};
