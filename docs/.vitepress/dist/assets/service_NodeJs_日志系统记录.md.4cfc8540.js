import{_ as n,c as s,o as a,a as t}from"./app.71728ad2.js";const y='{"title":"\u65E5\u5FD7\u5206\u6790\u7CFB\u7EDF","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u4EE3\u7801","slug":"\u4EE3\u7801"},{"level":3,"title":"project/config/log4js.js","slug":"project-config-log4js-js"},{"level":3,"title":"project/utils/logTolls.js","slug":"project-utils-logtolls-js"},{"level":3,"title":"project/utils/apiLog.js","slug":"project-utils-apilog-js"},{"level":3,"title":"\u5728app.js\u4E0A\u4F7F\u7528","slug":"\u5728app-js\u4E0A\u4F7F\u7528"},{"level":3,"title":"\u65E5\u5FD7\u540C\u6B65\u5165\u5E93\u6587\u4EF6\uFF1A","slug":"\u65E5\u5FD7\u540C\u6B65\u5165\u5E93\u6587\u4EF6\uFF1A"},{"level":3,"title":"\u65E5\u5FD7\u8868\u6570\u636E\u5EFA\u6A21","slug":"\u65E5\u5FD7\u8868\u6570\u636E\u5EFA\u6A21"},{"level":3,"title":"\u65E5\u5FD7\u63A5\u53E3\u4EE3\u7801","slug":"\u65E5\u5FD7\u63A5\u53E3\u4EE3\u7801"},{"level":3,"title":"\u524D\u7AEF\u65E5\u5FD7\u5206\u6790\u9875\u9762","slug":"\u524D\u7AEF\u65E5\u5FD7\u5206\u6790\u9875\u9762"},{"level":2,"title":"\u6548\u679C\u5C55\u793A","slug":"\u6548\u679C\u5C55\u793A"},{"level":3,"title":"\u672C\u5730\u5B58\u50A8\u6587\u4EF6\u5F62\u5F0F","slug":"\u672C\u5730\u5B58\u50A8\u6587\u4EF6\u5F62\u5F0F"},{"level":3,"title":"\u6570\u636E\u5E93\uFF1A","slug":"\u6570\u636E\u5E93\uFF1A"},{"level":3,"title":"\u524D\u7AEF\u9875\u9762\uFF1A","slug":"\u524D\u7AEF\u9875\u9762\uFF1A"},{"level":3,"title":"\u4E0B\u8F6C\u67E5\u770B\uFF1A","slug":"\u4E0B\u8F6C\u67E5\u770B\uFF1A"},{"level":3,"title":"\u4EE3\u7801\u53EF\u590D\u5236\uFF1A","slug":"\u4EE3\u7801\u53EF\u590D\u5236\uFF1A"}],"relativePath":"service/NodeJs/\u65E5\u5FD7\u7CFB\u7EDF\u8BB0\u5F55.md","lastUpdated":1657176572989}',p={},o=t(`<h1 id="\u65E5\u5FD7\u5206\u6790\u7CFB\u7EDF" tabindex="-1">\u65E5\u5FD7\u5206\u6790\u7CFB\u7EDF</h1><p>\u91C7\u7528 <code>log4js</code> \u4F5C\u4E3A\u65E5\u5FD7\u91C7\u96C6\u548C\u7B80\u5355\u7684\u672C\u5730\u8BB0\u5F55</p><h2 id="\u4EE3\u7801" tabindex="-1">\u4EE3\u7801</h2><h3 id="project-config-log4js-js" tabindex="-1">project/config/log4js.js</h3><div class="language-js"><pre><code><span class="token comment">/*  project/config/log4js.js    */</span>

<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> process <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u65E5\u5FD7\u4FDD\u5B58\u7684\u6839\u76EE\u5F55</span>
<span class="token keyword">const</span> baseLogPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;/logs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;baseLogPath&quot;</span><span class="token operator">:</span> baseLogPath<span class="token punctuation">,</span>
    <span class="token comment">//\u65E5\u5FD7\u683C\u5F0F\u7B49\u8BBE\u7F6E</span>
    <span class="token literal-property property">appenders</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;rule-console&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;console&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// \u7CFB\u7EDF\u7A0B\u5E8F\u8FD0\u884C\u65F6\u65E5\u5FD7</span>
        <span class="token string-property property">&quot;system&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;filename&quot;</span><span class="token operator">:</span> baseLogPath <span class="token operator">+</span> <span class="token string">&#39;/system/out&#39;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;pattern&quot;</span><span class="token operator">:</span> <span class="token string">&quot;yyyy-MM-dd~hh-mm.log&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;alwaysIncludePattern&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;encoding&quot;</span><span class="token operator">:</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;maxLogSize&quot;</span><span class="token operator">:</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token comment">// \u6587\u4EF6\u6700\u5927\u5B58\u50A8\u7A7A\u95F4,\u5355\u4F4D\u662F\u5B57\u8282</span>
            <span class="token string-property property">&quot;timeout&quot;</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;numBackups&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&#39;/system&#39;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;layout&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;separator&quot;</span><span class="token operator">:</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;errorLogger&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u65E5\u5FD7\u7C7B\u578B</span>
            <span class="token string-property property">&quot;filename&quot;</span><span class="token operator">:</span> baseLogPath <span class="token operator">+</span> <span class="token string">&#39;/error/error&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u8F93\u51FA\u6587\u4EF6\u540D</span>
            <span class="token string-property property">&quot;pattern&quot;</span><span class="token operator">:</span> <span class="token string">&quot;yyyy-MM-dd~hh-mm.log&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u540E\u7F00</span>
            <span class="token string-property property">&quot;alwaysIncludePattern&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u4E0A\u9762\u4E24\u4E2A\u53C2\u6570\u662F\u5426\u5408\u5E76</span>
            <span class="token string-property property">&quot;encoding&quot;</span><span class="token operator">:</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u7F16\u7801\u683C\u5F0F</span>
            <span class="token string-property property">&quot;maxLogSize&quot;</span><span class="token operator">:</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;timeout&quot;</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;numBackups&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&#39;/error&#39;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;layout&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;separator&quot;</span><span class="token operator">:</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// \u63A5\u53E3\u8BF7\u6C42\u65E5\u5FD7</span>
        <span class="token string-property property">&quot;api&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;filename&quot;</span><span class="token operator">:</span> baseLogPath <span class="token operator">+</span> <span class="token string">&#39;/api/api&#39;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;pattern&quot;</span><span class="token operator">:</span> <span class="token string">&quot;yyyy-MM-dd~hh-mm.log&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;alwaysIncludePattern&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;encoding&quot;</span><span class="token operator">:</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;maxLogSize&quot;</span><span class="token operator">:</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;numBackups&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;timeout&quot;</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&#39;/api&#39;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;layout&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;separator&quot;</span><span class="token operator">:</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// \u6570\u636E\u5E93\u64CD\u4F5C\u65E5\u5FD7</span>
        <span class="token string-property property">&quot;dbHandle&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;filename&quot;</span><span class="token operator">:</span> baseLogPath <span class="token operator">+</span> <span class="token string">&#39;/dbHandle/dbHandle&#39;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;pattern&quot;</span><span class="token operator">:</span> <span class="token string">&quot;yyyy-MM-dd~hh-mm.log&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;alwaysIncludePattern&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;encoding&quot;</span><span class="token operator">:</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&#39;/dbHandle&#39;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;layout&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;separator&quot;</span><span class="token operator">:</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u5206\u7C7B\u4EE5\u53CA\u65E5\u5FD7\u7B49\u7EA7</span>
    <span class="token literal-property property">categories</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;appenders&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;rule-console&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;apiLogger&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;appenders&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;api&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token string">&quot;info&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// &quot;errorLogger&quot;: {&quot;appenders&quot;: [&quot;errorLogger&quot;], &quot;level&quot;: &quot;error&quot;},</span>
        <span class="token comment">// &quot;dbHandleLogger&quot;: {&quot;appenders&quot;: [&quot;dbHandle&quot;], &quot;level&quot;: &quot;all&quot;},</span>
        <span class="token string-property property">&quot;systemLogger&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;appenders&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;system&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

</code></pre></div><h3 id="project-utils-logtolls-js" tabindex="-1">project/utils/logTolls.js</h3><div class="language-js"><pre><code><span class="token comment">/*  project/utils/logTolls.js  */</span>


<span class="token keyword">const</span> log4js <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;log4js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> logsConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../config/log4js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> uuid <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;uuid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> globalConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../config/index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8BBE\u7F6E\u65E5\u5FD7\u81EA\u5B9A\u4E49\u5E03\u5C40\u4E3Ajson\u683C\u5F0F</span>
log4js<span class="token punctuation">.</span><span class="token function">addLayout</span><span class="token punctuation">(</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">logEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>logEvent<span class="token punctuation">)</span> <span class="token operator">+</span> config<span class="token punctuation">.</span>separator<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//\u52A0\u8F7D\u914D\u7F6E\u6587\u4EF6</span>
log4js<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>logsConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u8C03\u7528\u9884\u5148\u5B9A\u4E49\u7684\u65E5\u5FD7\u540D\u79F0</span>
<span class="token keyword">const</span> apiLogger <span class="token operator">=</span> log4js<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;apiLogger&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// const errorLogger = log4js.getLogger(&quot;errorLogger&quot;);</span>
<span class="token comment">// const dbHandleLogger = log4js.getLogger(&quot;dbHandleLogger&quot;);</span>
<span class="token keyword">const</span> systemLogger <span class="token operator">=</span> log4js<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;systemLogger&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> consoleLogger <span class="token operator">=</span> log4js<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// \u683C\u5F0F\u5316\u65E5\u5FD7\u6587\u672C \u52A0\u4E0A\u65E5\u5FD7\u5934\u5C3E\u548C\u6362\u884C\u65B9\u4FBF\u67E5\u770B ==&gt;  \u666E\u901A\u65E5\u5FD7\u3001\u8BF7\u6C42\u65E5\u5FD7\u3001\u54CD\u5E94\u65E5\u5FD7\u3001\u64CD\u4F5C\u65E5\u5FD7\u3001\u9519\u8BEF\u65E5\u5FD7</span>
<span class="token keyword">const</span> formatText <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">/**
     * \u7CFB\u7EDF\u65E5\u5FD7\u6253\u5370
     * @param info
     * @returns {String}
     */</span>
    <span class="token function-variable function">system</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> info<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">/**
     * \u6570\u636E\u5E93\u64CD\u4F5C\u65E5\u5FD7
     * @param info
     * @returns {String}
     */</span>
    <span class="token function-variable function">dbHandle</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> info
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">/**
     * \u8BF7\u6C42\u65E5\u5FD7\u6253\u5370
     * @param ctx
     * @param uuid
     * @returns {String}
     */</span>
    <span class="token function-variable function">request</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> uuid<span class="token punctuation">,</span> intervals</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">requestUrl</span><span class="token operator">:</span> ctx<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
            <span class="token literal-property property">requestHref</span><span class="token operator">:</span> ctx<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;request-href&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token literal-property property">requestUuid</span><span class="token operator">:</span> uuid<span class="token punctuation">,</span>
            <span class="token literal-property property">requestMethod</span><span class="token operator">:</span> ctx<span class="token punctuation">.</span>req<span class="token punctuation">.</span>method<span class="token punctuation">,</span>
            <span class="token literal-property property">requestClientRemoteAddress</span><span class="token operator">:</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;x-forwarded-for&#39;</span><span class="token punctuation">]</span> <span class="token operator">||</span> ctx<span class="token punctuation">.</span>ip <span class="token operator">||</span> ctx<span class="token punctuation">.</span>ips<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token literal-property property">requestQuery</span><span class="token operator">:</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>query<span class="token punctuation">,</span>
            <span class="token literal-property property">requestBody</span><span class="token operator">:</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">,</span>

            <span class="token literal-property property">responseStatus</span><span class="token operator">:</span> ctx<span class="token punctuation">.</span>status<span class="token punctuation">,</span>
            <span class="token literal-property property">requestTime</span><span class="token operator">:</span> intervals<span class="token punctuation">,</span>
            <span class="token literal-property property">responseBody</span><span class="token operator">:</span> ctx<span class="token punctuation">.</span>body<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u63A5\u53E3\u8BF7\u6C42\u9519\u8BEF\u65E5\u5FD7\u6253\u5370</span>
    <span class="token function-variable function">requestError</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> uid<span class="token punctuation">,</span> err<span class="token punctuation">,</span> intervals</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> uid<span class="token punctuation">,</span> intervals<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token comment">// name:err.name,</span>
                <span class="token comment">// message:err.message,</span>
                <span class="token literal-property property">stack</span><span class="token operator">:</span> err<span class="token operator">?.</span>stack <span class="token operator">||</span> err
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    formatText<span class="token punctuation">,</span>
    <span class="token comment">//\u7CFB\u7EDF\u7A0B\u5E8F\u8FD0\u884C\u6253\u5370</span>
    <span class="token function-variable function">logSystem</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>info<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            systemLogger<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">(</span>formatText<span class="token punctuation">.</span><span class="token function">system</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre></div><h3 id="project-utils-apilog-js" tabindex="-1">project/utils/apiLog.js</h3><div class="language-js"><pre><code><span class="token comment">/*  project/utils/apiLog.js     */</span>


<span class="token keyword">const</span> uuid <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;uuid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> globalConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../config&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> tools <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./tools&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>formatText<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../utils/logTolls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> _Emitter <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./events&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> log4js <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;log4js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> apiLogger <span class="token operator">=</span> log4js<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token string">&quot;apiLogger&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> noRecordToLog <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;/logs/logList&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/logs/log&#39;</span><span class="token punctuation">]</span> <span class="token comment">// \u65E0\u9700\u5199\u5165\u65E5\u5FD7\u7684\u63A5\u53E3\u8C03\u7528</span>


module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> uid <span class="token operator">=</span> <span class="token keyword">await</span> uuid<span class="token punctuation">.</span><span class="token function">v4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> start <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>					                <span class="token comment">// \u5F00\u59CB\u65F6\u95F4</span>
        <span class="token keyword">let</span> intervals<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">await</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u65E5\u5FD7\u67E5\u8BE2\u63A5\u53E3,\u662F\u4E0D\u80FD\u8BB0\u5F55\u4E0B\u6765\u7684\uFF0C\u5426\u8005\u4F1A\u51FA\u73B0\u65E0\u7EBF\u5957\u5A03\uFF0C\u6570\u636E\u91CF\u8D8A\u5806\u8D8A\u5927\u3002</span>
            <span class="token comment">// if (ctx.url == &#39;/logs/logList&#39;) return</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\/logs</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
            intervals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">;</span>
            <span class="token keyword">let</span> logInfo <span class="token operator">=</span> formatText<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> uid<span class="token punctuation">,</span> intervals<span class="token punctuation">)</span>
            

            <span class="token comment">// \u4EE3\u7406\u63A5\u53E3\u7684 \u8BF7\u6C42\u524D\u7F00 \u548C \u54CD\u5E94\u6570\u636E\uFF08\u6E90\uFF09</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>requestProxyOtiton <span class="token operator">&amp;&amp;</span> ctx<span class="token punctuation">.</span>requestProxyData<span class="token punctuation">)</span><span class="token punctuation">{</span>
                logInfo<span class="token punctuation">[</span><span class="token string">&#39;requestProxyOtiton&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>requestProxyOtiton
                logInfo<span class="token punctuation">[</span><span class="token string">&#39;requestProxyData&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>requestProxyData
            <span class="token punctuation">}</span>


            <span class="token keyword">if</span> <span class="token punctuation">(</span>globalConfig<span class="token punctuation">.</span>ApiSyncInStorage<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u76F4\u63A5\u5165\u5E93</span>
                <span class="token comment">// \u591A\u4E2A\u6587\u4EF6\u4E92\u76F8\u5F15\u7528\u4F1A\u6709\u95EE\u9898\uFF01\uFF01!</span>
                <span class="token keyword">let</span> data <span class="token operator">=</span> tools<span class="token punctuation">.</span><span class="token function">dataProcessForLogCategory</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          <span class="token comment">// \u5904\u7406\u683C\u5F0F\u8981\u8DDF\u65E5\u5FD7\u6587\u4EF6\u5185\u7684\u4E00\u6837</span>
                    <span class="token literal-property property">categoryName</span><span class="token operator">:</span> <span class="token string">&quot;apiLogger&quot;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">context</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token literal-property property">levelStr</span><span class="token operator">:</span> <span class="token string">&#39;INFO&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">colour</span><span class="token operator">:</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">pid</span><span class="token operator">:</span> <span class="token string">&#39;00000&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">startTime</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>logInfo<span class="token punctuation">)</span><span class="token punctuation">]</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                _Emitter<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;dataInStorage&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u65E5\u5FD7\u8F93\u5165</span>
                apiLogger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>logInfo<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>


        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            intervals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">;</span>
            <span class="token keyword">let</span> logError <span class="token operator">=</span> formatText<span class="token punctuation">.</span><span class="token function">requestError</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> uid<span class="token punctuation">,</span> error<span class="token punctuation">,</span> intervals<span class="token punctuation">)</span>
            apiLogger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>logError<span class="token punctuation">)</span><span class="token punctuation">)</span>
            ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token string">&quot;\u63A5\u53E3\u5F02\u5E38\uFF0C\u8BF7\u8054\u7CFB\u7BA1\u7406\u5458\u5206\u6790\u65E5\u5FD7:&quot;</span> <span class="token operator">+</span> error
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h3 id="\u5728app-js\u4E0A\u4F7F\u7528" tabindex="-1">\u5728app.js\u4E0A\u4F7F\u7528</h3><div class="language-js"><pre><code><span class="token comment">/*  app.js  */</span>
<span class="token keyword">const</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Koa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> apiLog <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./utils/apiLog&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> logAutoSync <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./utils/autoSyncLocalLogFile&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u63A5\u53E3\u65E5\u5FD7\u6536\u96C6</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">apiLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u81EA\u52A8\u540C\u6B65\u3010\u81EA\u5B9A\u4E49\u5206\u949F\u3011\u524D\u7684\u65E5\u5FD7\u5165\u5E93</span>
<span class="token function">logAutoSync</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">prefixDir</span><span class="token operator">:</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;./logs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u8DEF\u5F84\u524D\u7F00</span>
    <span class="token literal-property property">LogRetentionDuration</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token comment">// \u4FDD\u7559\u8FD112\u5C0F\u65F6\u7684\u65E5\u5FD7\u3010\u6267\u884C\u5220\u9664\u4F1A\u5728\u51CC\u66682~6\u70B9\u5185\u6267\u884C\u4E00\u6B21\u3011</span>
    <span class="token literal-property property">timeThreshold</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token comment">// \u65F6\u95F4\u9608\u503C \u53D6\u524D3\u5206\u949F\u5230\u524D6\u5206\u949F\u4E4B\u5185\u7684\u65E5\u5FD7\u6587\u4EF6</span>
    <span class="token literal-property property">syncFileLogList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;api&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;system&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// \u9700\u8981\u540C\u6B65\u7684\u672C\u5730\u65E5\u5FD7\u4E8C\u7EA7\u76EE\u5F55</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="\u65E5\u5FD7\u540C\u6B65\u5165\u5E93\u6587\u4EF6\uFF1A" tabindex="-1">\u65E5\u5FD7\u540C\u6B65\u5165\u5E93\u6587\u4EF6\uFF1A</h3><div class="language-js"><pre><code><span class="token comment">/*  project/utils/autoSyncLocalLogFile.js  */</span>


<span class="token keyword">const</span> <span class="token punctuation">{</span> resolve<span class="token punctuation">,</span> join <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Buffer <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;buffer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> logModel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../control/logger&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> logSystem <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./logTolls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> tools <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./tools&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> DateFormat <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;date-format&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/**
 * \u601D\u8DEF\uFF1A
 * \u65E5\u5FD7\u5207\u5272\u7C92\u5EA6 \u6309\u5206\u949F\u5207\u5272
 * \u6587\u4EF6\u683C\u5F0F\u5E03\u5C40 \u65E5\u5FD7\u6539\u6210\u81EA\u5B9A\u4E49\u5E03\u5C40 \u4F7F\u7528json\u5F62\u5F0F
 * \u540C\u6B65\u7B56\u7565\uFF1A
 * \u6BCF\u9694\u3010\u81EA\u5B9A\u4E49\u5206\u949F\u3011\u81EA\u52A8\u540C\u6B65\u4E4B\u524D\u7684\u65E5\u5FD7\uFF0C\u540C\u6B65\u5B8C\u4E4B\u540E\u76F4\u63A5\u5220\u9664\u672C\u5730\u6587\u4EF6 --- \u540E\u7EED\u53EF\u4EE5\u5728\u5B50\u8FDB\u7A0B\u5904\u7406\u6B64\u8FC7\u7A0B
 *
 *
 *
 * 
 * \u9057\u7559\u95EE\u9898 
 *      \u5728\u670D\u52A1\u91CD\u542F\u7684\u9636\u6BB5\u4F1A\u3010\u6216\u5B95\u673A\u91CD\u542F\u3011 \u91CD\u590D\u540C\u6B65\u672C\u5730\u65E5\u5FD7\u6570\u636E \u9020\u6210\u6570\u636E\u5197\u4F59
 * \u81EA\u52A8\u540C\u6B65\u6587\u4EF6\u6570\u636E\u5230\u6570\u636E\u5E93
 * @param opt
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">logAutoSync</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">opt</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> isClearIng <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment">// \u81EA\u52A8\u6E05\u7406\u65E5\u5FD7\u6587\u4EF6</span>

    opt <span class="token operator">=</span> opt <span class="token operator">||</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">prefixDir</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../logs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// \u76EE\u5F55\u524D\u7F00</span>
        <span class="token literal-property property">timeThreshold</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token comment">// \u65F6\u95F4\u9608\u503C \u53D6\u524D3\u5206\u949F\u5230\u524D6\u5206\u949F\u4E4B\u5185\u7684\u65E5\u5FD7\u6587\u4EF6</span>
        <span class="token literal-property property">syncFileLogList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;api&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;system&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// \u9700\u8981\u540C\u6B65\u7684\u672C\u5730\u65E5\u5FD7\u4E8C\u7EA7\u76EE\u5F55</span>
        <span class="token literal-property property">LogRetentionDuration</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token comment">// \u65E5\u5FD7\u4FDD\u7559\u65F6\u957F(\u6E05\u7406\u65F6\u95F4\u9ED8\u8BA4\u5728\u51CC\u66682\u70B9\u52306\u70B9\u6E05\u7406\u5B8C\u6210)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> <span class="token function-variable function">run</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> needSyncLogFilePath <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u9700\u8981\u540C\u6B65\u7684\u65E5\u5FD7\u6587\u4EF6\u5217\u8868</span>
        <span class="token keyword">let</span> curTime <span class="token operator">=</span> <span class="token function">DateFormat</span><span class="token punctuation">(</span><span class="token string">&#39;yyyy-MM-dd hh:mm&#39;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;:00&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u65F6\u95F4</span>
        <span class="token comment">// \u5148\u904D\u5386\u6307\u5B9A\u76EE\u5F55\u4E0B\u7684\u65E5\u5FD7\u6587\u4EF6</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> opt<span class="token punctuation">.</span>syncFileLogList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> dirName <span class="token operator">=</span> opt<span class="token punctuation">.</span>syncFileLogList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> list <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>opt<span class="token punctuation">.</span>prefixDir <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> dirName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            list <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> timeOfFileName <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// [ &#39;2022-06-16&#39;, &#39;23-54&#39; ]</span>
                <span class="token keyword">let</span> <span class="token constant">YYMMDD</span> <span class="token operator">=</span> timeOfFileName<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                                                             <span class="token comment">// 2022-06-16</span>
                <span class="token keyword">let</span> hhmmss <span class="token operator">=</span> timeOfFileName<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;:00&quot;</span><span class="token punctuation">;</span>             <span class="token comment">// 23:57:00</span>
                <span class="token keyword">let</span> YYMMDDhhmmss <span class="token operator">=</span> <span class="token constant">YYMMDD</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> hhmmss<span class="token punctuation">;</span>                                                   <span class="token comment">// 2022-06-17 00:31:00</span>
                <span class="token keyword">let</span> timeGap <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>curTime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>YYMMDDhhmmss<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment">// \u65F6\u95F4\u5DEE</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>timeGap <span class="token operator">&gt;=</span> opt<span class="token punctuation">.</span>timeThreshold <span class="token operator">&amp;&amp;</span> timeGap <span class="token operator">&lt;</span> opt<span class="token punctuation">.</span>timeThreshold <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                     <span class="token comment">// \u53EA\u53D6\u8303\u56F4\u5185\u7684\u65F6\u95F4(\u65E5\u5FD7)\u6587\u4EF6</span>
                    <span class="token keyword">return</span> <span class="token function">join</span><span class="token punctuation">(</span>opt<span class="token punctuation">.</span>prefixDir<span class="token punctuation">,</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dirName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">)</span>
            needSyncLogFilePath <span class="token operator">=</span> needSyncLogFilePath<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u9700\u8981\u540C\u6B65\u7684\u6587\u4EF6&#39;</span><span class="token punctuation">,</span> needSyncLogFilePath<span class="token punctuation">)</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> needSyncLogFilePath<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> fileName <span class="token operator">=</span> needSyncLogFilePath<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
            fs<span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">F_OK</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;file does not exist&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                fs<span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> fs<span class="token punctuation">.</span>constants<span class="token punctuation">.</span><span class="token constant">R_OK</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">err1</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>err1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;file unreadable&#39;</span><span class="token punctuation">,</span> err1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">let</span> fileContent <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    fileContent <span class="token operator">=</span> <span class="token string">&quot;[&quot;</span> <span class="token operator">+</span> fileContent<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span>
                    fileContent <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>fileContent<span class="token punctuation">)</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>fileContent<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">let</span> _dataItem <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
                        fileContent<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                            <span class="token keyword">let</span> arr <span class="token operator">=</span> tools<span class="token punctuation">.</span><span class="token function">dataProcessForLogCategory</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
                            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                _dataItem<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token comment">// \u5C06\u6307\u5B9A\u6570\u636E\u5B58\u5230\u6570\u636E\u5E93\u4E2D</span>
                                <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">saveLogToDataBase</span><span class="token punctuation">(</span>_dataItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    <span class="token keyword">return</span> <span class="token function">logSystem</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6570\u636E\u540C\u6B65\u5230\u5E93\u5931\u8D25</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span> res<span class="token punctuation">,</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token punctuation">}</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>

                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u6DF1\u66F4\u534A\u591C\u7684\u65F6\u5019\u6E05\u9664\u65E5\u5FD7   \u5F53\u59292\u70B9\u52306\u70B9\u7684\u65F6\u5019 \u53EA\u6E05\u7406\u4E00\u6B21</span>
        <span class="token keyword">let</span> hh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>hh <span class="token operator">&gt;=</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> hh <span class="token operator">&lt;</span> <span class="token number">6</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>isClearIng<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            isClearIng <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                <span class="token comment">// \u4FDD\u8BC1\u4E0D\u4F1A\u4E0E\u4E0A\u9762\u7684\u540C\u6B65\u6587\u4EF6\u51B2\u7A81\u4E86</span>
                <span class="token function">autoClearLogsFile</span><span class="token punctuation">(</span>opt<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token operator">*</span><span class="token number">60</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            isClearIng <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">//TODO \u4E0A\u4E2A\u9501\uFF0C\u5728\u524D\u7F6E\u64CD\u4F5C\u6CA1\u6267\u884C\u5B8C\u4E4B\u524D\u4E0D\u5141\u8BB8\u4E0B\u4E00\u6B21\u540C\u6B65</span>
    <span class="token function">setInterval</span><span class="token punctuation">(</span>run<span class="token punctuation">,</span> opt<span class="token punctuation">.</span>timeThreshold<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">/**
 * \u5C06\u6570\u636E\u5B58\u5165\u5230\u6570\u636E\u5E93\u7684logs\u6587\u6863\u4E2D
 * @param $document   \u6587\u6863(\u8868)
 * @param $data       \u6570\u636E\u96C6\u5408
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">saveLogToDataBase</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">$data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">null</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>$data<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token comment">// console.error(&quot;$data\u4E0D\u80FD\u4E3A\u7A7A&quot;);</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>$data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>$data<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token comment">// console.error(&quot;$data\u4E0D\u80FD\u4E3A\u7A7A&quot;)</span>
            res <span class="token operator">=</span> <span class="token keyword">await</span> logModel<span class="token punctuation">.</span><span class="token function">addMany</span><span class="token punctuation">(</span>$data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            res <span class="token operator">=</span> <span class="token keyword">await</span> logModel<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>$data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">logSystem</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">saveLogToDataBase\u9519\u8BEF</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span> e<span class="token punctuation">,</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">/**
 * \u81EA\u52A8\u6E05\u7A7A\u65E5\u5FD7\u6587\u4EF6
 * @param {*} opt 
 * @returns 
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">autoClearLogsFile</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">opt</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> needDelLogFilePath <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> opt<span class="token punctuation">.</span>syncFileLogList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> dirName <span class="token operator">=</span> opt<span class="token punctuation">.</span>syncFileLogList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> list <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>opt<span class="token punctuation">.</span>prefixDir <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> dirName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        list <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> timeOfFileName <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// [ &#39;2022-06-16&#39;, &#39;23-54&#39; ]</span>
            <span class="token keyword">let</span> <span class="token constant">YYMMDD</span> <span class="token operator">=</span> timeOfFileName<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                                                             <span class="token comment">// 2022-06-16</span>
            <span class="token keyword">let</span> hhmmss <span class="token operator">=</span> timeOfFileName<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;:00&quot;</span><span class="token punctuation">;</span>             <span class="token comment">// 23:57:00</span>
            <span class="token keyword">let</span> YYMMDDhhmmss <span class="token operator">=</span> <span class="token constant">YYMMDD</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> hhmmss<span class="token punctuation">;</span>                                                   <span class="token comment">// 2022-06-17 00:31:00</span>
            <span class="token keyword">let</span> timeGap <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>YYMMDDhhmmss<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                 <span class="token comment">// \u65F6\u95F4\u5DEE</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>timeGap <span class="token operator">&gt;</span> opt<span class="token punctuation">.</span>LogRetentionDuration<span class="token punctuation">)</span> <span class="token punctuation">{</span>                     <span class="token comment">// \u53EA\u53D6\u8303\u56F4\u5916\u7684\u65F6\u95F4(\u65E5\u5FD7)\u6587\u4EF6</span>
                <span class="token keyword">return</span> <span class="token function">join</span><span class="token punctuation">(</span>opt<span class="token punctuation">.</span>prefixDir<span class="token punctuation">,</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dirName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">)</span>
        needDelLogFilePath <span class="token operator">=</span> needDelLogFilePath<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// console.log(&#39;\u9700\u8981\u5220\u9664\u7684\u6587\u4EF6&#39;, needDelLogFilePath)</span>
    needDelLogFilePath<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        fs<span class="token punctuation">.</span><span class="token function">unlink</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">logSystem</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u65E5\u5FD7\u6587\u4EF6\u5220\u9664\u6210\u529F</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> needDelLogFilePath
<span class="token punctuation">}</span>




module<span class="token punctuation">.</span>exports <span class="token operator">=</span> logAutoSync
</code></pre></div><h3 id="\u65E5\u5FD7\u8868\u6570\u636E\u5EFA\u6A21" tabindex="-1">\u65E5\u5FD7\u8868\u6570\u636E\u5EFA\u6A21</h3><div class="language-js"><pre><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * \u65E5\u5FD7\u8868\u6570\u636E\u5EFA\u6A21
 *
 */</span>
<span class="token keyword">const</span> logSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">startTime</span><span class="token operator">:</span> Date<span class="token punctuation">,</span> <span class="token comment">// \u5F00\u59CB\u65F6\u95F4</span>
    <span class="token literal-property property">createAt</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// ttl\u7D22\u5F15</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> Date<span class="token punctuation">,</span>
        <span class="token keyword">default</span><span class="token operator">:</span> Date<span class="token punctuation">.</span>now<span class="token punctuation">,</span>
        <span class="token literal-property property">expires</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">uuid</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token comment">// uuid</span>
    <span class="token literal-property property">logType</span><span class="token operator">:</span> String<span class="token punctuation">,</span>  <span class="token comment">// \u65E5\u5FD7\u7C7B\u578B</span>
    <span class="token literal-property property">logLevel</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token comment">// \u65E5\u5FD7\u7B49\u7EA7</span>
    <span class="token comment">/**
     * \u4EE5\u4E0B\u662F\u9488\u5BF9\u7CFB\u7EDF[\u8FD0\u884C/\u62A5\u9519]\u6253\u5370\u683C\u5F0F\u7684\u6570\u636E\u5EFA\u6A21
     */</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> String<span class="token punctuation">,</span>  <span class="token comment">// \u7CFB\u7EDF\u65E5\u5FD7\u6253\u5370\u5185\u5BB9</span>
    <span class="token comment">/**
     * \u4EE5\u4E0B\u662F\u9488\u5BF9restfulApi\u683C\u5F0F\u7684\u6570\u636E\u5EFA\u6A21
     */</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> String<span class="token punctuation">,</span>  <span class="token comment">// \u8BF7\u6C42\u8DEF\u5F84</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token comment">// \u8BF7\u6C42\u65B9\u6CD5</span>
    <span class="token literal-property property">remoteAddress</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token comment">// \u8BF7\u6C42\u5730\u5740</span>
    <span class="token literal-property property">requestHref</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token comment">// \u8BF7\u6C42\u8DEF\u5F84 www.xxx.com/a/b/c/d.html</span>
    <span class="token literal-property property">requestQuery</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token comment">// \u8BF7\u6C42query\u5165\u53C2</span>
    <span class="token literal-property property">requestBody</span><span class="token operator">:</span> String<span class="token punctuation">,</span>   <span class="token comment">// \u8BF7\u6C42body \u5165\u53C2</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token comment">// \u54CD\u5E94\u72B6\u6001</span>
    <span class="token literal-property property">responseData</span><span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token comment">// \u54CD\u5E94\u6570\u636E</span>
    <span class="token literal-property property">responseSpeed</span><span class="token operator">:</span> Number<span class="token punctuation">,</span> <span class="token comment">// \u54CD\u5E94\u65F6\u95F4(\u5355\u4F4Ds)</span>

    <span class="token comment">/**
     * \u4EE5\u4E0B\u662F\u9488\u5BF9\u4EE3\u7406\u63A5\u53E3\u683C\u5F0F\u7684\u6570\u636E\u5EFA\u6A21
     */</span>
    <span class="token literal-property property">requestProxyOtiton</span><span class="token operator">:</span> String<span class="token punctuation">,</span>  <span class="token comment">// \u4EE3\u7406\u8BF7\u6C42\u5165\u53C2</span>
    <span class="token literal-property property">requestProxyData</span><span class="token operator">:</span> String      <span class="token comment">// \u4EE3\u7406\u8BF7\u6C42\u54CD\u5E94\u7684\u6E90\u6570\u636E</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> logSchema
</code></pre></div><h3 id="\u65E5\u5FD7\u63A5\u53E3\u4EE3\u7801" tabindex="-1">\u65E5\u5FD7\u63A5\u53E3\u4EE3\u7801</h3><h4 id="control\u5C42" tabindex="-1">control\u5C42</h4><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span>logModel<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../db/model&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>logSystem<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../utils/logTolls&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// class logger {</span>
<span class="token comment">//     constructor() {</span>
<span class="token comment">//</span>
<span class="token comment">//     }</span>
<span class="token comment">//</span>
<span class="token comment">// }</span>

<span class="token comment">// logModel = new proxy(logModel)</span>

<span class="token comment">/**
 * \u6DFB\u52A0\u4E00\u6761\u6570\u636E
 * @param data
 * @returns {Promise&lt;unknown&gt;}
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res<span class="token punctuation">,</span> rej</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> _logger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">logModel</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        _logger<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logSystem</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">rej</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                <span class="token keyword">return</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> resData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">dbCode</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u6570\u636E\u63D2\u5165\u6210\u529F!&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token function">res</span><span class="token punctuation">(</span>resData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// logSystem(JSON.stringify(resData));</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u901A\u8FC7id\u67E5\u8BE2\u6570\u636E
 * @param id
 * @returns {Promise&lt;unknown&gt;}
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">selectById</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res<span class="token punctuation">,</span> rej</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        logModel<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logSystem</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">rej</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                <span class="token keyword">return</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> resData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">dbCode</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u6570\u636E\u67E5\u8BE2\u6210\u529F!&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token function">res</span><span class="token punctuation">(</span>resData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// logSystem(JSON.stringify(resData));</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u901A\u8FC7\u6307\u5B9A\u5C5E\u6027\u67E5\u8BE2\u5220\u9664\u6570\u636E
 * @param arg    \u8FC7\u6EE4\u5668\u5BF9\u8C61
 * @returns {Promise&lt;unknown&gt;}
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">deleteByQuoteType</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res<span class="token punctuation">,</span> rej</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        logModel<span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span>arg<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logSystem</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">rej</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                <span class="token keyword">return</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> resData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">dbCode</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u6570\u636E\u5220\u9664\u6210\u529F!&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token function">res</span><span class="token punctuation">(</span>resData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// logSystem(JSON.stringify(resData));</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u901A\u8FC7uuid\u5C5E\u6027\u67E5\u8BE2\u591A\u6761\u5220\u9664\u6570\u636E
 * @param uuidList
 * @returns {Promise&lt;unknown&gt;}
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">deleteManyByUuid</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">uuidList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res<span class="token punctuation">,</span> rej</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        logModel<span class="token punctuation">.</span><span class="token function">deleteMany</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&#39;uuid&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>$<span class="token keyword">in</span><span class="token operator">:</span> uuidList<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logSystem</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">rej</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                <span class="token keyword">return</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> resData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">dbCode</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u6570\u636E\u5220\u9664\u6210\u529F!&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token function">res</span><span class="token punctuation">(</span>resData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// logSystem(JSON.stringify(resData));</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u901A\u8FC7\u5BF9\u8C61\u5C5E\u6027\u67E5\u8BE2\u6570\u636E(\u5206\u9875\u3001\u591A\u5B57\u6BB5\u6761\u4EF6\u67E5\u8BE2)
 * @param pageNum
 * @param pageSize
 * @param arg           \u8FC7\u6EE4\u5668
 * @returns {Promise&lt;unknown&gt;}
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">selectByQuoteType</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">pageNum<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        logModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span>arg<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span>pageNum <span class="token operator">*</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logSystem</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
                <span class="token keyword">return</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> resData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">dbCode</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u6570\u636E\u67E5\u8BE2\u6210\u529F!&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">data</span><span class="token operator">:</span> result<span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>resData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// logSystem(JSON.stringify(resData));</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u67E5\u8BE2count
 * @param arg
 * @returns {Promise&lt;unknown&gt;}
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">selectCount</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        logModel<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span>arg<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logSystem</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
                <span class="token keyword">return</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> resData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">dbCode</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u6570\u636E\u67E5\u8BE2\u6210\u529F!&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">data</span><span class="token operator">:</span> result<span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>resData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// logSystem(JSON.stringify(resData));</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u6DFB\u52A0\u591A\u6761\u6570\u636E
 * @param list
 * @returns {Promise&lt;unknown&gt;}
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">addMany</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">list</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res<span class="token punctuation">,</span> rej</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        logModel<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> docs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logSystem</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">rej</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                <span class="token keyword">return</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> resData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">dbCode</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u6570\u636E\u6279\u91CF\u63D2\u5165\u6210\u529F!&quot;</span><span class="token punctuation">,</span> docs<span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token function">res</span><span class="token punctuation">(</span>resData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// logSystem(JSON.stringify(resData));</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u5220\u9664\u5F53\u524D\u6587\u6863\u7684\u6240\u6709\u6570\u636E
 * @returns {Promise&lt;unknown&gt;}
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">deleteCurrentDoc</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res<span class="token punctuation">,</span> rej</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        logModel<span class="token punctuation">.</span><span class="token function">deleteMany</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">uuid</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">$ne</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> docs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">logSystem</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">rej</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
                <span class="token keyword">return</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> resData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">dbCode</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u6E05\u9664\u6587\u6863\u6210\u529F!&quot;</span><span class="token punctuation">,</span> docs<span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token function">res</span><span class="token punctuation">(</span>resData<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// logSystem(JSON.stringify(resData));</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    add<span class="token punctuation">,</span>
    addMany<span class="token punctuation">,</span>
    deleteCurrentDoc<span class="token punctuation">,</span>
    deleteByQuoteType<span class="token punctuation">,</span>
    deleteManyByUuid<span class="token punctuation">,</span>
    selectById<span class="token punctuation">,</span>
    selectByQuoteType<span class="token punctuation">,</span>
    selectCount
<span class="token punctuation">}</span>
</code></pre></div><h4 id="\u8DEF\u7531\u5C42" tabindex="-1">\u8DEF\u7531\u5C42</h4><div class="language-js"><pre><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> logger <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../control/logger&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
router<span class="token punctuation">.</span><span class="token function">prefix</span><span class="token punctuation">(</span><span class="token string">&#39;/logs&#39;</span><span class="token punctuation">)</span>
<span class="token comment">/**
 * \u5BF9\u8DEF\u7531\u8868\u8FDB\u884Ccrud\u64CD\u4F5C
 */</span>

<span class="token comment">// \u83B7\u53D6\u5168\u90E8\u65E5\u5FD7\u5217\u8868</span>
router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/logList&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/**
     * \u53EF\u67E5\u8BE2\u7684\u6761\u4EF6       \u65E5\u671F\u3001\u65B9\u6CD5\u3001url\u3001\u5927\u5C4F\u4F7F\u7528\u65B9\u3001ip\u3001\u65E5\u5FD7\u7C7B\u578B\uFF08\u7CFB\u7EDF\u3001api\u3001\u6570\u636E\u5E93\u64CD\u4F5C\uFF09\u3001\u65E5\u5FD7\u7B49\u7EA7\u3001\u54CD\u5E94\u72B6\u6001\u3001\u54CD\u5E94\u901F\u5EA6
     */</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span>pageNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> pageSize <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> startTime<span class="token punctuation">,</span> endTime<span class="token punctuation">,</span> startSpeed<span class="token punctuation">,</span> endSpeed<span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
    <span class="token keyword">let</span> selJson <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">let</span> reqBodyArgList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;logType&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;logLevel&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;method&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;status&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u591A\u6761\u4EF6\u67E5\u8BE2\u5165\u53C2\u3010\u53EF\u9009\u3011</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> reqBodyArgList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">[</span>reqBodyArgList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">?</span> selJson<span class="token punctuation">[</span>reqBodyArgList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">[</span>reqBodyArgList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">let</span> like_Json <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">let</span> like_reqBodyArgList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;requestHref&#39;</span><span class="token punctuation">]</span> <span class="token comment">// \u9700\u8981\u8FDB\u884C\u6A21\u7CCA\u67E5\u8BE2\u7684\u5165\u53C2\u3010\u53EF\u9009\u3011</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> like_reqBodyArgList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">[</span>like_reqBodyArgList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">?</span> like_Json<span class="token punctuation">[</span>like_reqBodyArgList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">[</span>like_reqBodyArgList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>startTime <span class="token operator">&amp;&amp;</span> endTime<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u65E5\u671F\u8303\u56F4\u67E5\u8BE2\u3010\u53EF\u9009\u3011</span>
        selJson<span class="token punctuation">[</span><span class="token string">&#39;startTime&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">$gte</span><span class="token operator">:</span> startTime<span class="token punctuation">,</span> <span class="token literal-property property">$lte</span><span class="token operator">:</span> endTime<span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>startSpeed <span class="token operator">&amp;&amp;</span> endSpeed<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u54CD\u5E94\u901F\u5EA6\u8303\u56F4\u67E5\u8BE2\u3010\u53EF\u9009\u3011</span>
        selJson<span class="token punctuation">[</span><span class="token string">&#39;responseSpeed&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">$gte</span><span class="token operator">:</span> startSpeed<span class="token punctuation">,</span> <span class="token literal-property property">$lte</span><span class="token operator">:</span> endSpeed<span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">const</span> _filter <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>selJson<span class="token punctuation">,</span> like_Json<span class="token punctuation">)</span>
    <span class="token keyword">let</span> dataList <span class="token operator">=</span> <span class="token keyword">await</span> logger<span class="token punctuation">.</span><span class="token function">selectByQuoteType</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> _filter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token keyword">await</span> logger<span class="token punctuation">.</span><span class="token function">selectCount</span><span class="token punctuation">(</span>_filter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u67E5\u8BE2\u6210\u529F\uFF01&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">data</span><span class="token operator">:</span> dataList<span class="token punctuation">.</span>data<span class="token punctuation">,</span> <span class="token literal-property property">total</span><span class="token operator">:</span> count<span class="token punctuation">.</span>data<span class="token punctuation">,</span> pageNum<span class="token punctuation">,</span> pageSize<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u5220\u9664\u6307\u5B9A\u65E5\u5FD7</span>
router<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;/log&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span>uuid<span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>uuid<span class="token punctuation">)</span> <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">204</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u5165\u53C2\u9519\u8BEF\uFF0C\u8BF7\u67E5\u770B\u63A5\u53E3\u6587\u6863\uFF01&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> _filter <span class="token operator">=</span> <span class="token punctuation">{</span>
        uuid
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> dataList <span class="token operator">=</span> <span class="token keyword">await</span> logger<span class="token punctuation">.</span><span class="token function">deleteByQuoteType</span><span class="token punctuation">(</span>_filter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dataList<span class="token punctuation">.</span>data<span class="token punctuation">.</span>deletedCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u6570\u636E\u5220\u9664\u67E5\u8BE2\u6210\u529F\uFF01&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">count</span><span class="token operator">:</span> dataList<span class="token punctuation">.</span>data<span class="token punctuation">.</span>deletedCount<span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u6570\u636E\u5DF2\u88AB\u5220\u9664\u6216\u8005\u4E0D\u5B58\u5728\uFF01&quot;</span><span class="token punctuation">,</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u5220\u9664\u591A\u6761\u65E5\u5FD7</span>
router<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;/logList&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span>uuids<span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>uuids<span class="token punctuation">)</span> <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">204</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u5165\u53C2\u9519\u8BEF\uFF0C\u8BF7\u67E5\u770B\u63A5\u53E3\u6587\u6863\uFF01&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>uuids<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">204</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u5165\u53C2\u9519\u8BEF\uFF0C\u8BF7\u67E5\u770B\u63A5\u53E3\u6587\u6863\uFF01&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> dataList <span class="token operator">=</span> <span class="token keyword">await</span> logger<span class="token punctuation">.</span><span class="token function">deleteManyByUuid</span><span class="token punctuation">(</span>uuids<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dataList<span class="token punctuation">.</span>data<span class="token punctuation">.</span>deletedCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u6570\u636E\u5220\u9664\u67E5\u8BE2\u6210\u529F\uFF01&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">count</span><span class="token operator">:</span> dataList<span class="token punctuation">.</span>data<span class="token punctuation">.</span>deletedCount<span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u6570\u636E\u5DF2\u88AB\u5220\u9664\u6216\u8005\u4E0D\u5B58\u5728\uFF01&quot;</span><span class="token punctuation">,</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u5220\u9664\u65E5\u5FD7\u6587\u6863</span>
router<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;/logDocument&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> logger<span class="token punctuation">.</span><span class="token function">deleteCurrentDoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> res
<span class="token punctuation">}</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router
</code></pre></div><h3 id="\u524D\u7AEF\u65E5\u5FD7\u5206\u6790\u9875\u9762" tabindex="-1">\u524D\u7AEF\u65E5\u5FD7\u5206\u6790\u9875\u9762</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width,initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://127.0.0.1:8689/cdn/Vue/vue@next.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://127.0.0.1:8689/cdn/element-plus/index.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://127.0.0.1:8689/cdn/element-plus/index.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://127.0.0.1:8689/cdn/element-plus/index.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- &lt;script src=&quot;https://unpkg.com/element-plus&quot;&gt;&lt;/script&gt; --&gt;</span>
    <span class="token comment">&lt;!-- &lt;script type=&quot;text/javascript&quot; src=&quot;http://127.0.0.1:8689/cdn/vs/loader.js&quot;&gt;&lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot; src=&quot;http://127.0.0.1:8689/cdn/vs/basic-languages/sql/sql.js&quot;&gt;&lt;/script&gt; --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>\u65E5\u5FD7\u5206\u6790<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
        <span class="token selector">body,
        html</span> <span class="token punctuation">{</span>
            <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
            <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
            <span class="token property">font-size</span><span class="token punctuation">:</span> 12px <span class="token important">!important</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">.el-table__body</span> <span class="token punctuation">{</span>
            <span class="token property">font-size</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">/*-------\u6EDA\u52A8\u6761\u6574\u4F53\u6837\u5F0F----*/</span>
        <span class="token selector">.jsonPre::-webkit-scrollbar</span> <span class="token punctuation">{</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>
            <span class="token property">height</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">/*\u6EDA\u52A8\u6761\u91CC\u9762\u5C0F\u65B9\u5757\u6837\u5F0F*/</span>
        <span class="token selector">.jsonPre::-webkit-scrollbar-thumb</span> <span class="token punctuation">{</span>
            <span class="token property">border-radius</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
            <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> inset 0 0 5px <span class="token function">rgba</span><span class="token punctuation">(</span>32<span class="token punctuation">,</span> 83<span class="token punctuation">,</span> 107<span class="token punctuation">,</span> 0.92<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>160<span class="token punctuation">,</span> 158<span class="token punctuation">,</span> 177<span class="token punctuation">,</span> 0.331<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">/*\u8FB9\u89D2*/</span>
        <span class="token selector">.jsonPre::-webkit-scrollbar-corner</span> <span class="token punctuation">{</span>
            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>160<span class="token punctuation">,</span> 158<span class="token punctuation">,</span> 177<span class="token punctuation">,</span> 0.331<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">/*\u6EDA\u52A8\u6761\u91CC\u9762\u8F68\u9053\u6837\u5F0F*/</span>
        <span class="token selector">.jsonPre::-webkit-scrollbar-track</span> <span class="token punctuation">{</span>
            <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> inset 0 0 5px <span class="token function">rgba</span><span class="token punctuation">(</span>32<span class="token punctuation">,</span> 83<span class="token punctuation">,</span> 107<span class="token punctuation">,</span> 0.92<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token property">border-radius</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>103<span class="token punctuation">,</span> 102<span class="token punctuation">,</span> 114<span class="token punctuation">,</span> 0.331<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">.jsonPre</span> <span class="token punctuation">{</span>
            <span class="token property">background-color</span><span class="token punctuation">:</span> #262629<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
            <span class="token property">width</span><span class="token punctuation">:</span> 90%<span class="token punctuation">;</span>
            <span class="token property">max-height</span><span class="token punctuation">:</span> 50vh<span class="token punctuation">;</span>
            <span class="token property">outline</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>
            <span class="token property">padding</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
            <span class="token property">overflow</span><span class="token punctuation">:</span> scroll<span class="token punctuation">;</span>
            <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>
            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">.btn-pre-copy</span> <span class="token punctuation">{</span>
            <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
            <span class="token property">right</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>
            <span class="token property">top</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>
            <span class="token property">color</span><span class="token punctuation">:</span> #a5a59f<span class="token punctuation">;</span>
            <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">.string</span> <span class="token punctuation">{</span>
            <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">.number</span> <span class="token punctuation">{</span>
            <span class="token property">color</span><span class="token punctuation">:</span> darkorange<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">.boolean</span> <span class="token punctuation">{</span>
            <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">.null</span> <span class="token punctuation">{</span>
            <span class="token property">color</span><span class="token punctuation">:</span> magenta<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token selector">.key</span> <span class="token punctuation">{</span>
            <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>common-layout<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-container</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-container</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-main</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span> <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>120px<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u8BF7\u6C42\u5730\u5740\u6765\u6E90<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.requestHref<span class="token punctuation">&quot;</span></span>
                                      <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u652F\u6301\u6A21\u7CCA\u641C\u7D22,\u4F8B\u5982:    https://element-plus.org/zh-C<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u63A5\u53E3\u5730\u5740<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.url<span class="token punctuation">&quot;</span></span>
                                      <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u652F\u6301\u6A21\u7CCA\u641C\u7D22,\u4F8B\u5982:    /proxyApi/sgj/sbhzzb?pk=CAJFBW7GmOf<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>


                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u8BF7\u6C42\u7C7B\u578B<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-select</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.method<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u9009\u62E9\u8BF7\u6C42\u7C7B\u578B<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-option</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in methodOptions<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.label<span class="token punctuation">&quot;</span></span>
                                               <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.disabled<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-select</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u54CD\u5E94\u72B6\u6001<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-select</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.status<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u9009\u62E9\u54CD\u5E94\u72B6\u6001<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-option</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in statusOptions<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.value<span class="token punctuation">&quot;</span></span>
                                                   <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.disabled<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-select</span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">&gt;</span></span>

                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u65E5\u5FD7\u7C7B\u578B<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-select</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.logType<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u9009\u62E9\u65E5\u5FD7\u7C7B\u578B<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-option</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in logTypeOptions<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.value<span class="token punctuation">&quot;</span></span>
                                                   <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.disabled<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-select</span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">&gt;</span></span>

                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u65E5\u5FD7\u7B49\u7EA7<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-select</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.logLevel<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u9009\u62E9\u65E5\u5FD7\u7B49\u7EA7<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-option</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in logLevelOptions<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.value<span class="token punctuation">&quot;</span></span>
                                                   <span class="token attr-name">:label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.label<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.value<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.disabled<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-select</span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>


                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u8BF7\u6C42\u65F6\u95F4\u8303\u56F4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-date-picker</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.startTime<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>datetime<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u9009\u62E9\u5F00\u59CB\u65F6\u95F4<span class="token punctuation">&quot;</span></span>
                                                <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100%</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">/&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-date-picker</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.endTime<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>datetime<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u9009\u62E9\u7ED3\u675F\u65F6\u95F4<span class="token punctuation">&quot;</span></span>
                                                <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100%</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">/&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u54CD\u5E94\u901F\u5EA6\u8303\u56F4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>120px<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input-number</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.startSpeed<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-col</span> <span class="token attr-name">:span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input-number</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.endSpeed<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-col</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span> <span class="token attr-name">label-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20px<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onSubmit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u67E5\u8BE2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onReset<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u91CD\u7F6E<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onDelStorage<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u91CD\u7F6E\u6570\u636E\u5E93\u4E2D\u6240\u6709\u65E5\u5FD7\u6570\u636E<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form</span><span class="token punctuation">&gt;</span></span>


                    <span class="token comment">&lt;!-- &lt;el-table-v2 :columns=&quot;columns&quot; :data=&quot;data&quot; :estimated-row-height=&quot;50&quot;
                        :expand-column-key=&quot;columns[0].key&quot; :width=&quot;700&quot; :height=&quot;400&quot;&gt;
                        &lt;template #row=&quot;props&quot;&gt;
                            &lt;Row v-bind=&quot;props&quot; /&gt;
                        &lt;/template&gt;
                    &lt;/el-table-v2&gt; --&gt;</span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableData<span class="token punctuation">&quot;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>small<span class="token punctuation">&quot;</span></span> <span class="token attr-name">highlight-current-row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span> 10px</span><span class="token punctuation">&quot;</span></span></span>
                              <span class="token attr-name">stripe</span> <span class="token attr-name">:border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">max-height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>450<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>#<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>expand<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.row.requestQuery<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">m</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t-0 b-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u8BF7\u6C42\u5165\u53C2(Query):
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jsonPre<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-pre-copy<span class="token punctuation">&quot;</span></span>
                                                  <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onCodeCopy(props.row.requestQuery)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u590D\u5236\u4EE3\u7801<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>parse2(props.row.requestQuery)<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.row.requestBody<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">m</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t-0 b-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u8BF7\u6C42\u5165\u53C2(Body):
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jsonPre<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-pre-copy<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onCodeCopy(props.row.requestBody)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u590D\u5236\u4EE3\u7801<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>parse2(props.row.requestBody)<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.row.requestProxyOtiton<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">m</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t-0 b-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u8BF7\u6C42\u524D\u7F00(\u4EE3\u7406\u63A5\u53E3\u65B9):
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jsonPre<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-pre-copy<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onCodeCopy(props.row.requestProxyOtiton)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u590D\u5236\u4EE3\u7801<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>parse2(props.row.requestProxyOtiton)<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.row.data<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">m</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t-0 b-2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.row.data<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>msg: {{ props.row.data }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.row.responseData<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">m</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t-0 b-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u54CD\u5E94\u6570\u636E:
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jsonPre<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-pre-copy<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onCodeCopy(props.row.responseData)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u590D\u5236\u4EE3\u7801<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>parse2(props.row.responseData)<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props.row.requestProxyData<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">m</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t-0 b-2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u54CD\u5E94\u6570\u636E(\u6E90):
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jsonPre<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>btn-pre-copy<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onCodeCopy(props.row.requestProxyData)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u590D\u5236\u4EE3\u7801<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>parse2(props.row.requestProxyData)<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>120<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uuid<span class="token punctuation">&quot;</span></span> <span class="token attr-name">show-overflow-tooltip</span> <span class="token attr-name">sortable</span>
                                         <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uuid<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ props.row.uuid || &#39;---&#39; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>90<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u65E5\u5FD7\u7C7B\u578B<span class="token punctuation">&quot;</span></span> <span class="token attr-name">show-overflow-tooltip</span>
                                         <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logType<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{  logTypeOptions.filter(i=&gt;i.value==props.row.logType)[0].label || &#39;---&#39; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>90<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u65E5\u5FD7\u7B49\u7EA7<span class="token punctuation">&quot;</span></span> <span class="token attr-name">show-overflow-tooltip</span>
                                         <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>logLevel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ props.row.logLevel || &#39;---&#39; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>90<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u8BF7\u6C42\u65B9\u6CD5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">show-overflow-tooltip</span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>method<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ props.row.method || &#39;---&#39; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>120<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u54CD\u5E94\u72B6\u6001<span class="token punctuation">&quot;</span></span> <span class="token attr-name">show-overflow-tooltip</span> <span class="token attr-name">sortable</span>
                                         <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>status<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ props.row.status || &#39;---&#39; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>120<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u54CD\u5E94\u901F\u5EA6<span class="token punctuation">&quot;</span></span> <span class="token attr-name">show-overflow-tooltip</span> <span class="token attr-name">sortable</span>
                                         <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>responseSpeed<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ props.row.responseSpeed ? props.row.responseSpeed + &quot;ms&quot; : &#39;---&#39; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u8BF7\u6C42\u5730\u5740<span class="token punctuation">&quot;</span></span> <span class="token attr-name">show-overflow-tooltip</span> <span class="token attr-name">sortable</span>
                                         <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ props.row.url || &#39;---&#39; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u8BF7\u6C42\u6765\u6E90(ip)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">show-overflow-tooltip</span> <span class="token attr-name">sortable</span>
                                         <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>remoteAddress<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ props.row.remoteAddress || &#39;---&#39; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u8BF7\u6C42\u6765\u6E90(href)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">show-overflow-tooltip</span>
                                         <span class="token attr-name">sortable</span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>requestHref<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ props.row.requestHref || &#39;---&#39; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>140<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u8BF7\u6C42\u65F6\u95F4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">show-overflow-tooltip</span> <span class="token attr-name">sortable</span>
                                         <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>startTime<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ formatDate(props.row.startTime) || &#39;---&#39; }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>

                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>260<span class="token punctuation">&quot;</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\u64CD\u4F5C<span class="token punctuation">&quot;</span></span>
                                         <span class="token attr-name">class-name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>small-padding fixed-width<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>props<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                                <span class="token comment">&lt;!-- &lt;el-button class=&quot;filter-item&quot; type=&quot;primary&quot; @click=&quot;tableItemDetail(scope.row)&quot;&gt;\u67E5\u770B
                                &lt;/el-button&gt; --&gt;</span>
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filter-item<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>danger<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onDelTableItem(props.row)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\u5220\u9664
                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span>

                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table</span><span class="token punctuation">&gt;</span></span>

                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-pagination</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>total, sizes, prev, pager, next, jumper<span class="token punctuation">&quot;</span></span>
                                   <span class="token attr-name">:total</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pagination.total<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:page-sizes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[10, 20, 50, 100]<span class="token punctuation">&quot;</span></span>
                                   <span class="token attr-name">:currentPage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pagination.pageNum + 1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@size-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onSizeChange<span class="token punctuation">&quot;</span></span>
                                   <span class="token attr-name">@current-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onCurrentChange<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-pagination</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-main</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-container</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-container</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>


<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- &lt;script&gt;
    require.config({ paths: { &#39;vs&#39;: &#39;http://127.0.0.1:8689/cdn/vs&#39; } });
    require.config({ &#39;vs/nls&#39;: { availableLanguages: { &#39;*&#39;: &#39;zh-cn&#39; } } });
    require([&#39;vs/editor/editor#jsonPre&#39;], function () {
        var editor = monaco.editor.create(document.getElementById(&#39;container&#39;), {
            value: &#39;SELECT * FROM myindex&#39;,
            language: &#39;sql&#39;,
            theme: &#39;vs-dark&#39;
        });
    });
&lt;/script&gt; --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">const</span> <span class="token function-variable function">request</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> opt <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        url <span class="token operator">=</span> <span class="token string">&quot;http://127.0.0.1:8689&quot;</span> <span class="token operator">+</span> url
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> <span class="token comment">// *GET, POST, PUT, DELETE, etc.</span>
                <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;no-cors&#39;</span><span class="token punctuation">,</span> <span class="token comment">// no-cors, *cors, same-origin</span>
                <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token string">&#39;no-cache&#39;</span><span class="token punctuation">,</span> <span class="token comment">// *default, no-cache, reload, force-cache, only-if-cached</span>
                <span class="token literal-property property">credentials</span><span class="token operator">:</span> <span class="token string">&#39;same-origin&#39;</span><span class="token punctuation">,</span> <span class="token comment">// include, *same-origin, omit</span>
                <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json; charset=utf-8&#39;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&#39;follow&#39;</span><span class="token punctuation">,</span> <span class="token comment">// manual, *follow, error</span>
                <span class="token literal-property property">referrerPolicy</span><span class="token operator">:</span> <span class="token string">&#39;no-referrer&#39;</span><span class="token punctuation">,</span> <span class="token comment">// no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url</span>
                <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment">// body data type must match &quot;Content-Type&quot; header</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> opt<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// return response.body</span>
            <span class="token keyword">return</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// parses JSON response into native JavaScript objects</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;fetch\u63A5\u53E3\u8BF7\u6C42\u9519\u8BEF&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">&quot;\u8BF7\u6C42\u5931\u8D25\uFF01&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8BF7\u6C42\u5C01\u88C5</span>
    <span class="token keyword">const</span> <span class="token function-variable function">Request</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> param<span class="token punctuation">,</span> option</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> opt <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            opt <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>opt<span class="token punctuation">,</span> option<span class="token punctuation">)</span>
            <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">var</span> data <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText		<span class="token comment">// \u63A5\u6536\u54CD\u5E94\u4FE1\u606F</span>
                    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>opt<span class="token punctuation">.</span>method<span class="token punctuation">,</span> <span class="token string">&quot;http://127.0.0.1:8689&quot;</span> <span class="token operator">+</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
            xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/json; charset=utf-8&#39;</span><span class="token punctuation">)</span>	<span class="token comment">// \u8BBE\u7F6EContent-type</span>
            xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment">//\u53D1\u9001\u8BF7\u6C42\u5230\u670D\u52A1\u5668</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">returnResetFormData</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">requestHref</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">logType</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">logLevel</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">startTime</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">endTime</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">startSpeed</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token literal-property property">endSpeed</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token punctuation">{</span>reactive<span class="token punctuation">,</span> ref <span class="token punctuation">,</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token operator">=</span> Vue<span class="token punctuation">;</span>

            <span class="token comment">/**
             * data
             * */</span>
            <span class="token keyword">let</span> editor <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">aaa</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token keyword">let</span> form <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token function">returnResetFormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> tableData <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5206\u9875\u5668\u6570\u636E</span>
            <span class="token keyword">let</span> pagination <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">total</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
                <span class="token literal-property property">pageNum</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                <span class="token literal-property property">pageSize</span><span class="token operator">:</span> <span class="token number">10</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


            <span class="token comment">/**
             * methods
             * */</span>
            <span class="token keyword">const</span> <span class="token function-variable function">onSubmit</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">Request</span><span class="token punctuation">(</span><span class="token string">&#39;/logs/logList&#39;</span><span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> form<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;/logs/logList \u54CD\u5E94\u6570\u636E\uFF1A&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    pagination<span class="token punctuation">.</span>total <span class="token operator">=</span> res<span class="token punctuation">.</span>total
                    <span class="token keyword">while</span> <span class="token punctuation">(</span>tableData<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

                    <span class="token punctuation">}</span>
                    tableData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
                    <span class="token comment">// \u521D\u59CB\u5316\u7F16\u8F91\u5668\uFF0C\u786E\u4FDDdom\u5DF2\u7ECF\u6E32\u67D3</span>
                    <span class="token comment">// editor.aaa = monaco.editor.create(document.getElementById(&#39;container&#39;), {</span>
                    <span class="token comment">//     value: &#39;SDGHSKDLGHLKDSJGKLDSJGKLSDJGLK&#39;, // \u7F16\u8F91\u5668\u521D\u59CB\u663E\u793A\u6587\u5B57</span>
                    <span class="token comment">//     language: &#39;sql&#39;,//\u8BED\u8A00\u652F\u6301\u81EA\u884C\u67E5\u9605demo</span>
                    <span class="token comment">//     automaticLayout: true,//\u81EA\u52A8\u5E03\u5C40</span>
                    <span class="token comment">//     theme: &#39;vs-dark&#39; //\u5B98\u65B9\u81EA\u5E26\u4E09\u79CD\u4E3B\u9898vs, hc-black, or vs-dark</span>
                    <span class="token comment">// });</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> <span class="token function-variable function">onReset</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token function">returnResetFormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> obj<span class="token punctuation">)</span> form<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> <span class="token function-variable function">onDelStorage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                ElementPlus<span class="token punctuation">.</span>ElMessageBox<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;\u6E05\u7A7A\u65E5\u5FD7\u5E93\u662F\u5371\u9669\u64CD\u4F5C\uFF0C\u662F\u5426\u8FDB\u884C\u6B64\u64CD\u4F5C\u3002&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\u5371\u9669&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
                        <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">&#39;\u786E\u5B9A&#39;</span><span class="token punctuation">,</span>
                        <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">&#39;\u53D6\u6D88&#39;</span><span class="token punctuation">,</span>
                        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;danger&#39;</span><span class="token punctuation">,</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">Request</span><span class="token punctuation">(</span><span class="token string">&#39;/logs/logDocument&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;delete&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;/logs/logDocument \u54CD\u5E94\u6570\u636E\uFF1A&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>dbCode <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            ElementPlus<span class="token punctuation">.</span><span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                                <span class="token literal-property property">message</span><span class="token operator">:</span> res<span class="token punctuation">.</span>msg<span class="token punctuation">,</span>
                                <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>
                            <span class="token punctuation">}</span><span class="token punctuation">)</span>
                            <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">}</span>

                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> <span class="token function-variable function">onSizeChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                pagination<span class="token punctuation">.</span>pageSize <span class="token operator">=</span> number<span class="token punctuation">;</span>
                <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> <span class="token function-variable function">onCurrentChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                pagination<span class="token punctuation">.</span>pageNum <span class="token operator">=</span> number <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> <span class="token function-variable function">formatDate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> dt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
                <span class="token keyword">return</span> dt<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>dt<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&gt;</span> <span class="token number">10</span> <span class="token operator">?</span> dt<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>dt<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>dt<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">10</span> <span class="token operator">?</span> dt<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> dt<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>dt<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">10</span> <span class="token operator">?</span> dt<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> dt<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>dt<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">10</span> <span class="token operator">?</span> dt<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> dt<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>dt<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">10</span> <span class="token operator">?</span> dt<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> dt<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> <span class="token function-variable function">onDelTableItem</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">Request</span><span class="token punctuation">(</span><span class="token string">&#39;/logs/log&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">uuid</span><span class="token operator">:</span> data<span class="token punctuation">.</span>uuid<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;delete&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;/logs/log \u54CD\u5E94\u6570\u636E\uFF1A&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    ElementPlus<span class="token punctuation">.</span><span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u5220\u9664\u6210\u529F\uFF01&#39;</span><span class="token punctuation">,</span>
                        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
                    <span class="token function">onSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> <span class="token function-variable function">onCodeCopy</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// let _data = new DataTransfer();</span>
                    <span class="token comment">// _data.items.add(&quot;text/plain&quot;, &quot;data&quot;);</span>
                    navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">writeText</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        ElementPlus<span class="token punctuation">.</span><span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u5185\u5BB9\u5DF2\u7ECF\u590D\u5236\u5230\u526A\u8D34\u677F\uFF01&#39;</span><span class="token punctuation">,</span>
                            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        ElementPlus<span class="token punctuation">.</span><span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;\u5185\u5BB9\u590D\u5236\u5230\u526A\u8D34\u677F\u5931\u8D25\uFF01&#39;</span><span class="token punctuation">,</span>
                            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;danger&#39;</span><span class="token punctuation">,</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">var</span> textarea <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;textarea&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>textarea<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    textarea<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">&#39;fixed&#39;</span><span class="token punctuation">;</span>
                    textarea<span class="token punctuation">.</span>style<span class="token punctuation">.</span>clip <span class="token operator">=</span> <span class="token string">&#39;rect(0 0 0 0)&#39;</span><span class="token punctuation">;</span>
                    textarea<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">&#39;10px&#39;</span><span class="token punctuation">;</span>
                    textarea<span class="token punctuation">.</span>value <span class="token operator">=</span> data<span class="token punctuation">;</span>
                    textarea<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">&#39;copy&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>textarea<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// ElementPlus.ElMessage({</span>
                <span class="token comment">//     message: &#39;\u5185\u5BB9\u5DF2\u7ECF\u590D\u5236\u5230\u526A\u8D34\u677F\uFF01&#39;,</span>
                <span class="token comment">//     type: &#39;success&#39;,</span>
                <span class="token comment">// })</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// json\u683C\u5F0F\u7F8E\u5316</span>
            <span class="token keyword">const</span> <span class="token function-variable function">parse2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u8BBE\u7F6E\u7F29\u8FDB\u4E3A2\u4E2A\u7A7A\u683C</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>str<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;---&#39;</span>
                str <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                str <span class="token operator">=</span> str
                    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&amp;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&amp;&#39;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;&#39;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&gt;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(&quot;(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\&quot;])*&quot;(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">match</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">var</span> cls <span class="token operator">=</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^&quot;</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>match<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">:$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>match<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            cls <span class="token operator">=</span> <span class="token string">&#39;key&#39;</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                            cls <span class="token operator">=</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">true|false</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>match<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        cls <span class="token operator">=</span> <span class="token string">&#39;boolean&#39;</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">null</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>match<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        cls <span class="token operator">=</span> <span class="token string">&#39;null&#39;</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">return</span> <span class="token string">&#39;&lt;span class=&quot;&#39;</span> <span class="token operator">+</span> cls <span class="token operator">+</span> <span class="token string">&#39;&quot;&gt;&#39;</span> <span class="token operator">+</span> match <span class="token operator">+</span> <span class="token string">&#39;&lt;/span&gt;&#39;</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>


            <span class="token comment">/**
             * otherOptions
             * */</span>
            <span class="token keyword">const</span> methodOptions <span class="token operator">=</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;PUT&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;PUT&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;HEAD&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;HEAD&#39;</span><span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
            <span class="token keyword">const</span> statusOptions <span class="token operator">=</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;200&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;200&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;400&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;400&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;404&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;404&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;500&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;500&#39;</span><span class="token punctuation">}</span>
            <span class="token punctuation">]</span>

            <span class="token keyword">const</span> logTypeOptions <span class="token operator">=</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;apiLogger&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;\u63A5\u53E3\u8BF7\u6C42&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;systemLogger&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;\u7CFB\u7EDF\u6253\u5370&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span>
            <span class="token keyword">const</span> logLevelOptions <span class="token operator">=</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;INFO&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;INFO&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;ERROR&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;ERROR&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span>


            ElementPlus<span class="token punctuation">.</span><span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;Congrats, this is a success message.&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>


            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                onSubmit<span class="token punctuation">,</span>
                onReset<span class="token punctuation">,</span>
                onDelStorage<span class="token punctuation">,</span>
                onSizeChange<span class="token punctuation">,</span>
                onCurrentChange<span class="token punctuation">,</span>
                formatDate<span class="token punctuation">,</span>
                onDelTableItem<span class="token punctuation">,</span>
                onCodeCopy<span class="token punctuation">,</span>
                parse2<span class="token punctuation">,</span>
                form<span class="token punctuation">,</span>
                methodOptions<span class="token punctuation">,</span>
                statusOptions<span class="token punctuation">,</span>
                logTypeOptions<span class="token punctuation">,</span>
                logLevelOptions<span class="token punctuation">,</span>


                pagination<span class="token punctuation">,</span>
                tableData

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> app <span class="token operator">=</span> Vue<span class="token punctuation">.</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>
    app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span><span class="token punctuation">;</span>
    app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token comment">// \u6D41\u7A0B http \u3001session \u3001\u901A\u4FE1\u534F\u8BAE\u3001</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="\u6548\u679C\u5C55\u793A" tabindex="-1">\u6548\u679C\u5C55\u793A</h2><h3 id="\u672C\u5730\u5B58\u50A8\u6587\u4EF6\u5F62\u5F0F" tabindex="-1">\u672C\u5730\u5B58\u50A8\u6587\u4EF6\u5F62\u5F0F</h3><p><img src="https://cdnforspeed.oss-cn-beijing.aliyuncs.com/Img/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/20220707144647.png" alt=""></p><p><img src="https://cdnforspeed.oss-cn-beijing.aliyuncs.com/Img/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/20220707144701.png" alt=""></p><p><img src="https://cdnforspeed.oss-cn-beijing.aliyuncs.com/Img/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/20220707144720.png" alt=""></p><h3 id="\u6570\u636E\u5E93\uFF1A" tabindex="-1">\u6570\u636E\u5E93\uFF1A</h3><p><img src="https://cdnforspeed.oss-cn-beijing.aliyuncs.com/Img/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/20220707143948.png" alt=""></p><h3 id="\u524D\u7AEF\u9875\u9762\uFF1A" tabindex="-1">\u524D\u7AEF\u9875\u9762\uFF1A</h3><p><img src="https://cdnforspeed.oss-cn-beijing.aliyuncs.com/Img/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/20220707144111.png" alt=""></p><h3 id="\u4E0B\u8F6C\u67E5\u770B\uFF1A" tabindex="-1">\u4E0B\u8F6C\u67E5\u770B\uFF1A</h3><p><img src="https://cdnforspeed.oss-cn-beijing.aliyuncs.com/Img/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/20220707144151.png" alt=""></p><h3 id="\u4EE3\u7801\u53EF\u590D\u5236\uFF1A" tabindex="-1">\u4EE3\u7801\u53EF\u590D\u5236\uFF1A</h3><p><img src="https://cdnforspeed.oss-cn-beijing.aliyuncs.com/Img/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/20220707144220.png" alt=""></p>`,35),e=[o];function c(u,l,k,r,i,g){return a(),s("div",null,e)}var d=n(p,[["render",c]]);export{y as __pageData,d as default};
