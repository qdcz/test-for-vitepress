import{_ as n,c as s,o as a,a as p}from"./app.c6042d00.js";const d='{"title":"\u6DF7\u6DC6\u3001\u7F16\u8BD1\u3001\u52A0\u5BC6\u3001\u6253\u5305","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6DF7\u6DC6\u5DE5\u5177\u63A8\u8350","slug":"\u6DF7\u6DC6\u5DE5\u5177\u63A8\u8350"},{"level":2,"title":"\u7F16\u8BD1\u5DE5\u5177\u63A8\u8350","slug":"\u7F16\u8BD1\u5DE5\u5177\u63A8\u8350"},{"level":2,"title":"\u6253\u5305\u5DE5\u5177\u63A8\u8350","slug":"\u6253\u5305\u5DE5\u5177\u63A8\u8350"},{"level":2,"title":"\u4F7F\u7528javascript-obfuscator\u6DF7\u6DC6\u6574\u4E2A\u9879\u76EE\u4EE3\u7801","slug":"\u4F7F\u7528javascript-obfuscator\u6DF7\u6DC6\u6574\u4E2A\u9879\u76EE\u4EE3\u7801"},{"level":2,"title":"\u4F7F\u7528pkg\u6253\u5305\u6574\u4E2A\u9879\u76EE","slug":"\u4F7F\u7528pkg\u6253\u5305\u6574\u4E2A\u9879\u76EE"},{"level":3,"title":"\u5751\uFF1A\u4E0D\u652F\u6301\u52A8\u6001\u5F15\u5165\u7684\u65B9\u6CD5","slug":"\u5751\uFF1A\u4E0D\u652F\u6301\u52A8\u6001\u5F15\u5165\u7684\u65B9\u6CD5"},{"level":3,"title":"\u5EFA\u8BAE\uFF1A\u4F7F\u7528process.cwd()","slug":"\u5EFA\u8BAE\uFF1A\u4F7F\u7528process-cwd"},{"level":3,"title":"\u5173\u4E8E\u8FD0\u884Cexe\u6587\u4EF6 \u60F3\u770B\u65E5\u5FD7","slug":"\u5173\u4E8E\u8FD0\u884Cexe\u6587\u4EF6-\u60F3\u770B\u65E5\u5FD7"},{"level":3,"title":"\u5173\u4E8E\u6253\u5305\u5B8C\u4E4B\u540E\u8BBF\u95EE\u4E0D\u5230\u672C\u5730\u6587\u4EF6","slug":"\u5173\u4E8E\u6253\u5305\u5B8C\u4E4B\u540E\u8BBF\u95EE\u4E0D\u5230\u672C\u5730\u6587\u4EF6"},{"level":3,"title":"\u5B8C\u6574\u7684\u6253\u5305\u65B9\u6CD5\uFF1A","slug":"\u5B8C\u6574\u7684\u6253\u5305\u65B9\u6CD5\uFF1A"}],"relativePath":"service/NodeJs/\u6DF7\u6DC6\u7F16\u8BD1\u6253\u5305.md","lastUpdated":1657174533363}',t={},o=p(`<h1 id="\u6DF7\u6DC6\u3001\u7F16\u8BD1\u3001\u52A0\u5BC6\u3001\u6253\u5305" tabindex="-1">\u6DF7\u6DC6\u3001\u7F16\u8BD1\u3001\u52A0\u5BC6\u3001\u6253\u5305</h1><h2 id="\u6DF7\u6DC6\u5DE5\u5177\u63A8\u8350" tabindex="-1">\u6DF7\u6DC6\u5DE5\u5177\u63A8\u8350</h2><p><a href="https://github.com/javascript-obfuscator/javascript-obfuscator" target="_blank" rel="noopener noreferrer">javascript-obfuscator</a> \u5F3A\u5927\u4E14\u514D\u8D39</p><h2 id="\u7F16\u8BD1\u5DE5\u5177\u63A8\u8350" tabindex="-1">\u7F16\u8BD1\u5DE5\u5177\u63A8\u8350</h2><p><a href="https://github.com/bytenode/bytenode" target="_blank" rel="noopener noreferrer">bytenode</a> \u5C06\u4EE3\u7801\u7F16\u8BD1\u6210\u5B57\u8282\u7801</p><h2 id="\u6253\u5305\u5DE5\u5177\u63A8\u8350" tabindex="-1">\u6253\u5305\u5DE5\u5177\u63A8\u8350</h2><p><a href="https://github.com/vercel/pkg" target="_blank" rel="noopener noreferrer">pkg</a> \u53EF\u4EE5\u628ANode.js\u9879\u76EE\u6253\u5305\u6210\u4E00\u4E2A\u4E8C\u8FDB\u5236\u7684\u53EF\u6267\u884C\u6587\u4EF6\uFF0Cpkg\u4E0D\u652F\u6301\u52A8\u6001\u5BFC\u5165\uFF0C\u4F46\u662F\u4F1A\u5C06Node\u672C\u8EAB\u4E00\u8D77\u6253\u5305\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u5728\u6CA1\u5B89\u88C5Node.js\u7684\u73AF\u5883\u8FD0\u884C\u3002</p><p><a href="https://github.com/vercel/ncc" target="_blank" rel="noopener noreferrer">ncc</a> \u53EF\u4EE5\u628ANode.js\u9879\u76EE\u6253\u5305\u6210\u4E00\u4E2Ajs\u5355\u6587\u4EF6\uFF0C\u652F\u6301 TypeScript\uFF0C\u52A8\u6001\u5BFC\u5165\u3002</p><p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fpmq20%2Fnode-packer" target="_blank" rel="noopener noreferrer">pmq20/node-packer</a> \u4E5F\u80FD\u6253\u5305\u6210\u4E00\u4E2A\u4E8C\u8FDB\u5236\u7684\u53EF\u6267\u884C\u6587\u4EF6\uFF0C\u5B83\u7684\u4F18\u52BF\u5728\u4E8E\u652F\u6301\u5404\u79CD\u5F62\u5F0F\u7684require, \u4E5F\u652F\u6301C++\u6A21\u5757\u3002\u53EF\u60DC\u9879\u76EE\u5DF2\u7ECF\u4E24\u5E74\u6CA1\u66F4\u65B0\u4E86\uFF0C\u53EA\u652F\u6301\u5230Node.js 8.3.0, \u5BF9\u4E8E\u66F4\u9AD8\u7248\u672C\u7684\u652F\u6301</p><h2 id="\u4F7F\u7528javascript-obfuscator\u6DF7\u6DC6\u6574\u4E2A\u9879\u76EE\u4EE3\u7801" tabindex="-1">\u4F7F\u7528<code>javascript-obfuscator</code>\u6DF7\u6DC6\u6574\u4E2A\u9879\u76EE\u4EE3\u7801</h2><p>\u4F7F\u7528 <code>javascript-obfuscator</code> \u6DF7\u6DC6\u672C\u5730\u6587\uFF0C\u4FDD\u7559\u539F\u59CB\u76EE\u5F55</p><p>\u5148\u5168\u5C40\u5B89\u88C5 <code>npm i javascript-obfuscator -g</code></p><p>\u7F16\u5199 <code>obfuscator.js</code> \u6587\u4EF6</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> process <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> cprocess <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bytenode <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;bytenode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6DF7\u6DC6\u8F93\u51FA\u8DEF\u5F84</span>
<span class="token keyword">const</span> packagePath <span class="token operator">=</span> <span class="token string">&quot;./dist&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// \u4E0D\u9700\u8981\u6DF7\u6DC6\u7684\u6587\u4EF6\u6216\u8005\u6587\u4EF6\u5939\u6216\u6587\u4EF6\u5939\u53CA\u5176\u4E0B\u6587\u4EF6</span>
<span class="token keyword">const</span> exitFile <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;node_modules&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.git&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;logs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;public&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;obfuscator.js&#39;</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>packagePath<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>


<span class="token comment">/**
 * \u540C\u6B65\u521B\u5EFA\u6587\u4EF6\u5939
 * @param dirname
 * @returns {boolean|void}
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">mkdirFolderSync</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dirname</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>dirname<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;folder exists!&#39;</span><span class="token punctuation">,</span> dirname<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> result <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>dirname<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;folder create success!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;folder create error!&#39;</span><span class="token punctuation">,</span> dirname<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
 * \u5F02\u6B65\u62F7\u8D1D\u6587\u4EF6
 * @param src
 * @param dest
 * @returns {boolean|void}
 */</span>
<span class="token keyword">const</span> <span class="token function-variable function">copyFile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">src<span class="token punctuation">,</span> dest</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// fs.promises.copyFile(src, dest, fs.constants.COPYFILE_EXCL).then(res =&gt; {</span>
    fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">copyFile</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dest<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token comment">// \u8986\u76D6</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;file copy success!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;file copy error!&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> <span class="token function-variable function">recur</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dir</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u7F16\u8BD1=&gt;\u83B7\u53D6\u672C\u5730\u6587\u4EF6\u76EE\u5F55\u5931\u8D25&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> files<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> fileName <span class="token operator">=</span> files<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>exitFile<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=&gt;</span> i <span class="token operator">===</span> fileName<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">continue</span>
            <span class="token keyword">let</span> stat <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> execPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> execCopyPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>dir<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>packagePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>stat<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> suffix <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>execPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>suffix <span class="token operator">!==</span> <span class="token string">&#39;.js&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">copyFile</span><span class="token punctuation">(</span>execPath<span class="token punctuation">,</span> execCopyPath<span class="token punctuation">)</span>
                    <span class="token keyword">continue</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u5F00\u59CB\u6DF7\u6DC6\u4EE3\u7801</span>
                cprocess<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">javascript-obfuscator </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>execPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> --output </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>execCopyPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;error:&quot;</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    process<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Code confusion...</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>stdout<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u6DF7\u6DC6\u540E\u518D\u8F6C\u5B57\u8282\u7801</span>
                <span class="token comment">// let compiledFilename = await  bytenode.compileFile({</span>
                <span class="token comment">//     filename: execPath,</span>
                <span class="token comment">//     output: path.basename(execCopyPath,&#39;.js&#39;) + &#39;.js&#39;</span>
                <span class="token comment">// });</span>
                <span class="token comment">// console.log(2, compiledFilename)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">mkdirFolderSync</span><span class="token punctuation">(</span>execCopyPath<span class="token punctuation">)</span>
                <span class="token function">recur</span><span class="token punctuation">(</span>execPath<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>packagePath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">mkdirFolderSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>packagePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">recur</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;./&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;exit&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    process<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;\u4EE3\u7801\u6DF7\u6DC6\u5B8C\u6BD5\uFF01\u8BF7\u5728&#39;</span> <span class="token operator">+</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>packagePath<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;\u6587\u4EF6\u4E2D\u6E05\u70B9,\u9700\u8981\u60A8\u91CD\u65B0\u5B89\u88C5\u4E0B\u4F9D\u8D56&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br></div></div><p>\u7F16\u5199 <code>package\u4E2D\u7684 \u811A\u672C</code></p><div class="language-json line-numbers-mode"><pre><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u563B\u563B\u563B\u563B\u563B\u563B\u563B\u563B\u563B\u563B\u563B\u563B\u563B&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodemon bin/www&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;obfuscatorBuild&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node obfuscator.js&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u7136\u540E\u518D\u5C0F\u9ED1\u7A97\u4E2D\u8F93\u5165 <code>npm run obfuscatorBuild</code> \u5373\u53EF\u7F16\u8BD1\u6210\u529F</p><p><img src="https://cdnforspeed.oss-cn-beijing.aliyuncs.com/Img/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/20220706155421.png" alt=""></p><p><img src="https://cdnforspeed.oss-cn-beijing.aliyuncs.com/Img/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/20220706155422.png" alt=""></p><p><img src="https://cdnforspeed.oss-cn-beijing.aliyuncs.com/Img/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/20220706155853.png" alt=""></p><p>\u4E0D\u53EAapp.js \u6DF7\u6DC6\u4E86 \u5176\u4ED6\u6587\u4EF6\u90FD\u6DF7\u6DC6\u4E86 \u8FD9\u8FB9\u6CA1\u505A\u5F00\u5C55\u793A</p><h2 id="\u4F7F\u7528pkg\u6253\u5305\u6574\u4E2A\u9879\u76EE" tabindex="-1">\u4F7F\u7528pkg\u6253\u5305\u6574\u4E2A\u9879\u76EE</h2><p>\u6253\u5305\u5F88\u7B80\u5355 \u5C31\u76F4\u63A5\u4E00\u884C\u547D\u4EE4 <code>pkg -t node14-win-x64 ./bin/www.js</code></p><ul><li><code>./bin/www.js</code> \u662F\u6211\u7684\u5165\u53E3\u6587\u4EF6 \u6709\u9879\u76EE\u7ED3\u6784\u7684\u65F6\u5019\u6211\u4E00\u822C\u662F\u8FD9\u4E48\u542F\u52A8\u7684 <code>nodemon bin/www.js</code></li><li><code>node14-win-x64</code> \u662F\u5B89\u88C5\u7684\u7248\u672C \u6211\u672C\u5730\u88C5\u7684\u662Fnode 14.19.1\u7248\u672C \u64CD\u4F5C\u7CFB\u7EDF\u662F64\u4F4D</li></ul><h3 id="\u5751\uFF1A\u4E0D\u652F\u6301\u52A8\u6001\u5F15\u5165\u7684\u65B9\u6CD5" tabindex="-1">\u5751\uFF1A\u4E0D\u652F\u6301\u52A8\u6001\u5F15\u5165\u7684\u65B9\u6CD5</h3><p>\u5982\u4E0B\u8BF4\u660E</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">let</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>resolve<span class="token punctuation">,</span> basename<span class="token punctuation">,</span> join<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// \u4E0D\u6253\u5305 \u76F4\u63A5\u8FD0\u884C\u5199\u6CD5</span>
<span class="token comment">// module.exports = fs.readdirSync(join(__dirname, &#39;./&#39;)).reduce((obj, path,index) =&gt; {</span>
<span class="token comment">//     if (path == &#39;index.js&#39;) return obj</span>
<span class="token comment">//     obj[\`\${basename(path, &quot;.js&quot;)}\`] = require(join(__dirname,\`./\${path}\`))</span>
<span class="token comment">//     return obj</span>
<span class="token comment">// }, {})</span>


<span class="token comment">// \u6253\u5305\u540E\u6587\u4EF6\u52A0\u8F7D\u5199\u6CD5</span>
<span class="token keyword">const</span> cgjy <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./cgjy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> ggapi <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./ggapi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> hdkj <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./hdkj&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> nh <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./nh&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sgj <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./sgj&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    cgjy<span class="token punctuation">,</span> ggapi<span class="token punctuation">,</span> hdkj<span class="token punctuation">,</span> nh<span class="token punctuation">,</span> sgj
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="\u5EFA\u8BAE\uFF1A\u4F7F\u7528process-cwd" tabindex="-1">\u5EFA\u8BAE\uFF1A\u4F7F\u7528process.cwd()</h3><p>\u5BF9\u4E8E\u7EDD\u5BF9\u8DEF\u5F84\u7684\u52A0\u6307\u5B9A\u6587\u4EF6\u7684 \u6700\u597D\u62C6\u5F00\u6765 \u6216\u8005\u4F7F\u7528process.cwd() + &#39;\u8DEF\u5F84\u7684\u5F62\u5F0F&#39; \u5982</p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// \u81EA\u52A8\u540C\u6B65\u3010\u81EA\u5B9A\u4E49\u5206\u949F\u3011\u524D\u7684\u65E5\u5FD7\u5165\u5E93</span>
<span class="token function">logAutoSync</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 <span class="token literal-property property">prefixDir</span><span class="token operator">:</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;./logs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u8DEF\u5F84\u524D\u7F00</span>
 <span class="token literal-property property">LogRetentionDuration</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token comment">// \u4FDD\u7559\u8FD112\u5C0F\u65F6\u7684\u65E5\u5FD7\u3010\u6267\u884C\u5220\u9664\u4F1A\u5728\u51CC\u66682~6\u70B9\u5185\u6267\u884C\u4E00\u6B21\u3011</span>
 <span class="token literal-property property">timeThreshold</span><span class="token operator">:</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token comment">// \u65F6\u95F4\u9608\u503C \u53D6\u524D3\u5206\u949F\u5230\u524D6\u5206\u949F\u4E4B\u5185\u7684\u65E5\u5FD7\u6587\u4EF6</span>
 <span class="token literal-property property">syncFileLogList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;api&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;system&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// \u9700\u8981\u540C\u6B65\u7684\u672C\u5730\u65E5\u5FD7\u4E8C\u7EA7\u76EE\u5F55</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u5173\u4E8E\u8FD0\u884Cexe\u6587\u4EF6-\u60F3\u770B\u65E5\u5FD7" tabindex="-1">\u5173\u4E8E\u8FD0\u884Cexe\u6587\u4EF6 \u60F3\u770B\u65E5\u5FD7</h3><p>\u76F4\u63A5\u4F7F\u7528window\u81EA\u5E26\u7684dos\u547D\u4EE4\u53BB\u6253\u5F00</p><p>\u5982 <code>D:\\project\\middleware&gt;www.exe</code></p><h3 id="\u5173\u4E8E\u6253\u5305\u5B8C\u4E4B\u540E\u8BBF\u95EE\u4E0D\u5230\u672C\u5730\u6587\u4EF6" tabindex="-1">\u5173\u4E8E\u6253\u5305\u5B8C\u4E4B\u540E\u8BBF\u95EE\u4E0D\u5230\u672C\u5730\u6587\u4EF6</h3><p>\u4FEE\u6539\u672C\u5730\u89E3\u6790\u8DEF\u5F84,\u5728exe\u6587\u4EF6\u7684\u540C\u7EA7\u76EE\u5F55\u4E2D\u6709public\u6587\u4EF6\u5373\u53EF\u8BBF\u95EE\u5230</p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">/*app.js*/</span>

<span class="token comment">// \u9759\u6001\u6587\u4EF6\u89E3\u6790---\u4FEE\u6539\u524D</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-static&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;./public&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token comment">// \u9759\u6001\u6587\u4EF6\u89E3\u6790---\u4FEE\u6539\u540E</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-static&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;/public&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u5B8C\u6574\u7684\u6253\u5305\u65B9\u6CD5\uFF1A" tabindex="-1">\u5B8C\u6574\u7684\u6253\u5305\u65B9\u6CD5\uFF1A</h3><p>\u7F16\u5199 <code>pkgscript.js</code> \u811A\u672C\u6587\u4EF6</p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">/*pkgscript.js*/</span>
<span class="token keyword">const</span> process <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;node:process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> cprocess <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;child_process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> commands <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">mkdirFolderSync</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dirname</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>dirname<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;folder exists!&#39;</span><span class="token punctuation">,</span> dirname<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> result <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>dirname<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// console.log(&#39;folder create success!&#39;);</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// console.log(&#39;folder create error!&#39;, dirname);</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">copyFile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">src<span class="token punctuation">,</span> dest</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">copyFile</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dest<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token comment">// console.log(&#39;file copy success!&#39;);</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;file copy error!&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">recurCopyFolder</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fromPath<span class="token punctuation">,</span> toPath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token function-variable function">recur</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fromPath<span class="token punctuation">,</span> toPath</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>fromPath<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u7F16\u8BD1=&gt;\u83B7\u53D6\u672C\u5730\u6587\u4EF6\u76EE\u5F55\u5931\u8D25&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> files<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> fileName <span class="token operator">=</span> files<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> stat <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>fromPath<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> execPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>fromPath<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">let</span> execCopyPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>toPath<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>stat<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">await</span> <span class="token function">copyFile</span><span class="token punctuation">(</span>execPath<span class="token punctuation">,</span> execCopyPath<span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token function">mkdirFolderSync</span><span class="token punctuation">(</span>execCopyPath<span class="token punctuation">)</span>
                    <span class="token function">recur</span><span class="token punctuation">(</span>execPath<span class="token punctuation">,</span>execCopyPath<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">recur</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> comObj <span class="token operator">=</span> commands<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> command<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> commandCut <span class="token operator">=</span> command<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> key <span class="token operator">=</span> commandCut<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> value <span class="token operator">=</span> commandCut<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token keyword">return</span> obj
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token constant">HANDLE_OUTPATH</span> <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> comObj<span class="token punctuation">[</span><span class="token string">&#39;--out-path&#39;</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&quot;/dist&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">HANDLE_ASSETS</span> <span class="token operator">=</span> comObj<span class="token punctuation">[</span><span class="token string">&#39;--assets&#39;</span><span class="token punctuation">]</span> <span class="token operator">?</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> comObj<span class="token punctuation">[</span><span class="token string">&#39;--assets&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token constant">OUTPATH</span> <span class="token operator">=</span> comObj<span class="token punctuation">[</span><span class="token string">&#39;--out-path&#39;</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&#39;/dist&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">ASSETS</span> <span class="token operator">=</span> comObj<span class="token punctuation">[</span><span class="token string">&#39;--assets&#39;</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">ENTRANCE</span> <span class="token operator">=</span> comObj<span class="token punctuation">[</span><span class="token string">&#39;--entrance&#39;</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&#39;app.js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">TARGET</span> <span class="token operator">=</span> comObj<span class="token punctuation">[</span><span class="token string">&#39;--target&#39;</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&#39;node14-win-x64&#39;</span><span class="token punctuation">;</span>

<span class="token function">mkdirFolderSync</span><span class="token punctuation">(</span><span class="token constant">HANDLE_OUTPATH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// copy file</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">HANDLE_ASSETS</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> shotAccets <span class="token operator">=</span> comObj<span class="token punctuation">[</span><span class="token string">&#39;--assets&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">HANDLE_ASSETS</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">mkdirFolderSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token constant">HANDLE_OUTPATH</span><span class="token punctuation">,</span>shotAccets<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">recurCopyFolder</span><span class="token punctuation">(</span><span class="token constant">HANDLE_ASSETS</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token constant">HANDLE_OUTPATH</span><span class="token punctuation">,</span> shotAccets<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">mkdirFolderSync</span><span class="token punctuation">(</span><span class="token constant">HANDLE_ASSETS</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6B63\u5728\u6253\u5305\u4E2D\uFF0C\u8BF7\u7A0D\u7B49....&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
cprocess<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">pkg -t </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">TARGET</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">ENTRANCE</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> --out-path=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">OUTPATH</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;error:&quot;</span> <span class="token operator">+</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    process<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Code confusion...</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>stdout<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;exit&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    process<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6253\u5305\u6210\u529F\uFF01\u8BF7\u5728</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">HANDLE_OUTPATH</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u4E2D\u6E05\u70B9\u6587\u4EF6</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br></div></div><p>\u5728 <code>package.json</code> \u6587\u4EF6\u4E2D\u6DFB\u52A0script\u547D\u4EE4</p><div class="language-json line-numbers-mode"><pre><code> <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodemon bin/www&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;obfuscatorBuild&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node obfuscator.js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;pkg-win64&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node pkgscript.js --assets=public/* --out-path=ExecutableFile/ --target=node14-win-x64 --entrance=./bin/www.js&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD0\u884C\uFF1A<code>npm run pkg-win64</code></p><p><img src="https://cdnforspeed.oss-cn-beijing.aliyuncs.com/Img/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87/20220707135100.png" alt=""></p>`,43),e=[o];function c(l,u,i,r,k,b){return a(),s("div",null,e)}var f=n(t,[["render",c]]);export{d as __pageData,f as default};
